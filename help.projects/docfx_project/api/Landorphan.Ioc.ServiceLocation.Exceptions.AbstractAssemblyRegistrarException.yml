### YamlMime:ManagedReference
items:
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  id: AbstractAssemblyRegistrarException
  parent: Landorphan.Ioc.ServiceLocation.Exceptions
  children:
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.String)
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.String,System.Exception)
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type)
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type,System.Exception)
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type,System.String,System.Exception)
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType
  - Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  - vb
  name: AbstractAssemblyRegistrarException
  nameWithType: AbstractAssemblyRegistrarException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  type: Class
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: AbstractAssemblyRegistrarException
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 14
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nException thrown when service location finds an abstract implementation of <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class AbstractAssemblyRegistrarException : LandorphanIocServiceLocationException, ISerializable'
    content.vb: >-
      Public NotInheritable Class AbstractAssemblyRegistrarException
          Inherits LandorphanIocServiceLocationException
          Implements ISerializable
  seealso:
  - linkId: Landorphan.Ioc.ServiceLocation.Exceptions.LandorphanIocServiceLocationException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.LandorphanIocServiceLocationException
  inheritance:
  - System.Object
  - System.Exception
  - Landorphan.Common.Exceptions.LandorphanException
  - Landorphan.Ioc.ServiceLocation.Exceptions.LandorphanIocServiceLocationException
  implements:
  - System.Runtime.Serialization.ISerializable
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor
  commentId: M:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor
  id: '#ctor'
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: AbstractAssemblyRegistrarException()
  nameWithType: AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException()
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException()
  type: Constructor
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: .ctor
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 19
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AbstractAssemblyRegistrarException()
    content.vb: Public Sub New
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: AbstractAssemblyRegistrarException(String)
  nameWithType: AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(String)
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(System.String)
  type: Constructor
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: .ctor
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 29
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AbstractAssemblyRegistrarException(string message)
    parameters:
    - id: message
      type: System.String
      description: "\nThe message that describes the error.\n"
    content.vb: Public Sub New(message As String)
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.String,System.Exception)
  commentId: M:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: AbstractAssemblyRegistrarException(String, Exception)
  nameWithType: AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(String, Exception)
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: .ctor
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 42
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AbstractAssemblyRegistrarException(string message, Exception innerException)
    parameters:
    - id: message
      type: System.String
      description: "\nThe error message that explains the reason for the exception.\n"
    - id: innerException
      type: System.Exception
      description: "\nThe exception that is the cause of the current exception, or a null reference if no inner exception is specified.\n"
    content.vb: Public Sub New(message As String, innerException As Exception)
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: AbstractAssemblyRegistrarException(Type)
  nameWithType: AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(Type)
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(System.Type)
  type: Constructor
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: .ctor
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 52
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AbstractAssemblyRegistrarException(Type abstractType)
    parameters:
    - id: abstractType
      type: System.Type
      description: "\nThe abstract type that gave rise to this exception.\n"
    content.vb: Public Sub New(abstractType As Type)
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type,System.Exception)
  commentId: M:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type,System.Exception)
  id: '#ctor(System.Type,System.Exception)'
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: AbstractAssemblyRegistrarException(Type, Exception)
  nameWithType: AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(Type, Exception)
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(System.Type, System.Exception)
  type: Constructor
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: .ctor
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 65
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AbstractAssemblyRegistrarException(Type abstractType, Exception innerException)
    parameters:
    - id: abstractType
      type: System.Type
      description: "\nThe abstract type that gave rise to this exception.\n"
    - id: innerException
      type: System.Exception
      description: "\nThe exception that is the cause of the current exception, or a null reference if no inner exception is specified.\n"
    content.vb: Public Sub New(abstractType As Type, innerException As Exception)
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type,System.String,System.Exception)
  commentId: M:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor(System.Type,System.String,System.Exception)
  id: '#ctor(System.Type,System.String,System.Exception)'
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: AbstractAssemblyRegistrarException(Type, String, Exception)
  nameWithType: AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(Type, String, Exception)
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException(System.Type, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: .ctor
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 81
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AbstractAssemblyRegistrarException(Type abstractType, string message, Exception innerException)
    parameters:
    - id: abstractType
      type: System.Type
      description: "\nThe abstract type that gave rise to this exception.\n"
    - id: message
      type: System.String
      description: "\nThe error message that explains the reason for the exception.\n"
    - id: innerException
      type: System.Exception
      description: "\nThe exception that is the cause of the current exception, or a null reference if no inner exception is specified.\n"
    content.vb: Public Sub New(abstractType As Type, message As String, innerException As Exception)
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: AbstractAssemblyRegistrarException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetObjectData
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 102
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  example: []
  syntax:
    content: public override void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Public Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overridden: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType
  commentId: P:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType
  id: AbstractType
  parent: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  langs:
  - csharp
  - vb
  name: AbstractType
  nameWithType: AbstractAssemblyRegistrarException.AbstractType
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: AbstractType
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Exceptions/LandorphanIocServiceExcepions/AbstractAssemblyRegistrarException.cs
    startLine: 116
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Exceptions
  summary: "\nGets the abstract type that gave rise to this exception.\n"
  example: []
  syntax:
    content: public Type AbstractType { get; }
    parameters: []
    return:
      type: System.Type
      description: "\nThe type of the abstract.\n"
    content.vb: Public ReadOnly Property AbstractType As Type
  overload: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IAssemblySelfRegistration
  nameWithType: IAssemblySelfRegistration
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.LandorphanIocServiceLocationException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.LandorphanIocServiceLocationException
  parent: Landorphan.Ioc.ServiceLocation.Exceptions
  name: LandorphanIocServiceLocationException
  nameWithType: LandorphanIocServiceLocationException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.LandorphanIocServiceLocationException
- uid: Landorphan.Ioc.ServiceLocation.Exceptions
  commentId: N:Landorphan.Ioc.ServiceLocation.Exceptions
  name: Landorphan.Ioc.ServiceLocation.Exceptions
  nameWithType: Landorphan.Ioc.ServiceLocation.Exceptions
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Landorphan.Common.Exceptions.LandorphanException
  commentId: T:Landorphan.Common.Exceptions.LandorphanException
  parent: Landorphan.Common.Exceptions
  isExternal: true
  name: LandorphanException
  nameWithType: LandorphanException
  fullName: Landorphan.Common.Exceptions.LandorphanException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Landorphan.Ioc.ServiceLocation.Interfaces
  commentId: N:Landorphan.Ioc.ServiceLocation.Interfaces
  name: Landorphan.Ioc.ServiceLocation.Interfaces
  nameWithType: Landorphan.Ioc.ServiceLocation.Interfaces
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Common.Exceptions
  commentId: N:Landorphan.Common.Exceptions
  isExternal: true
  name: Landorphan.Common.Exceptions
  nameWithType: Landorphan.Common.Exceptions
  fullName: Landorphan.Common.Exceptions
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
  name: AbstractAssemblyRegistrarException
  nameWithType: AbstractAssemblyRegistrarException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.#ctor
  name: AbstractAssemblyRegistrarException
  nameWithType: AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractAssemblyRegistrarException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData
  name: GetObjectData
  nameWithType: AbstractAssemblyRegistrarException.GetObjectData
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.GetObjectData
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType
  name: AbstractType
  nameWithType: AbstractAssemblyRegistrarException.AbstractType
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.AbstractAssemblyRegistrarException.AbstractType
