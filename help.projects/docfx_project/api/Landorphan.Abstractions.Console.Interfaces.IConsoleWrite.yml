### YamlMime:ManagedReference
items:
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  id: IConsoleWrite
  parent: Landorphan.Abstractions.Console.Interfaces
  children:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  langs:
  - csharp
  - vb
  name: IConsoleWrite
  nameWithType: IConsoleWrite
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  type: Interface
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IConsoleWrite
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 7
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nInterface for console vwz.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public interface IConsoleWrite
    content.vb: >-
      <CLSCompliant(False)>

      Public Interface IConsoleWrite
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Boolean)
  nameWithType: IConsoleWrite.Write(Boolean)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 16
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As Boolean)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  id: Write(System.Char)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Char)
  nameWithType: IConsoleWrite.Write(Char)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 24
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(char value)
    parameters:
    - id: value
      type: System.Char
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As Char)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  id: Write(System.Char[])
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Char[])
  nameWithType: IConsoleWrite.Write(Char[])
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 32
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(char[] buffer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\nThe buffer to write.\n"
    content.vb: Sub Write(buffer As Char())
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
  nameWithType.vb: IConsoleWrite.Write(Char())
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char())
  name.vb: Write(Char())
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Decimal)
  nameWithType: IConsoleWrite.Write(Decimal)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 40
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As Decimal)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  id: Write(System.Double)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Double)
  nameWithType: IConsoleWrite.Write(Double)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 48
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(double value)
    parameters:
    - id: value
      type: System.Double
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As Double)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  id: Write(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Int32)
  nameWithType: IConsoleWrite.Write(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 56
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(int value)
    parameters:
    - id: value
      type: System.Int32
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As Integer)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  id: Write(System.Int64)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Int64)
  nameWithType: IConsoleWrite.Write(Int64)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 64
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(long value)
    parameters:
    - id: value
      type: System.Int64
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As Long)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  id: Write(System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Object)
  nameWithType: IConsoleWrite.Write(Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 72
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(object value)
    parameters:
    - id: value
      type: System.Object
      description: "\nThe value to write or <code> null </code>.\n"
    content.vb: Sub Write(value As Object)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  id: Write(System.Single)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Single)
  nameWithType: IConsoleWrite.Write(Single)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 80
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(float value)
    parameters:
    - id: value
      type: System.Single
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As Single)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  id: Write(System.String)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: IConsoleWrite.Write(String)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 88
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(string value)
    parameters:
    - id: value
      type: System.String
      description: "\nThe value to write.\n"
    content.vb: Sub Write(value As String)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(UInt32)
  nameWithType: IConsoleWrite.Write(UInt32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 96
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      void Write(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: "\nThe value to write.\n"
    content.vb: >-
      <CLSCompliant(False)>

      Sub Write(value As UInteger)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(UInt64)
  nameWithType: IConsoleWrite.Write(UInt64)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 105
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      void Write(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: "\nThe value to write.\n"
    content.vb: >-
      <CLSCompliant(False)>

      Sub Write(value As ULong)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(String, Object)
  nameWithType: IConsoleWrite.Write(String, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 117
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified Object to the standard output stream using the specified format information.\n"
  example: []
  syntax:
    content: void Write(string format, object arg0)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nAn argument to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Sub Write(format As String, arg0 As Object)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(String, Object[])
  nameWithType: IConsoleWrite.Write(String, Object[])
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 128
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified values to the standard output stream using the specified format information.\n"
  example: []
  syntax:
    content: void Write(string format, params object[] arg)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg
      type: System.Object[]
      description: "\nAn array of objects to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Sub Write(format As String, ParamArray arg As Object())
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
  nameWithType.vb: IConsoleWrite.Write(String, Object())
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object())
  name.vb: Write(String, Object())
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(Char[], Int32, Int32)
  nameWithType: IConsoleWrite.Write(Char[], Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 142
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified Object to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(char[] buffer, int index, int count)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\nAn array of Unicode characters.\n"
    - id: index
      type: System.Int32
      description: "\nThe starting position in <code data-dev-comment-type=\"paramref\" class=\"paramref\">buffer</code>.\n"
    - id: count
      type: System.Int32
      description: "\nThe number of characters to write.\n"
    content.vb: Sub Write(buffer As Char(), index As Integer, count As Integer)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
  nameWithType.vb: IConsoleWrite.Write(Char(), Int32, Int32)
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(String, Object, Object)
  nameWithType: IConsoleWrite.Write(String, Object, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 156
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified objects to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(string format, object arg0, object arg1)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nThe first Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg1
      type: System.Object
      description: "\nThe second Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Sub Write(format As String, arg0 As Object, arg1 As Object)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  langs:
  - csharp
  - vb
  name: Write(String, Object, Object, Object)
  nameWithType: IConsoleWrite.Write(String, Object, Object, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleWrite.cs
    startLine: 173
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nWrites the text representation of the specified objects to the standard output stream.\n"
  example: []
  syntax:
    content: void Write(string format, object arg0, object arg1, object arg2)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nThe first Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg1
      type: System.Object
      description: "\nThe second Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg2
      type: System.Object
      description: "\nThe third Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Sub Write(format As String, arg0 As Object, arg1 As Object, arg2 As Object)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
references:
- uid: Landorphan.Abstractions.Console.Interfaces
  commentId: N:Landorphan.Abstractions.Console.Interfaces
  name: Landorphan.Abstractions.Console.Interfaces
  nameWithType: Landorphan.Abstractions.Console.Interfaces
  fullName: Landorphan.Abstractions.Console.Interfaces
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  name: Write
  nameWithType: IConsoleWrite.Write
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
