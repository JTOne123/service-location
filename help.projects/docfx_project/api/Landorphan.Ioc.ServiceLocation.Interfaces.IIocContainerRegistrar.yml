### YamlMime:ManagedReference
items:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  id: IIocContainerRegistrar
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  children:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationAdded
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationRemoved
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type,System.String,System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type,System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation``2
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation``2(System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type,System.Object)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type,System.String,System.Object)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance``1(``0)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance``1(System.String,``0)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type,System.String,System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type,System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation``2
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation``2(System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type,System.Object)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type,System.String,System.Object)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance``1(``0)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance``1(System.String,``0)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type,System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister``1
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister``1(System.String)
  langs:
  - csharp
  - vb
  name: IIocContainerRegistrar
  nameWithType: IIocContainerRegistrar
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  type: Interface
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IIocContainerRegistrar
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 24
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRepresents registration services for an <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer\" data-throw-if-not-resolved=\"false\"></xref> container.\n"
  remarks: "\n<p>\nWrites registrations and container-specific &apos;overrides&apos; to the container and provides notification of the same.\n</p>\n<p>\nEither the implementation type or the implementation type is required to register the registration type.\n</p>\n<p>\nRemoval of the registration type requires only the registration type, and optionally the name of the registration.\n</p>\n<p>\n<xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer\" data-throw-if-not-resolved=\"false\"></xref> works in concert with a <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager\" data-throw-if-not-resolved=\"false\"></xref>, a <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar\" data-throw-if-not-resolved=\"false\"></xref>,  and a <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: 'public interface IIocContainerRegistrar : IIocContainerRegistrationRepository, IIocContainerMetaSharedCapacities, IIocContainerMetaIdentity'
    content.vb: >-
      Public Interface IIocContainerRegistrar
          Inherits IIocContainerMetaSharedCapacities, IIocContainerRegistrationRepository
  inheritedMembers:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Registrations
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
  extensionMethods:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type,System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type,System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationAdded
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationAdded
  id: ContainerRegistrationAdded
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: ContainerRegistrationAdded
  nameWithType: IIocContainerRegistrar.ContainerRegistrationAdded
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationAdded
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ContainerRegistrationAdded
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 30
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nOccurs when a type is registered with this container.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerTypeRegistrationEventArgs> ContainerRegistrationAdded
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs}
    content.vb: Event ContainerRegistrationAdded As EventHandler(Of ContainerTypeRegistrationEventArgs)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationRemoved
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationRemoved
  id: ContainerRegistrationRemoved
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: ContainerRegistrationRemoved
  nameWithType: IIocContainerRegistrar.ContainerRegistrationRemoved
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.ContainerRegistrationRemoved
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ContainerRegistrationRemoved
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 35
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nOccurs when a type is unregistered with this container.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerTypeRegistrationEventArgs> ContainerRegistrationRemoved
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs}
    content.vb: Event ContainerRegistrationRemoved As EventHandler(Of ContainerTypeRegistrationEventArgs)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation``2
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation``2
  id: RegisterImplementation``2
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterImplementation<TFrom, TTo>()
  nameWithType: IIocContainerRegistrar.RegisterImplementation<TFrom, TTo>()
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation<TFrom, TTo>()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 60
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and implementation with this container as the default implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTo</code> type.\n</p>\n"
  example: []
  syntax:
    content: >-
      void RegisterImplementation<TFrom, TTo>()
          where TFrom : class where TTo : class, TFrom, new()
    typeParameters:
    - id: TFrom
      description: "\nThe interface or abstract type to register.\n"
    - id: TTo
      description: "\nThe implementation type.\n"
    content.vb: Sub RegisterImplementation(Of TFrom As Class, TTo As {Class, TFrom, New})
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a default (un-named) interface or abstract type of the given <typeparmref name=\"TFrom\"></typeparmref> has already been registered with this container registrar.\n"
  nameWithType.vb: IIocContainerRegistrar.RegisterImplementation(Of TFrom, TTo)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(Of TFrom, TTo)()
  name.vb: RegisterImplementation(Of TFrom, TTo)()
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type,System.Type)
  id: RegisterImplementation(System.Type,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterImplementation(Type, Type)
  nameWithType: IIocContainerRegistrar.RegisterImplementation(Type, Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 85
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and implementation with this container as the default implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n</p>\n"
  example: []
  syntax:
    content: void RegisterImplementation(Type fromType, Type toType)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of interface or abstract class to register.\n"
    - id: toType
      type: System.Type
      description: "\nThe implementation type.  (Requires a public default constructor; lazily loaded).\n"
    content.vb: Sub RegisterImplementation(fromType As Type, toType As Type)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a default (un-named) interface or abstract type of the given <parmref name=\"fromType\"></parmref> has already been registered with this container registrar.\n"
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation``2(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation``2(System.String)
  id: RegisterImplementation``2(System.String)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterImplementation<TFrom, TTo>(String)
  nameWithType: IIocContainerRegistrar.RegisterImplementation<TFrom, TTo>(String)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation<TFrom, TTo>(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 117
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and implementation with this container as a named implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTo</code> type.\n</p>\n"
  example: []
  syntax:
    content: >-
      void RegisterImplementation<TFrom, TTo>(string name)
          where TFrom : class where TTo : class, TFrom, new()
    parameters:
    - id: name
      type: System.String
      description: "\nName to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe interface or abstract type to register.\n"
    - id: TTo
      description: "\nThe implementation type.  (Requires a public default constructor; lazily loaded).\n"
    content.vb: Sub RegisterImplementation(Of TFrom As Class, TTo As {Class, TFrom, New})(name As String)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a named interface or abstract type of the given <typeparmref name=\"TFrom\"></typeparmref> and the given name <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>\nhas already been registered with this container registrar.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    description: "\nThrown when the container is configured to disallow named registrations and <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> is neither null nor empty.\n"
  nameWithType.vb: IIocContainerRegistrar.RegisterImplementation(Of TFrom, TTo)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(Of TFrom, TTo)(System.String)
  name.vb: RegisterImplementation(Of TFrom, TTo)(String)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type,System.String,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type,System.String,System.Type)
  id: RegisterImplementation(System.Type,System.String,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterImplementation(Type, String, Type)
  nameWithType: IIocContainerRegistrar.RegisterImplementation(Type, String, Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation(System.Type, System.String, System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 149
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and implementation with this container as a named implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n</p>\n"
  example: []
  syntax:
    content: void RegisterImplementation(Type fromType, string name, Type toType)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of interface or abstract class to register.\n"
    - id: name
      type: System.String
      description: "\nName to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    - id: toType
      type: System.Type
      description: "\nThe type of implementation.\n"
    content.vb: Sub RegisterImplementation(fromType As Type, name As String, toType As Type)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a named interface or abstract type of the given <parmref name=\"fromType\"></parmref> and the given name <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>\nhas already been registered with this container registrar.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    description: "\nThrown when the container is configured to disallow named registrations and <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> is neither null nor empty.\n"
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance``1(``0)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance``1(``0)
  id: RegisterInstance``1(``0)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterInstance<TFrom>(TFrom)
  nameWithType: IIocContainerRegistrar.RegisterInstance<TFrom>(TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance<TFrom>(TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 174
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and instance with this container as the default instance.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered implementations of the of the same implementation type as <code data-dev-comment-type=\"paramref\" class=\"paramref\">instance</code>.\n</p>\n"
  example: []
  syntax:
    content: >-
      void RegisterInstance<TFrom>(TFrom instance)
          where TFrom : class
    parameters:
    - id: instance
      type: '{TFrom}'
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe type of instance to register.\n"
    content.vb: Sub RegisterInstance(Of TFrom As Class)(instance As TFrom)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a default (un-named) interface or abstract type of the given <typeparmref name=\"TFrom\"></typeparmref> has already been registered with this container registrar.\n"
  nameWithType.vb: IIocContainerRegistrar.RegisterInstance(Of TFrom)(TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(Of TFrom)(TFrom)
  name.vb: RegisterInstance(Of TFrom)(TFrom)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type,System.Object)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type,System.Object)
  id: RegisterInstance(System.Type,System.Object)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterInstance(Type, Object)
  nameWithType: IIocContainerRegistrar.RegisterInstance(Type, Object)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 194
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and instance with this container as the default instance.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: void RegisterInstance(Type fromType, object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of instance to register.\n"
    - id: instance
      type: System.Object
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    content.vb: Sub RegisterInstance(fromType As Type, instance As Object)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a default (un-named) interface or abstract type of the given <parmref name=\"fromType\"></parmref> has already been registered with this container registrar.\n"
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance``1(System.String,``0)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance``1(System.String,``0)
  id: RegisterInstance``1(System.String,``0)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterInstance<TFrom>(String, TFrom)
  nameWithType: IIocContainerRegistrar.RegisterInstance<TFrom>(String, TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance<TFrom>(System.String, TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 220
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and instance with this container as a named instance.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: >-
      void RegisterInstance<TFrom>(string name, TFrom instance)
          where TFrom : class
    parameters:
    - id: name
      type: System.String
      description: "\nThe identifying name to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    - id: instance
      type: '{TFrom}'
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe type of instance to register.\n"
    content.vb: Sub RegisterInstance(Of TFrom As Class)(name As String, instance As TFrom)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a named interface or abstract type of the given <parmref name=\"fromType\"></parmref> and given <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> has already been registered with this container registrar.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    description: "\nThrown when the container is configured to disallow named registrations and <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> is neither null nor empty.\n"
  nameWithType.vb: IIocContainerRegistrar.RegisterInstance(Of TFrom)(String, TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(Of TFrom)(System.String, TFrom)
  name.vb: RegisterInstance(Of TFrom)(String, TFrom)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type,System.String,System.Object)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type,System.String,System.Object)
  id: RegisterInstance(System.Type,System.String,System.Object)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: RegisterInstance(Type, String, Object)
  nameWithType: IIocContainerRegistrar.RegisterInstance(Type, String, Object)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance(System.Type, System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 246
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters a type and instance with this container as a named instance.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: void RegisterInstance(Type fromType, string name, object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of instance to register.\n"
    - id: name
      type: System.String
      description: "\nThe identifying name to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    - id: instance
      type: System.Object
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    content.vb: Sub RegisterInstance(fromType As Type, name As String, instance As Object)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a named interface or abstract type of the given <parmref name=\"fromType\"></parmref> and the given name <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> has already registered with this container registrar.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
    description: "\nThrown when the container is configured to disallow named registrations and <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> is neither null nor empty.\n"
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation``2
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation``2
  id: TryRegisterImplementation``2
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterImplementation<TFrom, TTo>()
  nameWithType: IIocContainerRegistrar.TryRegisterImplementation<TFrom, TTo>()
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation<TFrom, TTo>()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 268
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and implementation with this container as the default implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTo</code> type.\n</p>\n"
  example: []
  syntax:
    content: >-
      bool TryRegisterImplementation<TFrom, TTo>()
          where TFrom : class where TTo : class, TFrom, new()
    typeParameters:
    - id: TFrom
      description: "\nThe interface or abstract type to register.\n"
    - id: TTo
      description: "\nThe implementation type.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterImplementation(Of TFrom As Class, TTo As {Class, TFrom, New}) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation*
  nameWithType.vb: IIocContainerRegistrar.TryRegisterImplementation(Of TFrom, TTo)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(Of TFrom, TTo)()
  name.vb: TryRegisterImplementation(Of TFrom, TTo)()
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type,System.Type)
  id: TryRegisterImplementation(System.Type,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterImplementation(Type, Type)
  nameWithType: IIocContainerRegistrar.TryRegisterImplementation(Type, Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 290
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and implementation with this container as the default implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n</p>\n"
  example: []
  syntax:
    content: bool TryRegisterImplementation(Type fromType, Type toType)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of interface or abstract class to register.\n"
    - id: toType
      type: System.Type
      description: "\nThe implementation type.  (Requires a public default constructor; lazily loaded).\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterImplementation(fromType As Type, toType As Type) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation*
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation``2(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation``2(System.String)
  id: TryRegisterImplementation``2(System.String)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterImplementation<TFrom, TTo>(String)
  nameWithType: IIocContainerRegistrar.TryRegisterImplementation<TFrom, TTo>(String)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation<TFrom, TTo>(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 315
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and implementation with this container as a named implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTo</code> type.\n</p>\n"
  example: []
  syntax:
    content: >-
      bool TryRegisterImplementation<TFrom, TTo>(string name)
          where TFrom : class where TTo : class, TFrom, new()
    parameters:
    - id: name
      type: System.String
      description: "\nName to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe interface or abstract type to register.\n"
    - id: TTo
      description: "\nThe implementation type.  (Requires a public default constructor; lazily loaded).\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterImplementation(Of TFrom As Class, TTo As {Class, TFrom, New})(name As String) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation*
  nameWithType.vb: IIocContainerRegistrar.TryRegisterImplementation(Of TFrom, TTo)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(Of TFrom, TTo)(System.String)
  name.vb: TryRegisterImplementation(Of TFrom, TTo)(String)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type,System.String,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type,System.String,System.Type)
  id: TryRegisterImplementation(System.Type,System.String,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterImplementation(Type, String, Type)
  nameWithType: IIocContainerRegistrar.TryRegisterImplementation(Type, String, Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation(System.Type, System.String, System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterImplementation
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 340
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and implementation with this container as a named implementation.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered instance of the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n</p>\n"
  example: []
  syntax:
    content: bool TryRegisterImplementation(Type fromType, string name, Type toType)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of interface or abstract class to register.\n"
    - id: name
      type: System.String
      description: "\nName to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    - id: toType
      type: System.Type
      description: "\nThe type of implementation.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterImplementation(fromType As Type, name As String, toType As Type) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation*
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance``1(``0)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance``1(``0)
  id: TryRegisterInstance``1(``0)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterInstance<TFrom>(TFrom)
  nameWithType: IIocContainerRegistrar.TryRegisterInstance<TFrom>(TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance<TFrom>(TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 368
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and instance with this container as the default instance.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nSubject to collisions with registered implementations of the of the same implementation type as <code data-dev-comment-type=\"paramref\" class=\"paramref\">instance</code>.\n</p>\n"
  example: []
  syntax:
    content: >-
      bool TryRegisterInstance<TFrom>(TFrom instance)
          where TFrom : class
    parameters:
    - id: instance
      type: '{TFrom}'
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe type of instance to register.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterInstance(Of TFrom As Class)(instance As TFrom) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a default (un-named) interface or abstract type of the given <typeparmref name=\"TFrom\"></typeparmref> has already been registered with this container registrar.\n"
  nameWithType.vb: IIocContainerRegistrar.TryRegisterInstance(Of TFrom)(TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(Of TFrom)(TFrom)
  name.vb: TryRegisterInstance(Of TFrom)(TFrom)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type,System.Object)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type,System.Object)
  id: TryRegisterInstance(System.Type,System.Object)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterInstance(Type, Object)
  nameWithType: IIocContainerRegistrar.TryRegisterInstance(Type, Object)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 391
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and instance with this container as the default instance.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: bool TryRegisterInstance(Type fromType, object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of instance to register.\n"
    - id: instance
      type: System.Object
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterInstance(fromType As Type, instance As Object) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a default (un-named) interface or abstract type of the given <parmref name=\"fromType\"></parmref> has already been registered with this container registrar.\n"
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance``1(System.String,``0)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance``1(System.String,``0)
  id: TryRegisterInstance``1(System.String,``0)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterInstance<TFrom>(String, TFrom)
  nameWithType: IIocContainerRegistrar.TryRegisterInstance<TFrom>(String, TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance<TFrom>(System.String, TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 417
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and instance with this container as a named instance.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: >-
      bool TryRegisterInstance<TFrom>(string name, TFrom instance)
          where TFrom : class
    parameters:
    - id: name
      type: System.String
      description: "\nThe identifying name to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    - id: instance
      type: '{TFrom}'
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe type of instance to register.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterInstance(Of TFrom As Class)(name As String, instance As TFrom) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a named interface or abstract type of the given <parmref name=\"fromType\"></parmref> and given <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> has already been registered with this container registrar.\n"
  nameWithType.vb: IIocContainerRegistrar.TryRegisterInstance(Of TFrom)(String, TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(Of TFrom)(System.String, TFrom)
  name.vb: TryRegisterInstance(Of TFrom)(String, TFrom)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type,System.String,System.Object)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type,System.String,System.Object)
  id: TryRegisterInstance(System.Type,System.String,System.Object)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: TryRegisterInstance(Type, String, Object)
  nameWithType: IIocContainerRegistrar.TryRegisterInstance(Type, String, Object)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance(System.Type, System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TryRegisterInstance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 443
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAttempts to register a type and instance with this container as a named instance.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: bool TryRegisterInstance(Type fromType, string name, object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of instance to register.\n"
    - id: name
      type: System.String
      description: "\nThe identifying name to use for registration, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to specify the default instance.\n"
    - id: instance
      type: System.Object
      description: "\nThe implementation instance to be returned on subsequent resolutions of the interface.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>when the registration is successful; otherwise <code>false</code>.\n"
    content.vb: Function TryRegisterInstance(fromType As Type, name As String, instance As Object) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
    description: "\nThrown when the type <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> has been precluded from registration.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
    description: "\nThrown when a named interface or abstract type of the given <parmref name=\"fromType\"></parmref> and the given name <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> has already registered with this container registrar.\n"
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister``1
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister``1
  id: Unregister``1
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: Unregister<TFrom>()
  nameWithType: IIocContainerRegistrar.Unregister<TFrom>()
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister<TFrom>()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Unregister
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 462
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nUnregisters the default (un-named) type from this registration.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nDoes not throw if no such registration found.\n</p>\n"
  example: []
  syntax:
    content: >-
      bool Unregister<TFrom>()
          where TFrom : class
    typeParameters:
    - id: TFrom
      description: "\nThe type of interface or abstract class to evaluate.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when the registration was found and removed; otherwise <code>false</code> (no such registration was found).\n"
    content.vb: Function Unregister(Of TFrom As Class) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister*
  nameWithType.vb: IIocContainerRegistrar.Unregister(Of TFrom)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(Of TFrom)()
  name.vb: Unregister(Of TFrom)()
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type)
  id: Unregister(System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: Unregister(Type)
  nameWithType: IIocContainerRegistrar.Unregister(Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Unregister
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 481
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nUnregisters a default (un-named) type from this registration.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nDoes not throw if no such registration found.\n</p>\n"
  example: []
  syntax:
    content: bool Unregister(Type fromType)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of interface or abstract class to evaluate.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when the registration was found and removed; otherwise <code>false</code> (no such registration was found).\n"
    content.vb: Function Unregister(fromType As Type) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister*
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister``1(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister``1(System.String)
  id: Unregister``1(System.String)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: Unregister<TFrom>(String)
  nameWithType: IIocContainerRegistrar.Unregister<TFrom>(String)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister<TFrom>(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Unregister
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 503
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nUnregisters a named type registration from this container.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nDoes not throw if no such registration found.\n</p>\n"
  example: []
  syntax:
    content: >-
      bool Unregister<TFrom>(string name)
          where TFrom : class
    parameters:
    - id: name
      type: System.String
      description: "\nThe name to evaluate.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe type of interface or abstract class to evaluate.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when the registration was found and removed; otherwise <code>false</code> (no such registration was found).\n"
    content.vb: Function Unregister(Of TFrom As Class)(name As String) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister*
  nameWithType.vb: IIocContainerRegistrar.Unregister(Of TFrom)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(Of TFrom)(System.String)
  name.vb: Unregister(Of TFrom)(String)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type,System.String)
  id: Unregister(System.Type,System.String)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  langs:
  - csharp
  - vb
  name: Unregister(Type, String)
  nameWithType: IIocContainerRegistrar.Unregister(Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister(System.Type, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Unregister
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerRegistrar.cs
    startLine: 525
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nUnregisters a named type registration from this container.\n"
  remarks: "\n<p>\nThe chain of parent(s) and children is not evaluated.\n</p>\n<p>\nDoes not throw if no such registration found.\n</p>\n"
  example: []
  syntax:
    content: bool Unregister(Type fromType, string name)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe type of interface or abstract class to evaluate.\n"
    - id: name
      type: System.String
      description: "\nThe name to evaluate.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when the registration was found and removed; otherwise <code>false</code> (no such registration was found).\n"
    content.vb: Function Unregister(fromType As Type, name As String) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister*
references:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainer
  nameWithType: IIocContainer
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerManager
  nameWithType: IIocContainerManager
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerRegistrar
  nameWithType: IIocContainerRegistrar
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerResolver
  nameWithType: IIocContainerResolver
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver
- uid: Landorphan.Ioc.ServiceLocation.Interfaces
  commentId: N:Landorphan.Ioc.ServiceLocation.Interfaces
  name: Landorphan.Ioc.ServiceLocation.Interfaces
  nameWithType: Landorphan.Ioc.ServiceLocation.Interfaces
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Registrations
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Registrations
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  name: Registrations
  nameWithType: IIocContainerRegistrationRepository.Registrations
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Registrations
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Container
  nameWithType: IIocContainerMetaSharedCapacities.Container
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Manager
  nameWithType: IIocContainerMetaSharedCapacities.Manager
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Registrar
  nameWithType: IIocContainerMetaSharedCapacities.Registrar
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Resolver
  nameWithType: IIocContainerMetaSharedCapacities.Resolver
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  name: Name
  nameWithType: IIocContainerMetaIdentity.Name
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  name: Uid
  nameWithType: IIocContainerMetaIdentity.Uid
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  parent: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions
  definition: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name: GetRegistrationChain<TFrom>()
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>()
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>()
  nameWithType.vb: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)()
  name.vb: GetRegistrationChain(Of TFrom)()
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1
    name: GetRegistrationChain<TFrom>
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1
    name: GetRegistrationChain(Of TFrom)
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  parent: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions
  definition: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  name: GetRegistrationChain<TFrom>(String)
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>(String)
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>(System.String)
  nameWithType.vb: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)(System.String)
  name.vb: GetRegistrationChain(Of TFrom)(String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(System.String)
    name: GetRegistrationChain<TFrom>
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(System.String)
    name: GetRegistrationChain(Of TFrom)
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions
  definition: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  name: GetRegistrationChain(Type)
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(Type)
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  parent: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions
  definition: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  name: GetRegistrationChain(Type, String)
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type, System.String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type,System.String)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(System.Type,System.String)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name: IsRegistered<TFrom>()
  nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>()
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>()
  nameWithType.vb: IsRegisteredExtensions.IsRegistered(Of TFrom)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)()
  name.vb: IsRegistered(Of TFrom)()
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1
    name: IsRegistered<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1
    name: IsRegistered(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegistered(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  name: IsRegistered<TFrom>(String)
  nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>(String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>(System.String)
  nameWithType.vb: IsRegisteredExtensions.IsRegistered(Of TFrom)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)(System.String)
  name.vb: IsRegistered(Of TFrom)(String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(System.String)
    name: IsRegistered<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(System.String)
    name: IsRegistered(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegistered(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  name: IsRegistered(Type)
  nameWithType: IsRegisteredExtensions.IsRegistered(Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  name: IsRegistered(Type, String)
  nameWithType: IsRegisteredExtensions.IsRegistered(Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type, System.String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type,System.String)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(System.Type,System.String)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name: IsRegisteredChain<TFrom>()
  nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>()
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>()
  nameWithType.vb: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)()
  name.vb: IsRegisteredChain(Of TFrom)()
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1
    name: IsRegisteredChain<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1
    name: IsRegisteredChain(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  name: IsRegisteredChain<TFrom>(String)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>(String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>(System.String)
  nameWithType.vb: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(System.String)
  name.vb: IsRegisteredChain(Of TFrom)(String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(System.String)
    name: IsRegisteredChain<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(System.String)
    name: IsRegisteredChain(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  name: IsRegisteredChain(Type)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain(Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository.Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  name: IsRegisteredChain(Type, String)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain(Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type, System.String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type,System.String)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(System.Type,System.String)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerRegistrationRepository
  nameWithType: IIocContainerRegistrationRepository
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerMetaSharedCapacities
  nameWithType: IIocContainerMetaSharedCapacities
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerMetaIdentity
  nameWithType: IIocContainerMetaIdentity
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
- uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name: GetRegistrationChain<TFrom>(IIocContainerRegistrationRepository)
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>(IIocContainerRegistrationRepository)
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  nameWithType.vb: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)(IIocContainerRegistrationRepository)
  fullName.vb: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name.vb: GetRegistrationChain(Of TFrom)(IIocContainerRegistrationRepository)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
    name: GetRegistrationChain<TFrom>
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
    name: GetRegistrationChain(Of TFrom)
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions
  commentId: T:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions
  parent: Landorphan.Ioc.ServiceLocation
  name: GetRegistrationChainExtensions
  nameWithType: GetRegistrationChainExtensions
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions
- uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  isExternal: true
  name: GetRegistrationChain<TFrom>(IIocContainerRegistrationRepository, String)
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>(IIocContainerRegistrationRepository, String)
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  nameWithType.vb: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)(IIocContainerRegistrationRepository, String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  name.vb: GetRegistrationChain(Of TFrom)(IIocContainerRegistrationRepository, String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
    name: GetRegistrationChain<TFrom>
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
    name: GetRegistrationChain(Of TFrom)
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  isExternal: true
  name: GetRegistrationChain(IIocContainerRegistrationRepository, Type)
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(IIocContainerRegistrationRepository, Type)
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  isExternal: true
  name: GetRegistrationChain(IIocContainerRegistrationRepository, Type, String)
  nameWithType: GetRegistrationChainExtensions.GetRegistrationChain(IIocContainerRegistrationRepository, Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type, System.String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
    name: GetRegistrationChain
    nameWithType: GetRegistrationChainExtensions.GetRegistrationChain
    fullName: Landorphan.Ioc.ServiceLocation.GetRegistrationChainExtensions.GetRegistrationChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name: IsRegistered<TFrom>(IIocContainerRegistrationRepository)
  nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>(IIocContainerRegistrationRepository)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  nameWithType.vb: IsRegisteredExtensions.IsRegistered(Of TFrom)(IIocContainerRegistrationRepository)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name.vb: IsRegistered(Of TFrom)(IIocContainerRegistrationRepository)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
    name: IsRegistered<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
    name: IsRegistered(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegistered(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  commentId: T:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  parent: Landorphan.Ioc.ServiceLocation
  name: IsRegisteredExtensions
  nameWithType: IsRegisteredExtensions
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  isExternal: true
  name: IsRegistered<TFrom>(IIocContainerRegistrationRepository, String)
  nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>(IIocContainerRegistrationRepository, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  nameWithType.vb: IsRegisteredExtensions.IsRegistered(Of TFrom)(IIocContainerRegistrationRepository, String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  name.vb: IsRegistered(Of TFrom)(IIocContainerRegistrationRepository, String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
    name: IsRegistered<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
    name: IsRegistered(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegistered(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  isExternal: true
  name: IsRegistered(IIocContainerRegistrationRepository, Type)
  nameWithType: IsRegisteredExtensions.IsRegistered(IIocContainerRegistrationRepository, Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  isExternal: true
  name: IsRegistered(IIocContainerRegistrationRepository, Type, String)
  nameWithType: IsRegisteredExtensions.IsRegistered(IIocContainerRegistrationRepository, Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type, System.String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
    name: IsRegistered
    nameWithType: IsRegisteredExtensions.IsRegistered
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name: IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  nameWithType.vb: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name.vb: IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
    name: IsRegisteredChain<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
    name: IsRegisteredChain(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  isExternal: true
  name: IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository, String)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  nameWithType.vb: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository, String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  name.vb: IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository, String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
    name: IsRegisteredChain<TFrom>
    nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
    name: IsRegisteredChain(Of TFrom)
    nameWithType: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  isExternal: true
  name: IsRegisteredChain(IIocContainerRegistrationRepository, Type)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain(IIocContainerRegistrationRepository, Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  isExternal: true
  name: IsRegisteredChain(IIocContainerRegistrationRepository, Type, String)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain(IIocContainerRegistrationRepository, Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type, System.String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
    name: IsRegisteredChain
    nameWithType: IsRegisteredExtensions.IsRegisteredChain
    fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
    name: IIocContainerRegistrationRepository
    nameWithType: IIocContainerRegistrationRepository
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation
  commentId: N:Landorphan.Ioc.ServiceLocation
  name: Landorphan.Ioc.ServiceLocation
  nameWithType: Landorphan.Ioc.ServiceLocation
  fullName: Landorphan.Ioc.ServiceLocation
- uid: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs}
  commentId: T:System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ContainerTypeRegistrationEventArgs>
  nameWithType: EventHandler<ContainerTypeRegistrationEventArgs>
  fullName: System.EventHandler<Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs>
  nameWithType.vb: EventHandler(Of ContainerTypeRegistrationEventArgs)
  fullName.vb: System.EventHandler(Of Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs)
  name.vb: EventHandler(Of ContainerTypeRegistrationEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs
    name: ContainerTypeRegistrationEventArgs
    nameWithType: ContainerTypeRegistrationEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs
    name: ContainerTypeRegistrationEventArgs
    nameWithType: ContainerTypeRegistrationEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeRegistrationEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
  name: ContainerFromTypePrecludedArgumentException
  nameWithType: ContainerFromTypePrecludedArgumentException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypePrecludedArgumentException
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
  name: ContainerFromTypeNameAlreadyRegisteredArgumentException
  nameWithType: ContainerFromTypeNameAlreadyRegisteredArgumentException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerFromTypeNameAlreadyRegisteredArgumentException
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation
  name: RegisterImplementation
  nameWithType: IIocContainerRegistrar.RegisterImplementation
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterImplementation
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
  name: ContainerConfigurationNamedImplementationsDisabledException
  nameWithType: ContainerConfigurationNamedImplementationsDisabledException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.ContainerConfigurationNamedImplementationsDisabledException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance
  name: RegisterInstance
  nameWithType: IIocContainerRegistrar.RegisterInstance
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.RegisterInstance
- uid: '{TFrom}'
  commentId: '!:TFrom'
  definition: TFrom
  name: TFrom
  nameWithType: TFrom
  fullName: TFrom
- uid: TFrom
  name: TFrom
  nameWithType: TFrom
  fullName: TFrom
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation
  name: TryRegisterImplementation
  nameWithType: IIocContainerRegistrar.TryRegisterImplementation
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterImplementation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance
  name: TryRegisterInstance
  nameWithType: IIocContainerRegistrar.TryRegisterInstance
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.TryRegisterInstance
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister
  name: Unregister
  nameWithType: IIocContainerRegistrar.Unregister
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar.Unregister
