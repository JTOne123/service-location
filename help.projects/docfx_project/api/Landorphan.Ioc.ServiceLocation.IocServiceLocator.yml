### YamlMime:ManagedReference
items:
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  commentId: T:Landorphan.Ioc.ServiceLocation.IocServiceLocator
  id: IocServiceLocator
  parent: Landorphan.Ioc.ServiceLocation
  children:
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type,System.String)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1(System.String)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.Object@)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.String,System.Object@)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(``0@)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(System.String,``0@)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblyCollectionSelfRegistrationInvoked
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblySingleSelfRegistrationInvoked
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainer
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainerChanged
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblySingleSelfRegistrationInvoked
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#RootContainer
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type,System.String)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve``1
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve``1(System.String)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.System#IServiceProvider#GetService(System.Type)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type,System.Object@)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve``1(``0@)
  - Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve``1(System.String,``0@)
  langs:
  - csharp
  - vb
  name: IocServiceLocator
  nameWithType: IocServiceLocator
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  type: Class
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: IocServiceLocator
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 11
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nAn inversion of control service locator implementation for dependency injection.\n"
  remarks: "\n<p>\nService location allows for the narrow* resolution of registered types (and only registered types) with AppDomain life-time.\nTypical usage is as follows:\n<example><pre><code>IocServiceLocator.Resolve(typeof(IService))</code></pre></example>\nIt also allows for overrides of default implementation to support test scenarios.  To support test scenarios, implementations should perform the following:\n   1) Create a child container.\n   2) Set the ambient container to the child container.\n   3) Register services with the child container that should override the default (production/implementation) interfaces.\n   4) Execute tests\n   5) Dispose of the child container.\nAn implementation of the above pattern in provided in Landorphan.Ioc.ServiceLocation.Testability.\n</p>\n<p>\n*narrow:  Suppose InterfaceB descends from InterfaceA, and suppose InterfaceB is registered.  Attempting to resolve InterfaceA will fail.\n</p>\n<p>\nThis implementation of the service locator allows class libraries to self-register default implementations.  If you need to manually add a registration, you do so as follows:\n<example><pre><code>IocServiceLocator.RootContainer.Registrar.RegisterInstance(typeof(IService), new Service());</code></pre></example>\n</p>\n<p>\nType discovery is limited to registered types.  Inheritance is not considered.\n</p>\n<p>\nExposes service location capacities as a collection of capacities/roles in <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities\" data-throw-if-not-resolved=\"false\"></xref>.  For typical client scenarios, static methods are available\nfor simplified syntax.  For example, <xref href=\"Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type)\" data-throw-if-not-resolved=\"false\"></xref>.  For more advanced usage, use <xref href=\"Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager\" data-throw-if-not-resolved=\"false\"></xref> to monitor and manipulate the behavior\nof the service locator.\n</p>\n"
  example: []
  syntax:
    content: 'public sealed class IocServiceLocator : IIocServiceLocator, IServiceProvider, IIocServiceLocatorManager, IIocServiceLocatorMetaSharedCapacities'
    content.vb: >-
      Public NotInheritable Class IocServiceLocator
          Implements IIocServiceLocator, IServiceProvider, IIocServiceLocatorManager, IIocServiceLocatorMetaSharedCapacities
  inheritance:
  - System.Object
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  - System.IServiceProvider
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.System#IServiceProvider#GetService(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IServiceProvider.GetService(Type)
  nameWithType: IocServiceLocator.IServiceProvider.GetService(Type)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.System.IServiceProvider.GetService(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: System.IServiceProvider.GetService
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 8
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  example: []
  syntax:
    content: object IServiceProvider.GetService(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
    return:
      type: System.Object
    content.vb: Function System.IServiceProvider.GetService(serviceType As Type) As Object Implements IServiceProvider.GetService
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.System#IServiceProvider#GetService*
  implements:
  - System.IServiceProvider.GetService(System.Type)
  nameWithType.vb: IocServiceLocator.System.IServiceProvider.GetService(Type)
  name.vb: System.IServiceProvider.GetService(Type)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.Resolve<TFrom>()
  nameWithType: IocServiceLocator.IIocServiceLocator.Resolve<TFrom>()
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve<TFrom>()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 19
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves the default instance of the requested type.\n"
  example: []
  syntax:
    content: >-
      TFrom IIocServiceLocator.Resolve<TFrom>()
          where TFrom : class
    typeParameters:
    - id: TFrom
      description: "\nThe requested service interface type\n"
    return:
      type: '{TFrom}'
      description: "\nThe default implementation instance.\n"
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom As Class) As TFrom Implements IIocServiceLocator.Resolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> service default instance.\n"
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)()
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)()
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1(System.String)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve``1(System.String)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.Resolve<TFrom>(String)
  nameWithType: IocServiceLocator.IIocServiceLocator.Resolve<TFrom>(String)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve<TFrom>(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 25
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves a named instance of the requested type.\n"
  example: []
  syntax:
    content: >-
      TFrom IIocServiceLocator.Resolve<TFrom>(string name)
          where TFrom : class
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the instance to retrieve, null or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> for the default instance.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe requested service interface type.\n"
    return:
      type: '{TFrom}'
      description: "\nThe retrieved instance.\n"
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom As Class)(name As String) As TFrom Implements IIocServiceLocator.Resolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> service instance.\n"
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1(System.String)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)(System.String)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)(String)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.Resolve(Type)
  nameWithType: IocServiceLocator.IIocServiceLocator.Resolve(Type)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 31
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves the default instance of the requested type.\n"
  example: []
  syntax:
    content: object IIocServiceLocator.Resolve(Type fromType)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested type.\n"
    return:
      type: System.Object
      description: "\nThe retrieved instance.\n"
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(fromType As Type) As Object Implements IIocServiceLocator.Resolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> service instance.\n"
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Type)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Type)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type,System.String)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve(System.Type,System.String)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.Resolve(Type, String)
  nameWithType: IocServiceLocator.IIocServiceLocator.Resolve(Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 37
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves a named instance of the requested type.\n"
  example: []
  syntax:
    content: object IIocServiceLocator.Resolve(Type fromType, string name)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested service interface type.\n"
    - id: name
      type: System.String
      description: "\nThe name of the instance to retrieve, specify null or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the default instance.\n"
    return:
      type: System.Object
      description: "\nThe retrieved instance.\n"
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(fromType As Type, name As String) As Object Implements IIocServiceLocator.Resolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the named <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> service instance.\n"
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type,System.String)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Type, String)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Type, String)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(``0@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(``0@)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(``0@)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.TryResolve<TFrom>(out TFrom)
  nameWithType: IocServiceLocator.IIocServiceLocator.TryResolve<TFrom>(out TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>(out TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 43
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  example: []
  syntax:
    content: >-
      bool IIocServiceLocator.TryResolve<TFrom>(out TFrom instance)
          where TFrom : class
    parameters:
    - id: instance
      type: '{TFrom}'
    typeParameters:
    - id: TFrom
    return:
      type: System.Boolean
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom As Class)(ByRef instance As TFrom) As Boolean Implements IIocServiceLocator.TryResolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1({TFrom}@)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(ByRef TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(ByRef TFrom)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(ByRef TFrom)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(System.String,``0@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(System.String,``0@)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve``1(System.String,``0@)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.TryResolve<TFrom>(String, out TFrom)
  nameWithType: IocServiceLocator.IIocServiceLocator.TryResolve<TFrom>(String, out TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>(System.String, out TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 49
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  example: []
  syntax:
    content: >-
      bool IIocServiceLocator.TryResolve<TFrom>(string name, out TFrom instance)
          where TFrom : class
    parameters:
    - id: name
      type: System.String
    - id: instance
      type: '{TFrom}'
    typeParameters:
    - id: TFrom
    return:
      type: System.Boolean
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom As Class)(name As String, ByRef instance As TFrom) As Boolean Implements IIocServiceLocator.TryResolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,{TFrom}@)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(String, ByRef TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(System.String, ByRef TFrom)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(String, ByRef TFrom)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.Object@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.Object@)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.Object@)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.TryResolve(Type, out Object)
  nameWithType: IocServiceLocator.IIocServiceLocator.TryResolve(Type, out Object)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type, out System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 55
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nAttempts to resolve the default instance of the requested type.\n"
  example: []
  syntax:
    content: bool IIocServiceLocator.TryResolve(Type fromType, out object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested service interface type.\n"
    - id: instance
      type: System.Object
      description: "\nThe default registered instance when found; otherwise a null reference.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when a default registered instance was found; otherwise <code>false</code>.\n"
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(fromType As Type, ByRef instance As Object) As Boolean Implements IIocServiceLocator.TryResolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.Object@)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Type, ByRef Object)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type, ByRef System.Object)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Type, ByRef Object)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.String,System.Object@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.String,System.Object@)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve(System.Type,System.String,System.Object@)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocator.TryResolve(Type, String, out Object)
  nameWithType: IocServiceLocator.IIocServiceLocator.TryResolve(Type, String, out Object)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type, System.String, out System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocator.cs
    startLine: 61
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves a named instance of the requested type.\n"
  example: []
  syntax:
    content: bool IIocServiceLocator.TryResolve(Type fromType, string name, out object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested service interface type.\n"
    - id: name
      type: System.String
      description: "\nThe name of the instance to retrieve, specify null or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the default instance.\n"
    - id: instance
      type: System.Object
      description: "\nThe named registered instance when found; otherwise a null reference.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when the named registered instance was found; otherwise <code>false</code>.\n"
    content.vb: Function Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(fromType As Type, name As String, ByRef instance As Object) As Boolean Implements IIocServiceLocator.TryResolve
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Type, String, ByRef Object)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type, System.String, ByRef System.Object)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Type, String, ByRef Object)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblyCollectionSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblyCollectionSelfRegistrationInvoked
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblyCollectionSelfRegistrationInvoked
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 36
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nEvent queue for all listeners interested the completion of a collection of assemblies having their <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances invoked.\n"
  remarks: "\nOccurs just after the completion of a collection of assemblies <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances  are invoked.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs> IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs}
    content.vb: Event Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked As EventHandler(Of ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs) Implements IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblySingleSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblySingleSelfRegistrationInvoked
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AfterContainerAssemblySingleSelfRegistrationInvoked
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 43
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nEvent queue for all listeners interested in the completion of an individual <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances invocation.\n"
  remarks: "\nOccurs just after an individual <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instance is invoked.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerIndividualAssemblyRegistrarInvokedEventArgs> IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs}
    content.vb: Event Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked As EventHandler(Of ContainerIndividualAssemblyRegistrarInvokedEventArgs) Implements IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainerChanged
  commentId: E:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainerChanged
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainerChanged
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.AmbientContainerChanged
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.AmbientContainerChanged
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 50
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nEvent queue for all listeners interested in changes to the ambient container.\n"
  remarks: "\nOccurs when ambient dependency injection container changes.\n"
  example: []
  syntax:
    content: event EventHandler<EventArgs> IIocServiceLocatorManager.AmbientContainerChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged As EventHandler(Of EventArgs) Implements IIocServiceLocatorManager.AmbientContainerChanged
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 57
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nEvent queue for all listeners interested the initiation of a collection of assemblies having their <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances invoked.\n"
  remarks: "\nOccurs just before the a collection of assemblies <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances are invoked.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs> IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs}
    content.vb: Event Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked As EventHandler(Of ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs) Implements IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblySingleSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblySingleSelfRegistrationInvoked
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#BeforeContainerAssemblySingleSelfRegistrationInvoked
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 64
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nEvent queue for all listeners interested in the initiation of an individual <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instances invocation.\n"
  remarks: "\nOccurs just before an individual <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration\" data-throw-if-not-resolved=\"false\"></xref> instance is invoked.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerIndividualAssemblyRegistrarInvokedEventArgs> IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs}
    content.vb: Event Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked As EventHandler(Of ContainerIndividualAssemblyRegistrarInvokedEventArgs) Implements IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainer
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainer
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainer
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.AmbientContainer
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.AmbientContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 71
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nGets the ambient container.\n"
  example: []
  syntax:
    content: IIocContainer IIocServiceLocatorManager.AmbientContainer { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
      description: "\nThe ambient container.\n"
    content.vb: ReadOnly WriteOnly Property Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer As IIocContainer Implements IIocServiceLocatorManager.AmbientContainer
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainer*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#RootContainer
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#RootContainer
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#RootContainer
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.RootContainer
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.RootContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 74
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nGets the root container.\n"
  example: []
  syntax:
    content: IIocContainer IIocServiceLocatorManager.RootContainer { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
      description: "\nThe root container.\n"
    content.vb: ReadOnly WriteOnly Property Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer As IIocContainer Implements IIocServiceLocatorManager.RootContainer
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#RootContainer*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  id: Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  isEii: true
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: IIocServiceLocatorManager.SetAmbientContainer(IIocContainer)
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.SetAmbientContainer(IIocContainer)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.IIocServiceLocatorManager.cs
    startLine: 77
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nSets the ambient container.\n"
  example: []
  syntax:
    content: void IIocServiceLocatorManager.SetAmbientContainer(IIocContainer container)
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
      description: "\nThe container.\n"
    content.vb: Sub Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(container As IIocContainer) Implements IIocServiceLocatorManager.SetAmbientContainer
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#SetAmbientContainer*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(IIocContainer)
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(IIocContainer)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
  id: Manager
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: Manager
  nameWithType: IocServiceLocator.Manager
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Shared.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Manager
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Shared.cs
    startLine: 106
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nGets the manager of the service locator.\n"
  remarks: "\nUsed to monitor and manipulate the behavior of <xref href=\"Landorphan.Ioc.ServiceLocation.IocServiceLocator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IIocServiceLocatorManager Manager { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
      description: "\nThe manager of the service locator.\n"
    content.vb: Public ReadOnly Property Manager As IIocServiceLocatorManager
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.Manager
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator
  id: ServiceLocator
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: ServiceLocator
  nameWithType: IocServiceLocator.ServiceLocator
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Shared.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: ServiceLocator
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Shared.cs
    startLine: 109
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nGets the service locator.\n"
  remarks: "\nUsed to resolve interfaces to implementations.\n"
  example: []
  syntax:
    content: public IIocServiceLocator ServiceLocator { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
      description: "\nThe service locator client interface.\n"
    content.vb: Public ReadOnly Property ServiceLocator As IIocServiceLocator
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator*
  implements:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.ServiceLocator
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer
  id: AmbientContainer
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: AmbientContainer
  nameWithType: IocServiceLocator.AmbientContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: AmbientContainer
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 23
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nGets the ambient container.\n"
  example: []
  syntax:
    content: public static IIocContainer AmbientContainer { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
      description: "\nThe ambient container.\n"
    content.vb: Public Shared ReadOnly Property AmbientContainer As IIocContainer
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance
  id: Instance
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: IocServiceLocator.Instance
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Instance
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 28
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nGets the singleton instance.\n"
  example: []
  syntax:
    content: public static IIocServiceLocator Instance { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
    content.vb: Public Shared ReadOnly Property Instance As IIocServiceLocator
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer
  id: RootContainer
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: RootContainer
  nameWithType: IocServiceLocator.RootContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: RootContainer
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 37
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nGets the root container.\n"
  example: []
  syntax:
    content: public static IIocContainer RootContainer { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
      description: "\nThe root container.\n"
    content.vb: Public Shared ReadOnly Property RootContainer As IIocContainer
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve``1
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve``1
  id: Resolve``1
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: Resolve<TFrom>()
  nameWithType: IocServiceLocator.Resolve<TFrom>()
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve<TFrom>()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 66
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves the default instance of the requested type.\n"
  remarks: "\nEnables syntax simplification:\n<p>\n<pre><code>IocServiceLocator.Instance.Resolve</code></pre> can be written as <pre><code>IocServiceLocator.Resolve</code></pre>\n</p>\n"
  example: []
  syntax:
    content: >-
      public static TFrom Resolve<TFrom>()
          where TFrom : class
    typeParameters:
    - id: TFrom
      description: "\nThe requested type.\n"
    return:
      type: '{TFrom}'
      description: "\nThe retrieved instance.\n"
    content.vb: Public Shared Function Resolve(Of TFrom As Class) As TFrom
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the <typerefparam name=\"TFrom\"></typerefparam> service instance.\n"
  nameWithType.vb: IocServiceLocator.Resolve(Of TFrom)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(Of TFrom)()
  name.vb: Resolve(Of TFrom)()
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve``1(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve``1(System.String)
  id: Resolve``1(System.String)
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: Resolve<TFrom>(String)
  nameWithType: IocServiceLocator.Resolve<TFrom>(String)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve<TFrom>(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 92
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves a named instance of the requested type.\n"
  remarks: "\nEnables syntax simplification:\n<p>\n<pre><code>IocServiceLocator.Instance.Resolve</code></pre> can be written as <pre><code>IocServiceLocator.Resolve</code></pre>\n</p>\n"
  example: []
  syntax:
    content: >-
      public static TFrom Resolve<TFrom>(string name)
          where TFrom : class
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the instance to retrieve, null for the default instance.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe requested type.\n"
    return:
      type: '{TFrom}'
      description: "\nThe retrieved instance.\n"
    content.vb: Public Shared Function Resolve(Of TFrom As Class)(name As String) As TFrom
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the <typerefparam name=\"TFrom\"></typerefparam> service instance.\n"
  nameWithType.vb: IocServiceLocator.Resolve(Of TFrom)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(Of TFrom)(System.String)
  name.vb: Resolve(Of TFrom)(String)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type)
  id: Resolve(System.Type)
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: IocServiceLocator.Resolve(Type)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 115
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves the default instance of the requested type.\n"
  remarks: "\nEnables syntax simplification:\n<p>\n<pre><code>IocServiceLocator.Instance.Resolve</code></pre> can be written as <pre><code>IocServiceLocator.Resolve</code></pre>\n</p>\n"
  example: []
  syntax:
    content: public static object Resolve(Type fromType)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested type.\n"
    return:
      type: System.Object
      description: "\nThe retrieved instance.\n"
    content.vb: Public Shared Function Resolve(fromType As Type) As Object
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> service instance.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type,System.String)
  id: Resolve(System.Type,System.String)
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: Resolve(Type, String)
  nameWithType: IocServiceLocator.Resolve(Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Resolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 141
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves a named instance of the requested type.\n"
  remarks: "\nEnables syntax simplification:\n<p>\n<pre><code>IocServiceLocator.Instance.Resolve</code></pre> can be written as <pre><code>IocServiceLocator.Resolve</code></pre>\n</p>\n"
  example: []
  syntax:
    content: public static object Resolve(Type fromType, string name)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested type.\n"
    - id: name
      type: System.String
      description: "\nThe name of the instance to retrieve, null for the default instance.\n"
    return:
      type: System.Object
      description: "\nThe retrieved instance.\n"
    content.vb: Public Shared Function Resolve(fromType As Type, name As String) As Object
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
    description: "\nThrown when an error occurs resolving the <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> service instance.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve``1(``0@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve``1(``0@)
  id: TryResolve``1(``0@)
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: TryResolve<TFrom>(out TFrom)
  nameWithType: IocServiceLocator.TryResolve<TFrom>(out TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve<TFrom>(out TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 158
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nAttempts to resolve the default instance of the requested type.\n"
  example: []
  syntax:
    content: >-
      public static bool TryResolve<TFrom>(out TFrom instance)
          where TFrom : class
    parameters:
    - id: instance
      type: '{TFrom}'
      description: "\nThe default registered instance when found; otherwise a null reference.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe requested service interface type.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when a default registered instance was found; otherwise <code>false</code>.\n"
    content.vb: Public Shared Function TryResolve(Of TFrom As Class)(ByRef instance As TFrom) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve*
  nameWithType.vb: IocServiceLocator.TryResolve(Of TFrom)(ByRef TFrom)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(Of TFrom)(ByRef TFrom)
  name.vb: TryResolve(Of TFrom)(ByRef TFrom)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve``1(System.String,``0@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve``1(System.String,``0@)
  id: TryResolve``1(System.String,``0@)
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: TryResolve<TFrom>(String, out TFrom)
  nameWithType: IocServiceLocator.TryResolve<TFrom>(String, out TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve<TFrom>(System.String, out TFrom)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 180
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves a named instance of the requested type.\n"
  example: []
  syntax:
    content: >-
      public static bool TryResolve<TFrom>(string name, out TFrom instance)
          where TFrom : class
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the instance to retrieve, specify null or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the default instance.\n"
    - id: instance
      type: '{TFrom}'
      description: "\nThe named registered instance when found; otherwise a null reference.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe requested service interface type.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when the named registered instance was found; otherwise <code>false</code>.\n"
    content.vb: Public Shared Function TryResolve(Of TFrom As Class)(name As String, ByRef instance As TFrom) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve*
  nameWithType.vb: IocServiceLocator.TryResolve(Of TFrom)(String, ByRef TFrom)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(Of TFrom)(System.String, ByRef TFrom)
  name.vb: TryResolve(Of TFrom)(String, ByRef TFrom)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type,System.Object@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type,System.Object@)
  id: TryResolve(System.Type,System.Object@)
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: TryResolve(Type, out Object)
  nameWithType: IocServiceLocator.TryResolve(Type, out Object)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type, out System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 199
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nAttempts to resolve the default instance of the requested type.\n"
  example: []
  syntax:
    content: public static bool TryResolve(Type fromType, out object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested service interface type.\n"
    - id: instance
      type: System.Object
      description: "\nThe default registered instance when found; otherwise a null reference.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when a default registered instance was found; otherwise <code>false</code>.\n"
    content.vb: Public Shared Function TryResolve(fromType As Type, ByRef instance As Object) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve*
  nameWithType.vb: IocServiceLocator.TryResolve(Type, ByRef Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type, ByRef System.Object)
  name.vb: TryResolve(Type, ByRef Object)
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
  id: TryResolve(System.Type,System.String,System.Object@)
  parent: Landorphan.Ioc.ServiceLocation.IocServiceLocator
  langs:
  - csharp
  - vb
  name: TryResolve(Type, String, out Object)
  nameWithType: IocServiceLocator.TryResolve(Type, String, out Object)
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type, System.String, out System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: TryResolve
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/IocServiceLocator.Static.cs
    startLine: 221
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nResolves a named instance of the requested type.\n"
  example: []
  syntax:
    content: public static bool TryResolve(Type fromType, string name, out object instance)
    parameters:
    - id: fromType
      type: System.Type
      description: "\nThe requested service interface type.\n"
    - id: name
      type: System.String
      description: "\nThe name of the instance to retrieve, specify null or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> to retrieve the default instance.\n"
    - id: instance
      type: System.Object
      description: "\nThe named registered instance when found; otherwise a null reference.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> when the named registered instance was found; otherwise <code>false</code>.\n"
    content.vb: Public Shared Function TryResolve(fromType As Type, name As String, ByRef instance As Object) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve*
  nameWithType.vb: IocServiceLocator.TryResolve(Type, String, ByRef Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve(System.Type, System.String, ByRef System.Object)
  name.vb: TryResolve(Type, String, ByRef Object)
references:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocServiceLocatorMetaSharedCapacities
  nameWithType: IIocServiceLocatorMetaSharedCapacities
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve(System.Type)
  isExternal: true
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
  commentId: P:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
  isExternal: true
- uid: Landorphan.Ioc.ServiceLocation
  commentId: N:Landorphan.Ioc.ServiceLocation
  name: Landorphan.Ioc.ServiceLocation
  nameWithType: Landorphan.Ioc.ServiceLocation
  fullName: Landorphan.Ioc.ServiceLocation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocServiceLocator
  nameWithType: IIocServiceLocator
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocServiceLocatorManager
  nameWithType: IIocServiceLocatorManager
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
- uid: Landorphan.Ioc.ServiceLocation.Interfaces
  commentId: N:Landorphan.Ioc.ServiceLocation.Interfaces
  name: Landorphan.Ioc.ServiceLocation.Interfaces
  nameWithType: Landorphan.Ioc.ServiceLocation.Interfaces
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.System#IServiceProvider#GetService*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.System#IServiceProvider#GetService
  name: IServiceProvider.GetService
  nameWithType: IocServiceLocator.IServiceProvider.GetService
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.System.IServiceProvider.GetService
  nameWithType.vb: IocServiceLocator.System.IServiceProvider.GetService
  name.vb: System.IServiceProvider.GetService
- uid: System.IServiceProvider.GetService(System.Type)
  commentId: M:System.IServiceProvider.GetService(System.Type)
  parent: System.IServiceProvider
  isExternal: true
  name: GetService(Type)
  nameWithType: IServiceProvider.GetService(Type)
  fullName: System.IServiceProvider.GetService(System.Type)
  spec.csharp:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    nameWithType: IServiceProvider.GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    nameWithType: IServiceProvider.GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#Resolve
  name: IIocServiceLocator.Resolve
  nameWithType: IocServiceLocator.IIocServiceLocator.Resolve
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  name: Resolve<TFrom>()
  nameWithType: IIocServiceLocator.Resolve<TFrom>()
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve<TFrom>()
  nameWithType.vb: IIocServiceLocator.Resolve(Of TFrom)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)()
  name.vb: Resolve(Of TFrom)()
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1
    name: Resolve<TFrom>
    nameWithType: IIocServiceLocator.Resolve<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1
    name: Resolve(Of TFrom)
    nameWithType: IIocServiceLocator.Resolve(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
  name: ResolutionException
  nameWithType: ResolutionException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.ResolutionException
- uid: '{TFrom}'
  commentId: '!:TFrom'
  definition: TFrom
  name: TFrom
  nameWithType: TFrom
  fullName: TFrom
- uid: TFrom
  name: TFrom
  nameWithType: TFrom
  fullName: TFrom
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1(System.String)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  isExternal: true
  name: Resolve<TFrom>(String)
  nameWithType: IIocServiceLocator.Resolve<TFrom>(String)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve<TFrom>(System.String)
  nameWithType.vb: IIocServiceLocator.Resolve(Of TFrom)(String)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)(System.String)
  name.vb: Resolve(Of TFrom)(String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1(System.String)
    name: Resolve<TFrom>
    nameWithType: IIocServiceLocator.Resolve<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve``1(System.String)
    name: Resolve(Of TFrom)
    nameWithType: IIocServiceLocator.Resolve(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  isExternal: true
  name: Resolve(Type)
  nameWithType: IIocServiceLocator.Resolve(Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type)
    name: Resolve
    nameWithType: IIocServiceLocator.Resolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type)
    name: Resolve
    nameWithType: IIocServiceLocator.Resolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type,System.String)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  isExternal: true
  name: Resolve(Type, String)
  nameWithType: IIocServiceLocator.Resolve(Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type, System.String)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type,System.String)
    name: Resolve
    nameWithType: IIocServiceLocator.Resolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve(System.Type,System.String)
    name: Resolve
    nameWithType: IIocServiceLocator.Resolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocator#TryResolve
  name: IIocServiceLocator.TryResolve
  nameWithType: IocServiceLocator.IIocServiceLocator.TryResolve
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1({TFrom}@)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  definition: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
  name: TryResolve<TFrom>(TFrom)
  nameWithType: IIocServiceLocator.TryResolve<TFrom>(TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>(TFrom)
  nameWithType.vb: IIocServiceLocator.TryResolve(Of TFrom)(TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(TFrom)
  name.vb: TryResolve(Of TFrom)(TFrom)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
    name: TryResolve<TFrom>
    nameWithType: IIocServiceLocator.TryResolve<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
    name: TryResolve(Of TFrom)
    nameWithType: IIocServiceLocator.TryResolve(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
  name: TryResolve<TFrom>(TFrom)
  nameWithType: IIocServiceLocator.TryResolve<TFrom>(TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>(TFrom)
  nameWithType.vb: IIocServiceLocator.TryResolve(Of TFrom)(TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(TFrom)
  name.vb: TryResolve(Of TFrom)(TFrom)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
    name: TryResolve<TFrom>
    nameWithType: IIocServiceLocator.TryResolve<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(``0@)
    name: TryResolve(Of TFrom)
    nameWithType: IIocServiceLocator.TryResolve(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,{TFrom}@)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  definition: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
  name: TryResolve<TFrom>(String, TFrom)
  nameWithType: IIocServiceLocator.TryResolve<TFrom>(String, TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>(System.String, TFrom)
  nameWithType.vb: IIocServiceLocator.TryResolve(Of TFrom)(String, TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(System.String, TFrom)
  name.vb: TryResolve(Of TFrom)(String, TFrom)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
    name: TryResolve<TFrom>
    nameWithType: IIocServiceLocator.TryResolve<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
    name: TryResolve(Of TFrom)
    nameWithType: IIocServiceLocator.TryResolve(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
  isExternal: true
  name: TryResolve<TFrom>(String, TFrom)
  nameWithType: IIocServiceLocator.TryResolve<TFrom>(String, TFrom)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>(System.String, TFrom)
  nameWithType.vb: IIocServiceLocator.TryResolve(Of TFrom)(String, TFrom)
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)(System.String, TFrom)
  name.vb: TryResolve(Of TFrom)(String, TFrom)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
    name: TryResolve<TFrom>
    nameWithType: IIocServiceLocator.TryResolve<TFrom>
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve<TFrom>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve``1(System.String,``0@)
    name: TryResolve(Of TFrom)
    nameWithType: IIocServiceLocator.TryResolve(Of TFrom)
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(Of TFrom)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFrom
    nameWithType: TFrom
    fullName: TFrom
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.Object@)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.Object@)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  isExternal: true
  name: TryResolve(Type, Object)
  nameWithType: IIocServiceLocator.TryResolve(Type, Object)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type, System.Object)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.Object@)
    name: TryResolve
    nameWithType: IIocServiceLocator.TryResolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.Object@)
    name: TryResolve
    nameWithType: IIocServiceLocator.TryResolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator
  isExternal: true
  name: TryResolve(Type, String, Object)
  nameWithType: IIocServiceLocator.TryResolve(Type, String, Object)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type, System.String, System.Object)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
    name: TryResolve
    nameWithType: IIocServiceLocator.TryResolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve(System.Type,System.String,System.Object@)
    name: TryResolve
    nameWithType: IIocServiceLocator.TryResolve
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocator.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: AfterContainerAssemblyCollectionSelfRegistrationInvoked
  nameWithType: IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblyCollectionSelfRegistrationInvoked
- uid: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs}
  commentId: T:System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs>
  nameWithType: EventHandler<ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs>
  fullName: System.EventHandler<Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs>
  nameWithType.vb: EventHandler(Of ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs)
  fullName.vb: System.EventHandler(Of Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs)
  name.vb: EventHandler(Of ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
    name: ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
    nameWithType: ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
    name: ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
    nameWithType: ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerAssemblyCollectionSelfRegistrationInvokedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: AfterContainerAssemblySingleSelfRegistrationInvoked
  nameWithType: IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AfterContainerAssemblySingleSelfRegistrationInvoked
- uid: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs}
  commentId: T:System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ContainerIndividualAssemblyRegistrarInvokedEventArgs>
  nameWithType: EventHandler<ContainerIndividualAssemblyRegistrarInvokedEventArgs>
  fullName: System.EventHandler<Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs>
  nameWithType.vb: EventHandler(Of ContainerIndividualAssemblyRegistrarInvokedEventArgs)
  fullName.vb: System.EventHandler(Of Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs)
  name.vb: EventHandler(Of ContainerIndividualAssemblyRegistrarInvokedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs
    name: ContainerIndividualAssemblyRegistrarInvokedEventArgs
    nameWithType: ContainerIndividualAssemblyRegistrarInvokedEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs
    name: ContainerIndividualAssemblyRegistrarInvokedEventArgs
    nameWithType: ContainerIndividualAssemblyRegistrarInvokedEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerIndividualAssemblyRegistrarInvokedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: AmbientContainerChanged
  nameWithType: IIocServiceLocatorManager.AmbientContainerChanged
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainerChanged
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  nameWithType: IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblyCollectionSelfRegistrationInvoked
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: BeforeContainerAssemblySingleSelfRegistrationInvoked
  nameWithType: IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.BeforeContainerAssemblySingleSelfRegistrationInvoked
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainer*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#AmbientContainer
  name: IIocServiceLocatorManager.AmbientContainer
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.AmbientContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: AmbientContainer
  nameWithType: IIocServiceLocatorManager.AmbientContainer
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.AmbientContainer
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainer
  nameWithType: IIocContainer
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#RootContainer*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#RootContainer
  name: IIocServiceLocatorManager.RootContainer
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.RootContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: RootContainer
  nameWithType: IIocServiceLocatorManager.RootContainer
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.RootContainer
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#SetAmbientContainer*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan#Ioc#ServiceLocation#Interfaces#IIocServiceLocatorManager#SetAmbientContainer
  name: IIocServiceLocatorManager.SetAmbientContainer
  nameWithType: IocServiceLocator.IIocServiceLocatorManager.SetAmbientContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer
  nameWithType.vb: IocServiceLocator.Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer
  name.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager
  name: SetAmbientContainer(IIocContainer)
  nameWithType: IIocServiceLocatorManager.SetAmbientContainer(IIocContainer)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
    name: SetAmbientContainer
    nameWithType: IIocServiceLocatorManager.SetAmbientContainer
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
    name: IIocContainer
    nameWithType: IIocContainer
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer)
    name: SetAmbientContainer
    nameWithType: IIocServiceLocatorManager.SetAmbientContainer
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorManager.SetAmbientContainer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
    name: IIocContainer
    nameWithType: IIocContainer
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
  name: Manager
  nameWithType: IocServiceLocator.Manager
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Manager
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.Manager
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.Manager
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities
  name: Manager
  nameWithType: IIocServiceLocatorMetaSharedCapacities.Manager
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.Manager
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator
  name: ServiceLocator
  nameWithType: IocServiceLocator.ServiceLocator
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.ServiceLocator
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.ServiceLocator
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.ServiceLocator
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities
  name: ServiceLocator
  nameWithType: IIocServiceLocatorMetaSharedCapacities.ServiceLocator
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocServiceLocatorMetaSharedCapacities.ServiceLocator
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer
  name: AmbientContainer
  nameWithType: IocServiceLocator.AmbientContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.AmbientContainer
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance
  name: Instance
  nameWithType: IocServiceLocator.Instance
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Instance
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer
  name: RootContainer
  nameWithType: IocServiceLocator.RootContainer
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.RootContainer
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve
  name: Resolve
  nameWithType: IocServiceLocator.Resolve
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.Resolve
- uid: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve
  name: TryResolve
  nameWithType: IocServiceLocator.TryResolve
  fullName: Landorphan.Ioc.ServiceLocation.IocServiceLocator.TryResolve
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
