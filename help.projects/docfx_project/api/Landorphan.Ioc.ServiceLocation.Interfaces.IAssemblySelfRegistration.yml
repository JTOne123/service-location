### YamlMime:ManagedReference
items:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration
  id: IAssemblySelfRegistration
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  children:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar)
  langs:
  - csharp
  - vb
  name: IAssemblySelfRegistration
  nameWithType: IAssemblySelfRegistration
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration
  type: Interface
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/IAssemblySelfRegistration.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: IAssemblySelfRegistration
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/IAssemblySelfRegistration.cs
    startLine: 29
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRepresents the capacity for an assembly to self-register services.\n"
  remarks: "\n<p>\nAssemblies that implement this class do so to register the default implementation of their service interfaces.\n</p>\n<p>\nCurrent design limitations for implementation:\n</p>\n<ul><li>\nMust have public default constructor.\n</li><li>\nNo more than one implementation per assembly.\n</li></ul>\n<p>\nThe primary purpose of this interface is to allow class libraries to register their (dependent) services, so that the application consuming the library gets a viable default production\nimplementation by default without first wading into the complexities of boot-strapping service location for multiple class libraries in configure files.\n</p>\n"
  example: []
  syntax:
    content: public interface IAssemblySelfRegistration
    content.vb: Public Interface IAssemblySelfRegistration
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar)
  id: RegisterServiceInstances(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration
  langs:
  - csharp
  - vb
  name: RegisterServiceInstances(IIocContainerRegistrar)
  nameWithType: IAssemblySelfRegistration.RegisterServiceInstances(IIocContainerRegistrar)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/IAssemblySelfRegistration.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: RegisterServiceInstances
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/IAssemblySelfRegistration.cs
    startLine: 41
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRegisters service interface types with instances, or implementation types with default constructors, for the assembly that defines a single class that implements this interface.\n"
  remarks: "\nUse the <code data-dev-comment-type=\"paramref\" class=\"paramref\">registrar</code> to register types defined in the assembly as well as overrides of types registered in other assemblies.\nUse the registrar.Resolver to resolve types already registered.\n"
  example: []
  syntax:
    content: void RegisterServiceInstances(IIocContainerRegistrar registrar)
    parameters:
    - id: registrar
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
      description: "\nThe inversion of control container registrar.\n"
    content.vb: Sub RegisterServiceInstances(registrar As IIocContainerRegistrar)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances*
references:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces
  commentId: N:Landorphan.Ioc.ServiceLocation.Interfaces
  name: Landorphan.Ioc.ServiceLocation.Interfaces
  nameWithType: Landorphan.Ioc.ServiceLocation.Interfaces
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances
  name: RegisterServiceInstances
  nameWithType: IAssemblySelfRegistration.RegisterServiceInstances
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IAssemblySelfRegistration.RegisterServiceInstances
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerRegistrar
  nameWithType: IIocContainerRegistrar
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
