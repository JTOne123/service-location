### YamlMime:ManagedReference
items:
- uid: Landorphan.Abstractions.Console.ConsoleUtilities
  commentId: T:Landorphan.Abstractions.Console.ConsoleUtilities
  id: ConsoleUtilities
  parent: Landorphan.Abstractions.Console
  children:
  - Landorphan.Abstractions.Console.ConsoleUtilities.#ctor
  - Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor
  - Landorphan.Abstractions.Console.ConsoleUtilities.Beep
  - Landorphan.Abstractions.Console.ConsoleUtilities.Beep(System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight
  - Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth
  - Landorphan.Abstractions.Console.ConsoleUtilities.CancelKeyPress
  - Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock
  - Landorphan.Abstractions.Console.ConsoleUtilities.Clear
  - Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft
  - Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize
  - Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop
  - Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible
  - Landorphan.Abstractions.Console.ConsoleUtilities.Error
  - Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor
  - Landorphan.Abstractions.Console.ConsoleUtilities.Input
  - Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding
  - Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected
  - Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected
  - Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected
  - Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable
  - Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight
  - Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth
  - Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  - Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock
  - Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError
  - Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError(System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput
  - Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput(System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput
  - Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput(System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Output
  - Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding
  - Landorphan.Abstractions.Console.ConsoleUtilities.Read
  - Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey
  - Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey(System.Boolean)
  - Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine
  - Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources
  - Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor
  - Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize(System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition(System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.SetError(System.IO.TextWriter)
  - Landorphan.Abstractions.Console.ConsoleUtilities.SetInput(System.IO.TextReader)
  - Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput(System.IO.TextWriter)
  - Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition(System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize(System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Title
  - Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput
  - Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight
  - Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft
  - Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop
  - Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Boolean)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[])
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[],System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Decimal)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Double)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int64)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Single)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object,System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object,System.Object,System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object[])
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt64)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Boolean)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[])
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[],System.Int32,System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Decimal)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Double)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int64)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Single)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object,System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object,System.Object,System.Object)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object[])
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt32)
  - Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt64)
  langs:
  - csharp
  - vb
  name: ConsoleUtilities
  nameWithType: ConsoleUtilities
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities
  type: Class
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ConsoleUtilities
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 14
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nA console utilities.\n"
  example: []
  syntax:
    content: 'public class ConsoleUtilities : DisposableObject, INotifyingQueryDisposable, IQueryDisposable, IDisposable, IQueryThreadSafe, IConsole, IConsoleAppearance, IConsoleBuffer, IConsoleCursor, IConsoleStreams, IConsoleReader, IConsoleWriter, IConsoleWrite, IConsoleWriteLine, IConsoleMisc'
    content.vb: >-
      Public Class ConsoleUtilities
          Inherits DisposableObject
          Implements INotifyingQueryDisposable, IQueryDisposable, IDisposable, IQueryThreadSafe, IConsole, IConsoleAppearance, IConsoleBuffer, IConsoleCursor, IConsoleStreams, IConsoleReader, IConsoleWriter, IConsoleWrite, IConsoleWriteLine, IConsoleMisc
  inheritance:
  - System.Object
  - Landorphan.Common.DisposableObject
  implements:
  - Landorphan.Common.Interfaces.INotifyingQueryDisposable
  - Landorphan.Common.Interfaces.IQueryDisposable
  - System.IDisposable
  - Landorphan.Common.Interfaces.IQueryThreadSafe
  - Landorphan.Abstractions.Console.Interfaces.IConsole
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  - Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  - Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  - Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriter
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  - Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  inheritedMembers:
  - Landorphan.Common.DisposableObject.Dispose
  - Landorphan.Common.DisposableObject.Dispose(System.Boolean)
  - Landorphan.Common.DisposableObject.ReleaseUnmanagedResources
  - Landorphan.Common.DisposableObject.OnDisposing
  - Landorphan.Common.DisposableObject.ThrowIfDisposed
  - Landorphan.Common.DisposableObject.IsDisposed
  - Landorphan.Common.DisposableObject.IsDisposing
  - Landorphan.Common.DisposableObject.IsThreadSafe
  - Landorphan.Common.DisposableObject.Disposing
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.#ctor
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.#ctor
  id: '#ctor'
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: ConsoleUtilities()
  nameWithType: ConsoleUtilities.ConsoleUtilities()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ConsoleUtilities()
  type: Constructor
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: .ctor
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 33
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nInitializes a new instance of the <xref href=\"Landorphan.Abstractions.Console.ConsoleUtilities\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConsoleUtilities()
    content.vb: Public Sub New
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources
  id: ReleaseManagedResources
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: ReleaseManagedResources()
  nameWithType: ConsoleUtilities.ReleaseManagedResources()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ReleaseManagedResources
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 70
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  example: []
  syntax:
    content: protected override void ReleaseManagedResources()
    content.vb: Protected Overrides Sub ReleaseManagedResources
  overridden: Landorphan.Common.DisposableObject.ReleaseManagedResources
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CancelKeyPress
  commentId: E:Landorphan.Abstractions.Console.ConsoleUtilities.CancelKeyPress
  id: CancelKeyPress
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: CancelKeyPress
  nameWithType: ConsoleUtilities.CancelKeyPress
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CancelKeyPress
  type: Event
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: CancelKeyPress
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 78
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nOccurs when the Control modifier key (Ctrl) and either the ConsoleKey.C console key (C) or the Break key are pressed simultaneously (Ctrl+C or\nCtrl+Break).\n"
  remarks: "\n<p>\nThis event is used in conjunction with <xref href=\"System.EventHandler\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ConsoleCancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.  The CancelKeyPress event\nenables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.\nFor more information about handling events,\n<a href=\"http://msdn.microsoft.com/en-us/library/edzehd2t(v=vs.110).aspx\">\nHandling and Raising Events\n</a>\n</p>\n<p>\nWhen the user presses either Ctrl+C or Ctrl+Break, the CancelKeyPress event is fired and the application&apos;s\n<xref href=\"System.EventHandler%601\" data-throw-if-not-resolved=\"false\"></xref> event handler is executed.  The event handler is passed a\n<xref href=\"System.ConsoleCancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref> Object that has two useful properties:\n</p>\n• <xref href=\"System.ConsoleCancelEventArgs.SpecialKey\" data-throw-if-not-resolved=\"false\"></xref>, which allows you to determine whether the handler was invoked as a result of the user\npressing Ctrl+C (the property value is ConsoleSpecialKey.ControlC) or Ctrl+Break (the property value is ConsoleSpecialKey.ControlBreak).\n<p>\n• <xref href=\"System.ConsoleCancelEventArgs.Cancel\" data-throw-if-not-resolved=\"false\"></xref>, which allows you to determine how to your application should respond to the user pressing\nCtrl+C or Ctrl+Break.  By default, the Cancel property is false, which causes program execution to terminate when the event handler exits.\nChanging its property to true specifies that the application should continue to execute.\n</p>\n<p>\nThe event handler for this event is executed on a thread pool thread.\n</p>\n"
  example: []
  syntax:
    content: public event EventHandler<ConsoleCancelEventArgs> CancelKeyPress
    return:
      type: System.EventHandler{System.ConsoleCancelEventArgs}
    content.vb: Public Event CancelKeyPress As EventHandler(Of ConsoleCancelEventArgs)
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CancelKeyPress
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor
  id: BackgroundColor
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: BackgroundColor
  nameWithType: ConsoleUtilities.BackgroundColor
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: BackgroundColor
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 85
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the background color of the console.\n"
  remarks: "\nA change to the BackgroundColor property affects only output that is written to individual character cells after the background color is\nchanged.  To change the background color of the console window as a whole, set the BackgroundColor property and call the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public ConsoleColor BackgroundColor { get; set; }
    parameters: []
    return:
      type: System.ConsoleColor
      description: "\nA value that specifies the background color of the console; that is, the color that appears behind each character. The default is black.\n"
    content.vb: Public Property BackgroundColor As ConsoleColor
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe color specified in a set operation is not a valid member of <xref href=\"System.ConsoleColor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.BackgroundColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight
  id: BufferHeight
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: BufferHeight
  nameWithType: ConsoleUtilities.BufferHeight
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: BufferHeight
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 92
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the height of the buffer area.\n"
  remarks: "\nThis property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.  Input contrast, the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property defines the number of rows that are actually displayed in the console window at any\nparticular time. If the number of rows actually written to the buffer exceeds the number of rows defined by the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property, the window can be scrolled vertically so that it displays a contiguous number of  rows that\nare equal to the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property and are located anywhere in the buffer. If a set operation decreases the\nvalue of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight\" data-throw-if-not-resolved=\"false\"></xref> property, the uppermost lines are removed.  For example, if the number of lines is reduced from 300 to 250,\nlines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.\n"
  example: []
  syntax:
    content: public int BufferHeight { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe current height, in rows, of the buffer area.\n"
    content.vb: Public Property BufferHeight As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value in a set operation is less than or equal to zero.\n-or-\nThe value in a set operation is greater than or equal to <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.\n-or-\nThe value in a set operation is less than <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop\" data-throw-if-not-resolved=\"false\"></xref> + <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth
  id: BufferWidth
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: BufferWidth
  nameWithType: ConsoleUtilities.BufferWidth
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: BufferWidth
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 99
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the width of the buffer area.\n"
  remarks: "\nIf a set operation decreases the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth\" data-throw-if-not-resolved=\"false\"></xref> property, the rightmost columns are removed.  For example, if the number of\ncolumns is reduced from 80 to 60, columns 60 through 79 of each row are removed.\n"
  example: []
  syntax:
    content: public int BufferWidth { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe current width, in columns, of the buffer area.\n"
    content.vb: Public Property BufferWidth As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value in a set operation is less than or equal to zero.\n-or-\nThe value in a set operation is greater than or equal to <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.\n-or-\nThe value in a set operation is less than <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft\" data-throw-if-not-resolved=\"false\"></xref> + <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock
  id: CapsLock
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: CapsLock
  nameWithType: ConsoleUtilities.CapsLock
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: CapsLock
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 106
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.\n"
  example: []
  syntax:
    content: public bool CapsLock { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if CAPS LOCK is turned on; false if CAPS LOCK is turned <code> off </code>.\n"
    content.vb: Public ReadOnly Property CapsLock As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CapsLock
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft
  id: CursorLeft
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: CursorLeft
  nameWithType: ConsoleUtilities.CursorLeft
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: CursorLeft
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 109
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the column position of the cursor within the buffer area.\n"
  example: []
  syntax:
    content: public int CursorLeft { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe current position, in columns, of the cursor.\n"
    content.vb: Public Property CursorLeft As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value in a set operation is less than zero.\n-or-\nThe value in a set operation is greater than or equal to <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorLeft
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize
  id: CursorSize
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: CursorSize
  nameWithType: ConsoleUtilities.CursorSize
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: CursorSize
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 116
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the height of the cursor within a character cell.\n"
  example: []
  syntax:
    content: public int CursorSize { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe size of the cursor expressed as a percentage of the height of a character cell.  The property value ranges from 1 to 100.\n"
    content.vb: Public Property CursorSize As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value specified in a set operation is less than 1 or greater than 100.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop
  id: CursorTop
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: CursorTop
  nameWithType: ConsoleUtilities.CursorTop
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: CursorTop
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 123
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the row position of the cursor within the buffer area.\n"
  example: []
  syntax:
    content: public int CursorTop { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe current position, in rows, of the cursor.\n"
    content.vb: Public Property CursorTop As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value in a set operation is less than zero.\n-or-\nThe value in a set operation is greater than or equal to <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorTop
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible
  id: CursorVisible
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: CursorVisible
  nameWithType: ConsoleUtilities.CursorVisible
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: CursorVisible
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 130
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets a value indicating whether the cursor is visible.\n"
  example: []
  syntax:
    content: public bool CursorVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if the cursor is visible; otherwise, <code> false </code>.\n"
    content.vb: Public Property CursorVisible As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorVisible
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Error
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.Error
  id: Error
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ConsoleUtilities.Error
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Error
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Error
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 137
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets the standard error output stream.\n"
  remarks: "\nThis standard error stream is set to the console by default.  It can be set to another stream with the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method. After\nthe standard error stream is redirected, it can be reacquired by calling the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public TextWriter Error { get; }
    parameters: []
    return:
      type: System.IO.TextWriter
      description: "\nA <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that represents the standard error output stream.\n"
    content.vb: Public ReadOnly Property Error As TextWriter
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Error*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor
  id: ForegroundColor
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: ForegroundColor
  nameWithType: ConsoleUtilities.ForegroundColor
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ForegroundColor
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 140
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the foreground color of the console.\n"
  remarks: "\nA get operation for a Windows-based application, in which a console does not exist, returns <xref href=\"System.ConsoleColor.Gray\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ConsoleColor ForegroundColor { get; set; }
    parameters: []
    return:
      type: System.ConsoleColor
      description: "\nA <xref href=\"System.ConsoleColor\" data-throw-if-not-resolved=\"false\"></xref> that specifies the foreground color of the console; that is, the color of each character that is displayed.\nThe default is gray.\n"
    content.vb: Public Property ForegroundColor As ConsoleColor
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ForegroundColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Input
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.Input
  id: Input
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: ConsoleUtilities.Input
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Input
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Input
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 147
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets the standard input stream.\n"
  remarks: "\nThis property is set to the standard input stream by default.  This property can be set to another stream with the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod.  After the standard input stream is redirected, it can be reacquired by calling the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput\" data-throw-if-not-resolved=\"false\"></xref> method.\nRead operations on the standard input stream execute synchronously.  That is, they block until the specified read operation has completed.\nThis is true even if an asynchronous method, such as <xref href=\"System.IO.TextReader.ReadLineAsync\" data-throw-if-not-resolved=\"false\"></xref>, is called on the <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>\nObject returned by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: public TextReader Input { get; }
    parameters: []
    return:
      type: System.IO.TextReader
      description: "\nA <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that represents the standard input stream.\n"
    content.vb: Public ReadOnly Property Input As TextReader
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Input*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding
  id: InputEncoding
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: InputEncoding
  nameWithType: ConsoleUtilities.InputEncoding
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: InputEncoding
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 150
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the encoding the console uses to read input.\n"
  remarks: "\nThe console uses the input encoding to translate keyboard input into a corresponding character.  The input encoding incorporates a code\npage that maps 256 keyboard character codes to individual characters.  Different code pages include different special characters,\ntypically customized for a language or a group of languages.\nStarting with the .NET Framework 4, a property get operation may return a cached value instead of the console&apos;s current input encoding.\nThis can occur if the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property is modified by some means other than an assignment to the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property, such as calling the Windows <strong> SetConsoleCP </strong> function or using the <strong> chcp </strong> command from a\nPowerShell script.\n"
  example: []
  syntax:
    content: public Encoding InputEncoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\nThe encoding used to read console input.\n"
    content.vb: Public Property InputEncoding As Encoding
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe property value in a set operation is <code> null </code>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nYour application does not have permission to perform this operation.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected
  id: IsErrorRedirected
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: IsErrorRedirected
  nameWithType: ConsoleUtilities.IsErrorRedirected
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IsErrorRedirected
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 157
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets a value that indicates whether the error output stream has been redirected from the standard error stream.\n"
  example: []
  syntax:
    content: public bool IsErrorRedirected { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if error output is redirected; otherwise, <code> false </code>.\n"
    content.vb: Public ReadOnly Property IsErrorRedirected As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected
  id: IsInputRedirected
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: IsInputRedirected
  nameWithType: ConsoleUtilities.IsInputRedirected
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IsInputRedirected
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 160
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets a value that indicates whether input has been redirected from the standard input stream.\n"
  example: []
  syntax:
    content: public bool IsInputRedirected { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if input is redirected; otherwise, <code> false </code>.\n"
    content.vb: Public ReadOnly Property IsInputRedirected As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected
  id: IsOutputRedirected
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: IsOutputRedirected
  nameWithType: ConsoleUtilities.IsOutputRedirected
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IsOutputRedirected
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 163
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets a value that indicates whether output has been redirected from the standard output stream.\n"
  example: []
  syntax:
    content: public bool IsOutputRedirected { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if output is redirected; otherwise, <code> false </code>.\n"
    content.vb: Public ReadOnly Property IsOutputRedirected As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable
  id: KeyAvailable
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: KeyAvailable
  nameWithType: ConsoleUtilities.KeyAvailable
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: KeyAvailable
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 166
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets a value indicating whether a key press is available in the input stream.\n"
  example: []
  syntax:
    content: public bool KeyAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if a key press is available; otherwise, <code> false </code>.\n"
    content.vb: Public ReadOnly Property KeyAvailable As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleReader.KeyAvailable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight
  id: LargestWindowHeight
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: LargestWindowHeight
  nameWithType: ConsoleUtilities.LargestWindowHeight
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: LargestWindowHeight
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 169
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets the largest possible number of console window rows, based on the current font and screen resolution.\n"
  example: []
  syntax:
    content: public int LargestWindowHeight { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe height of the largest possible console window measured in rows.\n"
    content.vb: Public ReadOnly Property LargestWindowHeight As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowHeight
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth
  id: LargestWindowWidth
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: LargestWindowWidth
  nameWithType: ConsoleUtilities.LargestWindowWidth
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: LargestWindowWidth
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 172
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets the largest possible number of console window columns, based on the current font and screen resolution.\n"
  example: []
  syntax:
    content: public int LargestWindowWidth { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe width of the largest possible console window measured in columns.\n"
    content.vb: Public ReadOnly Property LargestWindowWidth As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowWidth
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock
  id: NumberLock
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: NumberLock
  nameWithType: ConsoleUtilities.NumberLock
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: NumberLock
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 175
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.\n"
  example: []
  syntax:
    content: public bool NumberLock { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if NUM LOCK is turned on; <code> false </code> if NUM LOCK is turned off.\n"
    content.vb: Public ReadOnly Property NumberLock As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.NumberLock
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Output
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.Output
  id: Output
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: ConsoleUtilities.Output
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Output
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Output
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 178
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets the standard output stream.\n"
  remarks: "\nThis property is set to the standard output stream by default.  This property can be set to another stream with the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod.\nNote that calls to <strong> Output.WriteLine </strong> methods are equivalent to calls to the corresponding\n<xref href=\"System.IO.TextWriter.WriteLine\" data-throw-if-not-resolved=\"false\"></xref> methods.\n"
  example: []
  syntax:
    content: public TextWriter Output { get; }
    parameters: []
    return:
      type: System.IO.TextWriter
      description: "\nA <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that represents the standard output stream.\n"
    content.vb: Public ReadOnly Property Output As TextWriter
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Output*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding
  id: OutputEncoding
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: OutputEncoding
  nameWithType: ConsoleUtilities.OutputEncoding
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OutputEncoding
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 181
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the encoding the console uses to write output.\n"
  remarks: "\nThe console uses the output encoding to translate characters written by an application into corresponding console display characters.  The\ndefault code page that the console uses is determined by the system locale.\nStarting with the .NET Framework 4, a property get operation may return a cached value instead of the console&apos;s current output encoding.\nThis can occur if the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property is modified by some means other than an assignment to the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property, such as calling the Windows <strong> SetConsoleOutputCP </strong> function.\n<strong> Notes to Callers </strong>\nOf the Unicode encodings, <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsole\" data-throw-if-not-resolved=\"false\"></xref> supports UTF-8 encoding with the <xref href=\"System.Text.UTF8Encoding\" data-throw-if-not-resolved=\"false\"></xref> class and,\nstarting with the .NET Framework 4.5, it supports UTF-16 encoding with the <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> class.  UTF-32 encoding with the\n<xref href=\"System.Text.UTF32Encoding\" data-throw-if-not-resolved=\"false\"></xref> class is not supported.  Attempting to set the output encoding to UTF-32 throws an <xref href=\"System.IO.IOException\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that successfully displaying Unicode characters to the console requires the following:\n• The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.\n• A font used by the console must define the particular glyph or glyphs to be displayed. The console can take advantage of font linking to\ndisplay glyphs from linked fonts if the base font does not contain a definition for that glyph.\nFor more information about support for Unicode encoding by the console, see the &quot;Unicode Support for the Console&quot; section in the\n<xref href=\"System.Console\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Encoding OutputEncoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\nThe encoding used to write console output.\n"
    content.vb: Public Property OutputEncoding As Encoding
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe property value in a set operation is <code> null </code>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nYour application does not have permission to perform this operation.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Title
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.Title
  id: Title
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ConsoleUtilities.Title
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Title
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Title
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 188
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the title to display in the console title bar.\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe String to be displayed in the title bar of the console. The maximum length of the title String is 24500 characters.\n"
    content.vb: Public Property Title As String
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIn a get operation, the retrieved title is longer than 24500 characters.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nIn a set operation, the specified title is longer than 24500 characters.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nIn a set operation, the specified title is <code> null </code>.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput
  id: TreatControlCAsInput
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: TreatControlCAsInput
  nameWithType: ConsoleUtilities.TreatControlCAsInput
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TreatControlCAsInput
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 195
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets a value indicating whether the combination of the <xref href=\"System.ConsoleModifiers.Control\" data-throw-if-not-resolved=\"false\"></xref> modifier key and C console key\n(Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.\n"
  example: []
  syntax:
    content: public bool TreatControlCAsInput { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if Ctrl+C is treated as ordinary input; otherwise, <code> false </code>.\n"
    content.vb: Public Property TreatControlCAsInput As Boolean
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight
  id: WindowHeight
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WindowHeight
  nameWithType: ConsoleUtilities.WindowHeight
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WindowHeight
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 202
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the height of the console window area.\n"
  example: []
  syntax:
    content: public int WindowHeight { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe height of the console window measured in rows.\n"
    content.vb: Public Property WindowHeight As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref> property or the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property is less than or equal to 0.\n-or-\nThe value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property plus the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop\" data-throw-if-not-resolved=\"false\"></xref> property is greater than or equal to\n<xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.\n-or-\nThe value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref> property or the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property is greater than the largest\npossible window width or height for the current screen resolution and console font.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft
  id: WindowLeft
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WindowLeft
  nameWithType: ConsoleUtilities.WindowLeft
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WindowLeft
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 209
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the leftmost position of the console window area relative to the screen buffer.\n"
  remarks: "\nThe console represents a rectangular window into a larger rectangular buffer area.  Both the window and the buffer are measured vertically\nby their number of rows and horizontally by their number of columns.  The dimensions of the buffer area are defined by the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth\" data-throw-if-not-resolved=\"false\"></xref> properties.  The dimensions of the console area are defined by\nthe\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref> properties.  The <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft\" data-throw-if-not-resolved=\"false\"></xref> property determines which column of the\nbuffer area is displayed in the first column of the console window. The value of the WindowLeft property can range from 0 to\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth\" data-throw-if-not-resolved=\"false\"></xref> - <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref>.  Attempting to set it to a value outside that range throws an\n<xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen a console window first opens, the default value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft\" data-throw-if-not-resolved=\"false\"></xref> property is zero, which indicates that the first\ncolumn shown by the console corresponds to the first column (the column at position zero) in the buffer area.  The default width of both\nthe console window and the buffer area is 80 columns.  This means that the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft\" data-throw-if-not-resolved=\"false\"></xref> property can be modified only if the\nconsole window is made narrower or the buffer area is made wider.\nNote that if the width of the buffer area exceeds the width of the console window, the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft\" data-throw-if-not-resolved=\"false\"></xref> property is\nautomatically adjusted when the user uses the horizontal scroll bar to define the window&apos;s relationship to the buffer area.\n"
  example: []
  syntax:
    content: public int WindowLeft { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe leftmost console window position measured in columns.\n"
    content.vb: Public Property WindowLeft As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nIn a set operation, the value to be assigned is less than zero.\n-or-\nAs a result of the assignment, <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft\" data-throw-if-not-resolved=\"false\"></xref> plus <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref> would exceed <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nError reading or writing information.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop
  id: WindowTop
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WindowTop
  nameWithType: ConsoleUtilities.WindowTop
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WindowTop
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 216
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the top position of the console window area relative to the screen buffer.\n"
  remarks: "\nThe console represents a rectangular window into a larger rectangular buffer area.  Both the window and the buffer are measured vertically\nby their number of rows and horizontally by their number of columns.  The dimensions of the buffer area are defined by the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth\" data-throw-if-not-resolved=\"false\"></xref> properties.  The dimensions of the console area are defined by\nthe\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref> properties.  The <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop\" data-throw-if-not-resolved=\"false\"></xref> property determines which row of the\nbuffer area is displayed in the first column of the console window.  The value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop\" data-throw-if-not-resolved=\"false\"></xref> property can range from 0 to\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight\" data-throw-if-not-resolved=\"false\"></xref> - <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref>.  Attempting to set it to a value outside that range throws an\n<xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int WindowTop { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe uppermost console window position measured in rows.\n"
    content.vb: Public Property WindowTop As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nIn a set operation, the value to be assigned is less than zero.\n-or-\nAs a result of the assignment, <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop\" data-throw-if-not-resolved=\"false\"></xref> plus <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> would exceed <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nError reading or writing information.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth
  commentId: P:Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth
  id: WindowWidth
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WindowWidth
  nameWithType: ConsoleUtilities.WindowWidth
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WindowWidth
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 223
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nGets or sets the width of the console window.\n"
  example: []
  syntax:
    content: public int WindowWidth { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe width of the console window measured in columns.\n"
    content.vb: Public Property WindowWidth As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref> property or the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property is less than or equal to 0.\n-or-\nThe value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property plus the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop\" data-throw-if-not-resolved=\"false\"></xref> property is greater than or equal to\n<xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.\n-or-\nThe value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth\" data-throw-if-not-resolved=\"false\"></xref> property or the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight\" data-throw-if-not-resolved=\"false\"></xref> property is greater than the largest\npossible window width or height for the current screen resolution and console font.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nError reading or writing information.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Beep
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Beep
  id: Beep
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Beep()
  nameWithType: ConsoleUtilities.Beep()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Beep()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Beep
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 230
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nPlays the sound of a beep through the console speaker.\n"
  remarks: "\nBy default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.\nWhether Beep produces a sound on versions of Windows before Windows 7 depends on the\npresence of a 8254 programmable interval timer chip.  Starting with Windows 7, it depends on the default sound device.\n<p>\nIn .Net Framework, this would throw System.Security.HostProtectionException when executed on a server, such as MS SQL Server, that does not permit access to a user interface.\nTODO: find out what exception is thrown in .Net Standard 2.0\n</p>\n"
  example: []
  syntax:
    content: public void Beep()
    content.vb: Public Sub Beep
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Beep*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Beep(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Beep(System.Int32,System.Int32)
  id: Beep(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Beep(Int32, Int32)
  nameWithType: ConsoleUtilities.Beep(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Beep(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Beep
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 236
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nPlays the sound of a beep of a specified frequency and duration through the console speaker.\n"
  remarks: "\nBeep wraps a call to the Windows Beep function.\nWhether Beep produces a sound on versions of Windows before Windows 7 depends on the\npresence of a 8254 programmable interval timer chip.  Starting with Windows 7, it depends on the default sound device.\n<p>\nIn .Net Framework, this would throw System.Security.HostProtectionException when executed on a server, such as MS SQL Server, that does not permit access to a user interface.\nTODO: find out what exception is thrown in .Net Standard 2.0\n</p>\n"
  example: []
  syntax:
    content: public void Beep(int frequency, int duration)
    parameters:
    - id: frequency
      type: System.Int32
      description: "\nThe frequency of the beep, ranging from 37 to 32767 hertz.\n"
    - id: duration
      type: System.Int32
      description: "\nThe duration of the beep measured in milliseconds.\n"
    content.vb: Public Sub Beep(frequency As Integer, duration As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Beep*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em> frequency </em> is less than 37 or more than 32767 hertz.\n-or-\n<em> duration </em> is less than or equal to zero.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Clear
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Clear
  id: Clear
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ConsoleUtilities.Clear()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Clear()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Clear
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 242
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nClears the console buffer and corresponding console window of display information.\n"
  remarks: "\nUsing the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear\" data-throw-if-not-resolved=\"false\"></xref> method is equivalent invoking the MS-DOS cls command in the command prompt window.  When the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear\" data-throw-if-not-resolved=\"false\"></xref> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen\nbuffer are set to blanks using the current foreground and background colors.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Clear*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: ConsoleUtilities.MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: MoveBufferArea
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 248
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nCopies a specified source area of the screen buffer to a specified destination area.\n"
  remarks: "\nIf the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the\nsource area that fits within the destination area is copied.  That is, the source area is clipped to fit the current screen buffer. The\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method copies the source area to the destination area.  If the destination area\ndoes not\nintersect the source area, the source area is filled with blanks using the current foreground and background colors.  Otherwise, the intersected\nportion of the source area is not filled.\n"
  example: []
  syntax:
    content: public void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop)
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "\nThe leftmost column of the source area.\n"
    - id: sourceTop
      type: System.Int32
      description: "\nThe topmost row of the source area.\n"
    - id: sourceWidth
      type: System.Int32
      description: "\nThe number of columns in the source area.\n"
    - id: sourceHeight
      type: System.Int32
      description: "\nThe number of rows in the source area.\n"
    - id: targetLeft
      type: System.Int32
      description: "\nThe leftmost column of the destination area.\n"
    - id: targetTop
      type: System.Int32
      description: "\nThe topmost row of the destination area.\n"
    content.vb: Public Sub MoveBufferArea(sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nOne or more of the parameters is less than zero.\n-or-\nsourceLeft or targetLeft is greater than or equal to BufferWidth.\n-or-\nsourceTop or targetTop is greater than or equal to BufferHeight.\n-or-\nsourceTop + sourceHeight is greater than or equal to BufferHeight.\n-or-\nsourceLeft + sourceWidth is greater than or equal to BufferWidth.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)
  nameWithType: ConsoleUtilities.MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Char, System.ConsoleColor, System.ConsoleColor)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: MoveBufferArea
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 254
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nCopies a specified source area of the screen buffer to a specified destination area.\n"
  remarks: "\nIf the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the\nsource area that fits within the destination area is copied.  That is, the source area is clipped to fit the current screen buffer.  The\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Char%2cSystem.ConsoleColor%2cSystem.ConsoleColor)\" data-throw-if-not-resolved=\"false\"></xref> method copies the source area to the\ndestination\narea.  If the destination area does not intersect the source area, the source area is filled with the character specified by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceChar</code>, using the colors specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceForeColor</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceBackColor</code>.   Otherwise,\nthe intersected portion of the source area is not filled.  The\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Char%2cSystem.ConsoleColor%2cSystem.ConsoleColor)\" data-throw-if-not-resolved=\"false\"></xref> method performs no operation if\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceWidth</code> or <code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceHeight</code> is zero.\n"
  example: []
  syntax:
    content: public void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "\nThe leftmost column of the source area.\n"
    - id: sourceTop
      type: System.Int32
      description: "\nThe topmost row of the source area.\n"
    - id: sourceWidth
      type: System.Int32
      description: "\nThe number of columns in the source area.\n"
    - id: sourceHeight
      type: System.Int32
      description: "\nThe number of rows in the source area.\n"
    - id: targetLeft
      type: System.Int32
      description: "\nThe leftmost column of the destination area.\n"
    - id: targetTop
      type: System.Int32
      description: "\nThe topmost row of the destination area.\n"
    - id: sourceChar
      type: System.Char
      description: "\nThe character used to fill the source area.\n"
    - id: sourceForeColor
      type: System.ConsoleColor
      description: "\nThe foreground color used to fill the source area.\n"
    - id: sourceBackColor
      type: System.ConsoleColor
      description: "\nThe background color used to fill the source area.\n"
    content.vb: Public Sub MoveBufferArea(sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nOne or more of the parameters is less than zero.\n-or-\nsourceLeft or targetLeft is greater than or equal to BufferWidth.\n-or-\nsourceTop or targetTop is greater than or equal to BufferHeight.\n-or-\nsourceTop + sourceHeight is greater than or equal to BufferHeight.\n-or-\nsourceLeft + sourceWidth is greater than or equal to BufferWidth.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nOne or both of the color parameters is not a member of the <xref href=\"System.ConsoleColor\" data-throw-if-not-resolved=\"false\"></xref> enumeration.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe user does not have permission to perform this action.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError
  id: OpenStandardError
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: OpenStandardError()
  nameWithType: ConsoleUtilities.OpenStandardError()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardError
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 278
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nAcquires the standard error stream.\n"
  remarks: "\nThis method can be used to reacquire the standard error stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public Stream OpenStandardError()
    return:
      type: System.IO.Stream
      description: "\nThe standard error stream.\n"
    content.vb: Public Function OpenStandardError As Stream
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError(System.Int32)
  id: OpenStandardError(System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: OpenStandardError(Int32)
  nameWithType: ConsoleUtilities.OpenStandardError(Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardError
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 284
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nAcquires the standard error stream.\n"
  remarks: "\nThis method can be used to reacquire the standard error stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public Stream OpenStandardError(int bufferSize)
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "\nThe internal stream buffer size.\n"
    return:
      type: System.IO.Stream
      description: "\nThe standard error stream.\n"
    content.vb: Public Function OpenStandardError(bufferSize As Integer) As Stream
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput
  id: OpenStandardInput
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: OpenStandardInput()
  nameWithType: ConsoleUtilities.OpenStandardInput()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardInput
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 290
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nAcquires the standard input stream.\n"
  remarks: "\nThis method can be used to reacquire the standard error stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public Stream OpenStandardInput()
    return:
      type: System.IO.Stream
      description: "\nThe standard input stream.\n"
    content.vb: Public Function OpenStandardInput As Stream
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput(System.Int32)
  id: OpenStandardInput(System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: OpenStandardInput(Int32)
  nameWithType: ConsoleUtilities.OpenStandardInput(Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardInput
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 296
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nAcquires the standard input stream.\n"
  remarks: "\nThis method can be used to reacquire the standard input stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public Stream OpenStandardInput(int bufferSize)
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "\nThe internal stream buffer size.\n"
    return:
      type: System.IO.Stream
      description: "\nThe standard input stream.\n"
    content.vb: Public Function OpenStandardInput(bufferSize As Integer) As Stream
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput
  id: OpenStandardOutput
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: OpenStandardOutput()
  nameWithType: ConsoleUtilities.OpenStandardOutput()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardOutput
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 302
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nAcquires the standard output stream.\n"
  remarks: "\nThis method can be used to reacquire the standard output stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public Stream OpenStandardOutput()
    return:
      type: System.IO.Stream
      description: "\nThe standard output stream.\n"
    content.vb: Public Function OpenStandardOutput As Stream
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput(System.Int32)
  id: OpenStandardOutput(System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: OpenStandardOutput(Int32)
  nameWithType: ConsoleUtilities.OpenStandardOutput(Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardOutput
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 308
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nAcquires the standard output stream.\n"
  remarks: "\nThis method can be used to reacquire the standard output stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public Stream OpenStandardOutput(int bufferSize)
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "\nThe internal stream buffer size.\n"
    return:
      type: System.IO.Stream
      description: "\nThe standard output stream.\n"
    content.vb: Public Function OpenStandardOutput(bufferSize As Integer) As Stream
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Read
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Read
  id: Read
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: ConsoleUtilities.Read()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Read()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Read
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 314
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nReads the next character from the standard input stream.\n"
  remarks: "\nThe <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read\" data-throw-if-not-resolved=\"false\"></xref> method blocks its return while you type input characters; it terminates when you press the Enter key. Pressing Enter\nappends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).\nSubsequent calls to the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read\" data-throw-if-not-resolved=\"false\"></xref> method retrieve your input one character at a time.  After the final character is retrieved,\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read\" data-throw-if-not-resolved=\"false\"></xref> blocks its return again and the cycle repeats.\n"
  example: []
  syntax:
    content: public int Read()
    return:
      type: System.Int32
      description: "\nThe next character from the input stream, or negative one (-1) if there are currently no more characters to be read.\n"
    content.vb: Public Function Read As Integer
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Read*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey
  id: ReadKey
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: ReadKey()
  nameWithType: ConsoleUtilities.ReadKey()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ReadKey
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 320
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nObtains the next character or function key pressed by the user.  The pressed key is displayed in the console window.\n"
  example: []
  syntax:
    content: public ConsoleKeyInfo ReadKey()
    return:
      type: System.ConsoleKeyInfo
      description: "\nA ConsoleKeyInfo Object that describes the ConsoleKey constant and Unicode character, if any, that correspond to the pressed console key.\nThe ConsoleKeyInfo Object also describes, in a bitwise combination of ConsoleModifiers values, whether one or more Shift, Alt, or Ctrl\nmodifier keys was pressed simultaneously with the console key.\n"
    content.vb: Public Function ReadKey As ConsoleKeyInfo
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey(System.Boolean)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey(System.Boolean)
  id: ReadKey(System.Boolean)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: ReadKey(Boolean)
  nameWithType: ConsoleUtilities.ReadKey(Boolean)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey(System.Boolean)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ReadKey
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 326
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nObtains the next character or function key pressed by the user.  The pressed key is optionally displayed in the console window.\n"
  example: []
  syntax:
    content: public ConsoleKeyInfo ReadKey(bool intercept)
    parameters:
    - id: intercept
      type: System.Boolean
      description: "\nDetermines whether to display the pressed key in the console window. <code> true </code> to not display the pressed key; otherwise, <code> false </code>.\n"
    return:
      type: System.ConsoleKeyInfo
      description: "\nA ConsoleKeyInfo Object that describes the ConsoleKey constant and Unicode character, if any, that correspond to the pressed console key.\nThe ConsoleKeyInfo Object also describes, in a bitwise combination of ConsoleModifiers values, whether one or more Shift, Alt, or Ctrl modifier\nkeys was pressed simultaneously with the console key.\n"
    content.vb: Public Function ReadKey(intercept As Boolean) As ConsoleKeyInfo
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine
  id: ReadLine
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: ReadLine()
  nameWithType: ConsoleUtilities.ReadLine()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ReadLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 332
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nReads the next line of characters from the standard input stream.\n"
  example: []
  syntax:
    content: public string ReadLine()
    return:
      type: System.String
      description: "\nThe next line of characters from the input stream, or <code> null </code> if no more lines are available.\n"
    content.vb: Public Function ReadLine As String
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor
  id: ResetColor
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: ResetColor()
  nameWithType: ConsoleUtilities.ResetColor()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ResetColor
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 338
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the foreground and background console colors to their defaults.\n"
  example: []
  syntax:
    content: public void ResetColor()
    content.vb: Public Sub ResetColor
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize(System.Int32,System.Int32)
  id: SetBufferSize(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: SetBufferSize(Int32, Int32)
  nameWithType: ConsoleUtilities.SetBufferSize(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetBufferSize
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 344
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the height and width of the screen buffer area to the specified values.\n"
  example: []
  syntax:
    content: public void SetBufferSize(int width, int height)
    parameters:
    - id: width
      type: System.Int32
      description: "\nThe width of the buffer area measured in columns.\n"
    - id: height
      type: System.Int32
      description: "\nThe height of the buffer area measured in rows.\n"
    content.vb: Public Sub SetBufferSize(width As Integer, height As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition(System.Int32,System.Int32)
  id: SetCursorPosition(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: SetCursorPosition(Int32, Int32)
  nameWithType: ConsoleUtilities.SetCursorPosition(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetCursorPosition
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 350
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the position of the cursor.\n"
  example: []
  syntax:
    content: public void SetCursorPosition(int left, int top)
    parameters:
    - id: left
      type: System.Int32
      description: "\nThe column position of the cursor. Columns are numbered from left to right starting at 0.\n"
    - id: top
      type: System.Int32
      description: "\nThe row position of the cursor. Rows are numbered from top to bottom starting at 0.\n"
    content.vb: Public Sub SetCursorPosition(left As Integer, top As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetError(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.SetError(System.IO.TextWriter)
  id: SetError(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: SetError(TextWriter)
  nameWithType: ConsoleUtilities.SetError(TextWriter)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetError(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetError
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 356
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error\" data-throw-if-not-resolved=\"false\"></xref> property to the specified <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> Object.\n"
  example: []
  syntax:
    content: public void SetError(TextWriter newError)
    parameters:
    - id: newError
      type: System.IO.TextWriter
      description: "\nA stream that is the new standard error output.\n"
    content.vb: Public Sub SetError(newError As TextWriter)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.SetError*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetInput(System.IO.TextReader)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.SetInput(System.IO.TextReader)
  id: SetInput(System.IO.TextReader)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: SetInput(TextReader)
  nameWithType: ConsoleUtilities.SetInput(TextReader)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetInput(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetInput
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 362
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input\" data-throw-if-not-resolved=\"false\"></xref> property to the specified <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> Object.\n"
  example: []
  syntax:
    content: public void SetInput(TextReader newInput)
    parameters:
    - id: newInput
      type: System.IO.TextReader
      description: "\nA stream that is the new standard input.\n"
    content.vb: Public Sub SetInput(newInput As TextReader)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.SetInput*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput(System.IO.TextWriter)
  id: SetOutput(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: SetOutput(TextWriter)
  nameWithType: ConsoleUtilities.SetOutput(TextWriter)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetOutput
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 368
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output\" data-throw-if-not-resolved=\"false\"></xref>  property to the specified <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> Object.\n"
  example: []
  syntax:
    content: public void SetOutput(TextWriter newOutput)
    parameters:
    - id: newOutput
      type: System.IO.TextWriter
      description: "\nThe new out.\n"
    content.vb: Public Sub SetOutput(newOutput As TextWriter)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition(System.Int32,System.Int32)
  id: SetWindowPosition(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: SetWindowPosition(Int32, Int32)
  nameWithType: ConsoleUtilities.SetWindowPosition(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetWindowPosition
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 374
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the position of the console window relative to the screen buffer.\n"
  example: []
  syntax:
    content: public void SetWindowPosition(int left, int top)
    parameters:
    - id: left
      type: System.Int32
      description: "\nThe column position of the upper left corner of the console window.\n"
    - id: top
      type: System.Int32
      description: "\nThe row position of the upper left corner of the console window.\n"
    content.vb: Public Sub SetWindowPosition(left As Integer, top As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize(System.Int32,System.Int32)
  id: SetWindowSize(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: SetWindowSize(Int32, Int32)
  nameWithType: ConsoleUtilities.SetWindowSize(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetWindowSize
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 380
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nSets the height and width of the console window to the specified values.\n"
  example: []
  syntax:
    content: public void SetWindowSize(int width, int height)
    parameters:
    - id: width
      type: System.Int32
      description: "\nThe width of the console window measured in columns.\n"
    - id: height
      type: System.Int32
      description: "\nThe height of the console window measured in rows.\n"
    content.vb: Public Sub SetWindowSize(width As Integer, height As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Boolean)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Boolean)
  nameWithType: ConsoleUtilities.Write(Boolean)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Boolean)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 386
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As Boolean)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char)
  id: Write(System.Char)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Char)
  nameWithType: ConsoleUtilities.Write(Char)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 392
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(char value)
    parameters:
    - id: value
      type: System.Char
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As Char)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[])
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[])
  id: Write(System.Char[])
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Char[])
  nameWithType: ConsoleUtilities.Write(Char[])
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[])
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 398
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(char[] buffer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\nThe buffer to write.\n"
    content.vb: Public Sub Write(buffer As Char())
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  nameWithType.vb: ConsoleUtilities.Write(Char())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char())
  name.vb: Write(Char())
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Decimal)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Decimal)
  nameWithType: ConsoleUtilities.Write(Decimal)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Decimal)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 404
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As Decimal)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Double)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Double)
  id: Write(System.Double)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Double)
  nameWithType: ConsoleUtilities.Write(Double)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Double)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 410
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(double value)
    parameters:
    - id: value
      type: System.Double
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As Double)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int32)
  id: Write(System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Int32)
  nameWithType: ConsoleUtilities.Write(Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 416
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(int value)
    parameters:
    - id: value
      type: System.Int32
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int64)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int64)
  id: Write(System.Int64)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Int64)
  nameWithType: ConsoleUtilities.Write(Int64)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Int64)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 422
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(long value)
    parameters:
    - id: value
      type: System.Int64
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As Long)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Object)
  id: Write(System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Object)
  nameWithType: ConsoleUtilities.Write(Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 428
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(object value)
    parameters:
    - id: value
      type: System.Object
      description: "\nThe value to write or <code> null </code>.\n"
    content.vb: Public Sub Write(value As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Single)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Single)
  id: Write(System.Single)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Single)
  nameWithType: ConsoleUtilities.Write(Single)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Single)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 434
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(float value)
    parameters:
    - id: value
      type: System.Single
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As Single)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String)
  id: Write(System.String)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: ConsoleUtilities.Write(String)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 440
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(string value)
    parameters:
    - id: value
      type: System.String
      description: "\nThe value to write.\n"
    content.vb: Public Sub Write(value As String)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(UInt32)
  nameWithType: ConsoleUtilities.Write(UInt32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 446
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public void Write(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: "\nThe value to write.\n"
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub Write(value As UInteger)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt64)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(UInt64)
  nameWithType: ConsoleUtilities.Write(UInt64)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.UInt64)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 453
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value to the standard output stream.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public void Write(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: "\nThe value to write.\n"
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub Write(value As ULong)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(String, Object)
  nameWithType: ConsoleUtilities.Write(String, Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 460
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified Object to the standard output stream using the specified format information.\n"
  example: []
  syntax:
    content: public void Write(string format, object arg0)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nAn argument to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub Write(format As String, arg0 As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object[])
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(String, Object[])
  nameWithType: ConsoleUtilities.Write(String, Object[])
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 466
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified values to the standard output stream using the specified format information.\n"
  example: []
  syntax:
    content: public void Write(string format, params object[] arg)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg
      type: System.Object[]
      description: "\nAn array of objects to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub Write(format As String, ParamArray arg As Object())
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
  nameWithType.vb: ConsoleUtilities.Write(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String, System.Object())
  name.vb: Write(String, Object())
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(Char[], Int32, Int32)
  nameWithType: ConsoleUtilities.Write(Char[], Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 472
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified Object to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(char[] buffer, int index, int count)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\nAn array of Unicode characters.\n"
    - id: index
      type: System.Int32
      description: "\nThe starting position in <code data-dev-comment-type=\"paramref\" class=\"paramref\">buffer</code>.\n"
    - id: count
      type: System.Int32
      description: "\nThe number of characters to write.\n"
    content.vb: Public Sub Write(buffer As Char(), index As Integer, count As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
  nameWithType.vb: ConsoleUtilities.Write(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(String, Object, Object)
  nameWithType: ConsoleUtilities.Write(String, Object, Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 478
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified objects to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(string format, object arg0, object arg1)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nThe first Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg1
      type: System.Object
      description: "\nThe second Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub Write(format As String, arg0 As Object, arg1 As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: Write(String, Object, Object, Object)
  nameWithType: ConsoleUtilities.Write(String, Object, Object, Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write(System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Write
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 484
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified objects to the standard output stream.\n"
  example: []
  syntax:
    content: public void Write(string format, object arg0, object arg1, object arg2)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nThe first Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg1
      type: System.Object
      description: "\nThe second Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg2
      type: System.Object
      description: "\nThe third Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub Write(format As String, arg0 As Object, arg1 As Object, arg2 As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine
  id: WriteLine
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine()
  nameWithType: ConsoleUtilities.WriteLine()
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 490
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the current line terminator to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine()
    content.vb: Public Sub WriteLine
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Boolean)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Boolean)
  nameWithType: ConsoleUtilities.WriteLine(Boolean)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Boolean)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 496
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As Boolean)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Char)
  nameWithType: ConsoleUtilities.WriteLine(Char)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 502
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(char value)
    parameters:
    - id: value
      type: System.Char
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As Char)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[])
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Char[])
  nameWithType: ConsoleUtilities.WriteLine(Char[])
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[])
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 508
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(char[] buffer)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\nThe buffer to write.\n"
    content.vb: Public Sub WriteLine(buffer As Char())
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[])
  nameWithType.vb: ConsoleUtilities.WriteLine(Char())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char())
  name.vb: WriteLine(Char())
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Decimal)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Decimal)
  id: WriteLine(System.Decimal)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Decimal)
  nameWithType: ConsoleUtilities.WriteLine(Decimal)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Decimal)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 514
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As Decimal)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Decimal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Double)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Double)
  nameWithType: ConsoleUtilities.WriteLine(Double)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Double)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 520
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(double value)
    parameters:
    - id: value
      type: System.Double
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As Double)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Int32)
  nameWithType: ConsoleUtilities.WriteLine(Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 526
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(int value)
    parameters:
    - id: value
      type: System.Int32
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int64)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Int64)
  nameWithType: ConsoleUtilities.WriteLine(Int64)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Int64)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 532
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(long value)
    parameters:
    - id: value
      type: System.Int64
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As Long)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Object)
  nameWithType: ConsoleUtilities.WriteLine(Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 538
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(object value)
    parameters:
    - id: value
      type: System.Object
      description: "\nThe value to write or <code> null </code>.\n"
    content.vb: Public Sub WriteLine(value As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Single)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Single)
  nameWithType: ConsoleUtilities.WriteLine(Single)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Single)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 544
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(float value)
    parameters:
    - id: value
      type: System.Single
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As Single)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  nameWithType: ConsoleUtilities.WriteLine(String)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 550
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(string value)
    parameters:
    - id: value
      type: System.String
      description: "\nThe value to write.\n"
    content.vb: Public Sub WriteLine(value As String)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(UInt32)
  nameWithType: ConsoleUtilities.WriteLine(UInt32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 556
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public void WriteLine(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: "\nThe value to write.\n"
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub WriteLine(value As UInteger)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt32)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt64)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt64)
  id: WriteLine(System.UInt64)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(UInt64)
  nameWithType: ConsoleUtilities.WriteLine(UInt64)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.UInt64)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 563
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public void WriteLine(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: "\nThe value to write.\n"
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub WriteLine(value As ULong)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt64)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object)
  nameWithType: ConsoleUtilities.WriteLine(String, Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 570
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified value, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(string format, object arg0)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nAn argument to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub WriteLine(format As String, arg0 As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object[])
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object[])
  nameWithType: ConsoleUtilities.WriteLine(String, Object[])
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 576
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified values, followed by the current line terminator, to the standard output stream using the\nspecified format information.\n"
  example: []
  syntax:
    content: public void WriteLine(string format, params object[] arg)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg
      type: System.Object[]
      description: "\nAn array of objects to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub WriteLine(format As String, ParamArray arg As Object())
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object[])
  nameWithType.vb: ConsoleUtilities.WriteLine(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[],System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(Char[], Int32, Int32)
  nameWithType: ConsoleUtilities.WriteLine(Char[], Int32, Int32)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 582
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.\n"
  example: []
  syntax:
    content: public void WriteLine(char[] buffer, int index, int count)
    parameters:
    - id: buffer
      type: System.Char[]
      description: "\nAn array of Unicode characters.\n"
    - id: index
      type: System.Int32
      description: "\nThe starting position in <code data-dev-comment-type=\"paramref\" class=\"paramref\">buffer</code>.\n"
    - id: count
      type: System.Int32
      description: "\nThe number of characters to write.\n"
    content.vb: Public Sub WriteLine(buffer As Char(), index As Integer, count As Integer)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[],System.Int32,System.Int32)
  nameWithType.vb: ConsoleUtilities.WriteLine(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLine(Char(), Int32, Int32)
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object, Object)
  nameWithType: ConsoleUtilities.WriteLine(String, Object, Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 588
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified values, followed by the current line terminator, to the standard output stream using the\nspecified format information.\n"
  example: []
  syntax:
    content: public void WriteLine(string format, object arg0, object arg1)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nAn argument to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg1
      type: System.Object
      description: "\nThe second Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub WriteLine(format As String, arg0 As Object, arg1 As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.ConsoleUtilities
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object, Object, Object)
  nameWithType: ConsoleUtilities.WriteLine(String, Object, Object, Object)
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine(System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: WriteLine
    path: ../../source/Landorphan.Abstractions/Console/ConsoleUtilities.cs
    startLine: 594
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console
  summary: "\nWrites the text representation of the specified values, followed by the current line terminator, to the standard output stream using the\nspecified format information.\n"
  example: []
  syntax:
    content: public void WriteLine(string format, object arg0, object arg1, object arg2)
    parameters:
    - id: format
      type: System.String
      description: "\nA composite format String.\n"
    - id: arg0
      type: System.Object
      description: "\nAn argument to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg1
      type: System.Object
      description: "\nThe second Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    - id: arg2
      type: System.Object
      description: "\nThe third Object to write using <code data-dev-comment-type=\"paramref\" class=\"paramref\">format</code>.\n"
    content.vb: Public Sub WriteLine(format As String, arg0 As Object, arg1 As Object, arg2 As Object)
  overload: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  implements:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Landorphan.Abstractions.Console
  commentId: N:Landorphan.Abstractions.Console
  name: Landorphan.Abstractions.Console
  nameWithType: Landorphan.Abstractions.Console
  fullName: Landorphan.Abstractions.Console
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Landorphan.Common.DisposableObject
  commentId: T:Landorphan.Common.DisposableObject
  parent: Landorphan.Common
  isExternal: true
  name: DisposableObject
  nameWithType: DisposableObject
  fullName: Landorphan.Common.DisposableObject
- uid: Landorphan.Common.Interfaces.INotifyingQueryDisposable
  commentId: T:Landorphan.Common.Interfaces.INotifyingQueryDisposable
  parent: Landorphan.Common.Interfaces
  isExternal: true
  name: INotifyingQueryDisposable
  nameWithType: INotifyingQueryDisposable
  fullName: Landorphan.Common.Interfaces.INotifyingQueryDisposable
- uid: Landorphan.Common.Interfaces.IQueryDisposable
  commentId: T:Landorphan.Common.Interfaces.IQueryDisposable
  parent: Landorphan.Common.Interfaces
  isExternal: true
  name: IQueryDisposable
  nameWithType: IQueryDisposable
  fullName: Landorphan.Common.Interfaces.IQueryDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Landorphan.Common.Interfaces.IQueryThreadSafe
  commentId: T:Landorphan.Common.Interfaces.IQueryThreadSafe
  parent: Landorphan.Common.Interfaces
  isExternal: true
  name: IQueryThreadSafe
  nameWithType: IQueryThreadSafe
  fullName: Landorphan.Common.Interfaces.IQueryThreadSafe
- uid: Landorphan.Abstractions.Console.Interfaces.IConsole
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsole
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsole
  nameWithType: IConsole
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsole
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleAppearance
  nameWithType: IConsoleAppearance
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleBuffer
  nameWithType: IConsoleBuffer
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleCursor
  nameWithType: IConsoleCursor
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleStreams
  nameWithType: IConsoleStreams
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleReader
  nameWithType: IConsoleReader
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriter
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleWriter
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleWriter
  nameWithType: IConsoleWriter
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriter
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleWrite
  nameWithType: IConsoleWrite
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleWriteLine
  nameWithType: IConsoleWriteLine
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleMisc
  nameWithType: IConsoleMisc
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
- uid: Landorphan.Common.DisposableObject.Dispose
  commentId: M:Landorphan.Common.DisposableObject.Dispose
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: Dispose()
  nameWithType: DisposableObject.Dispose()
  fullName: Landorphan.Common.DisposableObject.Dispose()
  spec.csharp:
  - uid: Landorphan.Common.DisposableObject.Dispose
    name: Dispose
    nameWithType: DisposableObject.Dispose
    fullName: Landorphan.Common.DisposableObject.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Common.DisposableObject.Dispose
    name: Dispose
    nameWithType: DisposableObject.Dispose
    fullName: Landorphan.Common.DisposableObject.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Common.DisposableObject.Dispose(System.Boolean)
  commentId: M:Landorphan.Common.DisposableObject.Dispose(System.Boolean)
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DisposableObject.Dispose(Boolean)
  fullName: Landorphan.Common.DisposableObject.Dispose(System.Boolean)
  spec.csharp:
  - uid: Landorphan.Common.DisposableObject.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DisposableObject.Dispose
    fullName: Landorphan.Common.DisposableObject.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Common.DisposableObject.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DisposableObject.Dispose
    fullName: Landorphan.Common.DisposableObject.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Common.DisposableObject.ReleaseUnmanagedResources
  commentId: M:Landorphan.Common.DisposableObject.ReleaseUnmanagedResources
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: ReleaseUnmanagedResources()
  nameWithType: DisposableObject.ReleaseUnmanagedResources()
  fullName: Landorphan.Common.DisposableObject.ReleaseUnmanagedResources()
  spec.csharp:
  - uid: Landorphan.Common.DisposableObject.ReleaseUnmanagedResources
    name: ReleaseUnmanagedResources
    nameWithType: DisposableObject.ReleaseUnmanagedResources
    fullName: Landorphan.Common.DisposableObject.ReleaseUnmanagedResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Common.DisposableObject.ReleaseUnmanagedResources
    name: ReleaseUnmanagedResources
    nameWithType: DisposableObject.ReleaseUnmanagedResources
    fullName: Landorphan.Common.DisposableObject.ReleaseUnmanagedResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Common.DisposableObject.OnDisposing
  commentId: M:Landorphan.Common.DisposableObject.OnDisposing
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: OnDisposing()
  nameWithType: DisposableObject.OnDisposing()
  fullName: Landorphan.Common.DisposableObject.OnDisposing()
  spec.csharp:
  - uid: Landorphan.Common.DisposableObject.OnDisposing
    name: OnDisposing
    nameWithType: DisposableObject.OnDisposing
    fullName: Landorphan.Common.DisposableObject.OnDisposing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Common.DisposableObject.OnDisposing
    name: OnDisposing
    nameWithType: DisposableObject.OnDisposing
    fullName: Landorphan.Common.DisposableObject.OnDisposing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Common.DisposableObject.ThrowIfDisposed
  commentId: M:Landorphan.Common.DisposableObject.ThrowIfDisposed
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: ThrowIfDisposed()
  nameWithType: DisposableObject.ThrowIfDisposed()
  fullName: Landorphan.Common.DisposableObject.ThrowIfDisposed()
  spec.csharp:
  - uid: Landorphan.Common.DisposableObject.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: DisposableObject.ThrowIfDisposed
    fullName: Landorphan.Common.DisposableObject.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Common.DisposableObject.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: DisposableObject.ThrowIfDisposed
    fullName: Landorphan.Common.DisposableObject.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Common.DisposableObject.IsDisposed
  commentId: P:Landorphan.Common.DisposableObject.IsDisposed
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: IsDisposed
  nameWithType: DisposableObject.IsDisposed
  fullName: Landorphan.Common.DisposableObject.IsDisposed
- uid: Landorphan.Common.DisposableObject.IsDisposing
  commentId: P:Landorphan.Common.DisposableObject.IsDisposing
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: IsDisposing
  nameWithType: DisposableObject.IsDisposing
  fullName: Landorphan.Common.DisposableObject.IsDisposing
- uid: Landorphan.Common.DisposableObject.IsThreadSafe
  commentId: P:Landorphan.Common.DisposableObject.IsThreadSafe
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: IsThreadSafe
  nameWithType: DisposableObject.IsThreadSafe
  fullName: Landorphan.Common.DisposableObject.IsThreadSafe
- uid: Landorphan.Common.DisposableObject.Disposing
  commentId: E:Landorphan.Common.DisposableObject.Disposing
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: Disposing
  nameWithType: DisposableObject.Disposing
  fullName: Landorphan.Common.DisposableObject.Disposing
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Common
  commentId: N:Landorphan.Common
  isExternal: true
  name: Landorphan.Common
  nameWithType: Landorphan.Common
  fullName: Landorphan.Common
- uid: Landorphan.Common.Interfaces
  commentId: N:Landorphan.Common.Interfaces
  isExternal: true
  name: Landorphan.Common.Interfaces
  nameWithType: Landorphan.Common.Interfaces
  fullName: Landorphan.Common.Interfaces
- uid: Landorphan.Abstractions.Console.Interfaces
  commentId: N:Landorphan.Abstractions.Console.Interfaces
  name: Landorphan.Abstractions.Console.Interfaces
  nameWithType: Landorphan.Abstractions.Console.Interfaces
  fullName: Landorphan.Abstractions.Console.Interfaces
- uid: Landorphan.Abstractions.Console.ConsoleUtilities
  commentId: T:Landorphan.Abstractions.Console.ConsoleUtilities
  name: ConsoleUtilities
  nameWithType: ConsoleUtilities
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.#ctor*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.#ctor
  name: ConsoleUtilities
  nameWithType: ConsoleUtilities.ConsoleUtilities
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ConsoleUtilities
- uid: Landorphan.Common.DisposableObject.ReleaseManagedResources
  commentId: M:Landorphan.Common.DisposableObject.ReleaseManagedResources
  parent: Landorphan.Common.DisposableObject
  isExternal: true
  name: ReleaseManagedResources()
  nameWithType: DisposableObject.ReleaseManagedResources()
  fullName: Landorphan.Common.DisposableObject.ReleaseManagedResources()
  spec.csharp:
  - uid: Landorphan.Common.DisposableObject.ReleaseManagedResources
    name: ReleaseManagedResources
    nameWithType: DisposableObject.ReleaseManagedResources
    fullName: Landorphan.Common.DisposableObject.ReleaseManagedResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Common.DisposableObject.ReleaseManagedResources
    name: ReleaseManagedResources
    nameWithType: DisposableObject.ReleaseManagedResources
    fullName: Landorphan.Common.DisposableObject.ReleaseManagedResources
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources
  name: ReleaseManagedResources
  nameWithType: ConsoleUtilities.ReleaseManagedResources
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ReleaseManagedResources
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CancelKeyPress
  commentId: E:Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CancelKeyPress
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  name: CancelKeyPress
  nameWithType: IConsoleMisc.CancelKeyPress
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CancelKeyPress
- uid: System.EventHandler{System.ConsoleCancelEventArgs}
  commentId: T:System.EventHandler{System.ConsoleCancelEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ConsoleCancelEventArgs>
  nameWithType: EventHandler<ConsoleCancelEventArgs>
  fullName: System.EventHandler<System.ConsoleCancelEventArgs>
  nameWithType.vb: EventHandler(Of ConsoleCancelEventArgs)
  fullName.vb: System.EventHandler(Of System.ConsoleCancelEventArgs)
  name.vb: EventHandler(Of ConsoleCancelEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ConsoleCancelEventArgs
    name: ConsoleCancelEventArgs
    nameWithType: ConsoleCancelEventArgs
    fullName: System.ConsoleCancelEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ConsoleCancelEventArgs
    name: ConsoleCancelEventArgs
    nameWithType: ConsoleCancelEventArgs
    fullName: System.ConsoleCancelEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor
  name: BackgroundColor
  nameWithType: ConsoleUtilities.BackgroundColor
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.BackgroundColor
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.BackgroundColor
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.BackgroundColor
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: BackgroundColor
  nameWithType: IConsoleAppearance.BackgroundColor
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.BackgroundColor
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: System.ConsoleColor
  commentId: T:System.ConsoleColor
  parent: System
  isExternal: true
  name: ConsoleColor
  nameWithType: ConsoleColor
  fullName: System.ConsoleColor
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight
  name: BufferHeight
  nameWithType: ConsoleUtilities.BufferHeight
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.BufferHeight
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  name: BufferHeight
  nameWithType: IConsoleBuffer.BufferHeight
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferHeight
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth
  name: BufferWidth
  nameWithType: ConsoleUtilities.BufferWidth
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.BufferWidth
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  name: BufferWidth
  nameWithType: IConsoleBuffer.BufferWidth
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.BufferWidth
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock
  name: CapsLock
  nameWithType: ConsoleUtilities.CapsLock
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CapsLock
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CapsLock
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CapsLock
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  name: CapsLock
  nameWithType: IConsoleMisc.CapsLock
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.CapsLock
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft
  name: CursorLeft
  nameWithType: ConsoleUtilities.CursorLeft
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorLeft
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorLeft
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorLeft
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  name: CursorLeft
  nameWithType: IConsoleCursor.CursorLeft
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorLeft
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize
  name: CursorSize
  nameWithType: ConsoleUtilities.CursorSize
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorSize
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorSize
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorSize
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  name: CursorSize
  nameWithType: IConsoleCursor.CursorSize
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorSize
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop
  name: CursorTop
  nameWithType: ConsoleUtilities.CursorTop
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorTop
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorTop
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorTop
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  name: CursorTop
  nameWithType: IConsoleCursor.CursorTop
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorTop
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible
  name: CursorVisible
  nameWithType: ConsoleUtilities.CursorVisible
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.CursorVisible
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorVisible
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorVisible
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  name: CursorVisible
  nameWithType: IConsoleCursor.CursorVisible
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.CursorVisible
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Error*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Error
  name: Error
  nameWithType: ConsoleUtilities.Error
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Error
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: Error
  nameWithType: IConsoleStreams.Error
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor
  name: ForegroundColor
  nameWithType: ConsoleUtilities.ForegroundColor
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ForegroundColor
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ForegroundColor
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ForegroundColor
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: ForegroundColor
  nameWithType: IConsoleAppearance.ForegroundColor
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ForegroundColor
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Input*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Input
  name: Input
  nameWithType: ConsoleUtilities.Input
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Input
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: Input
  nameWithType: IConsoleStreams.Input
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding
  name: InputEncoding
  nameWithType: ConsoleUtilities.InputEncoding
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.InputEncoding
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: InputEncoding
  nameWithType: IConsoleStreams.InputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected
  name: IsErrorRedirected
  nameWithType: ConsoleUtilities.IsErrorRedirected
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.IsErrorRedirected
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: IsErrorRedirected
  nameWithType: IConsoleStreams.IsErrorRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected
  name: IsInputRedirected
  nameWithType: ConsoleUtilities.IsInputRedirected
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.IsInputRedirected
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: IsInputRedirected
  nameWithType: IConsoleStreams.IsInputRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected
  name: IsOutputRedirected
  nameWithType: ConsoleUtilities.IsOutputRedirected
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.IsOutputRedirected
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: IsOutputRedirected
  nameWithType: IConsoleStreams.IsOutputRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable
  name: KeyAvailable
  nameWithType: ConsoleUtilities.KeyAvailable
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.KeyAvailable
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.KeyAvailable
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleReader.KeyAvailable
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  name: KeyAvailable
  nameWithType: IConsoleReader.KeyAvailable
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.KeyAvailable
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight
  name: LargestWindowHeight
  nameWithType: ConsoleUtilities.LargestWindowHeight
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowHeight
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowHeight
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowHeight
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: LargestWindowHeight
  nameWithType: IConsoleAppearance.LargestWindowHeight
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowHeight
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth
  name: LargestWindowWidth
  nameWithType: ConsoleUtilities.LargestWindowWidth
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.LargestWindowWidth
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowWidth
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowWidth
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: LargestWindowWidth
  nameWithType: IConsoleAppearance.LargestWindowWidth
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.LargestWindowWidth
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock
  name: NumberLock
  nameWithType: ConsoleUtilities.NumberLock
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.NumberLock
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.NumberLock
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.NumberLock
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  name: NumberLock
  nameWithType: IConsoleMisc.NumberLock
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.NumberLock
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Output*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Output
  name: Output
  nameWithType: ConsoleUtilities.Output
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Output
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: Output
  nameWithType: IConsoleStreams.Output
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding
  name: OutputEncoding
  nameWithType: ConsoleUtilities.OutputEncoding
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OutputEncoding
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: OutputEncoding
  nameWithType: IConsoleStreams.OutputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Title*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Title
  name: Title
  nameWithType: ConsoleUtilities.Title
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Title
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Title
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Title
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: Title
  nameWithType: IConsoleAppearance.Title
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Title
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput
  name: TreatControlCAsInput
  nameWithType: ConsoleUtilities.TreatControlCAsInput
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.TreatControlCAsInput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: TreatControlCAsInput
  nameWithType: IConsoleStreams.TreatControlCAsInput
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight
  name: WindowHeight
  nameWithType: ConsoleUtilities.WindowHeight
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowHeight
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: WindowHeight
  nameWithType: IConsoleAppearance.WindowHeight
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowHeight
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft
  name: WindowLeft
  nameWithType: ConsoleUtilities.WindowLeft
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowLeft
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: WindowLeft
  nameWithType: IConsoleAppearance.WindowLeft
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowLeft
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop
  name: WindowTop
  nameWithType: ConsoleUtilities.WindowTop
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowTop
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: WindowTop
  nameWithType: IConsoleAppearance.WindowTop
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowTop
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth
  name: WindowWidth
  nameWithType: ConsoleUtilities.WindowWidth
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WindowWidth
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: WindowWidth
  nameWithType: IConsoleAppearance.WindowWidth
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.WindowWidth
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Beep*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Beep
  name: Beep
  nameWithType: ConsoleUtilities.Beep
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Beep
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  name: Beep()
  nameWithType: IConsoleMisc.Beep()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
    name: Beep
    nameWithType: IConsoleMisc.Beep
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
    name: Beep
    nameWithType: IConsoleMisc.Beep
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc
  isExternal: true
  name: Beep(Int32, Int32)
  nameWithType: IConsoleMisc.Beep(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep(System.Int32, System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep(System.Int32,System.Int32)
    name: Beep
    nameWithType: IConsoleMisc.Beep
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep(System.Int32,System.Int32)
    name: Beep
    nameWithType: IConsoleMisc.Beep
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleMisc.Beep
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Clear*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Clear
  name: Clear
  nameWithType: ConsoleUtilities.Clear
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Clear
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: Clear()
  nameWithType: IConsoleAppearance.Clear()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear
    name: Clear
    nameWithType: IConsoleAppearance.Clear
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear
    name: Clear
    nameWithType: IConsoleAppearance.Clear
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea
  name: MoveBufferArea
  nameWithType: ConsoleUtilities.MoveBufferArea
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.MoveBufferArea
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  isExternal: true
  name: MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: IConsoleBuffer.MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: MoveBufferArea
    nameWithType: IConsoleBuffer.MoveBufferArea
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: MoveBufferArea
    nameWithType: IConsoleBuffer.MoveBufferArea
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  isExternal: true
  name: MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)
  nameWithType: IConsoleBuffer.MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Char, System.ConsoleColor, System.ConsoleColor)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
    name: MoveBufferArea
    nameWithType: IConsoleBuffer.MoveBufferArea
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
    name: MoveBufferArea
    nameWithType: IConsoleBuffer.MoveBufferArea
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.MoveBufferArea
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError
  name: OpenStandardError
  nameWithType: ConsoleUtilities.OpenStandardError
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardError
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: OpenStandardError()
  nameWithType: IConsoleStreams.OpenStandardError()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
    name: OpenStandardError
    nameWithType: IConsoleStreams.OpenStandardError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
    name: OpenStandardError
    nameWithType: IConsoleStreams.OpenStandardError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: OpenStandardError(Int32)
  nameWithType: IConsoleStreams.OpenStandardError(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
    name: OpenStandardError
    nameWithType: IConsoleStreams.OpenStandardError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
    name: OpenStandardError
    nameWithType: IConsoleStreams.OpenStandardError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput
  name: OpenStandardInput
  nameWithType: ConsoleUtilities.OpenStandardInput
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardInput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: OpenStandardInput()
  nameWithType: IConsoleStreams.OpenStandardInput()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
    name: OpenStandardInput
    nameWithType: IConsoleStreams.OpenStandardInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
    name: OpenStandardInput
    nameWithType: IConsoleStreams.OpenStandardInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: OpenStandardInput(Int32)
  nameWithType: IConsoleStreams.OpenStandardInput(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
    name: OpenStandardInput
    nameWithType: IConsoleStreams.OpenStandardInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
    name: OpenStandardInput
    nameWithType: IConsoleStreams.OpenStandardInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput
  name: OpenStandardOutput
  nameWithType: ConsoleUtilities.OpenStandardOutput
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.OpenStandardOutput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: OpenStandardOutput()
  nameWithType: IConsoleStreams.OpenStandardOutput()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
    name: OpenStandardOutput
    nameWithType: IConsoleStreams.OpenStandardOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
    name: OpenStandardOutput
    nameWithType: IConsoleStreams.OpenStandardOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: OpenStandardOutput(Int32)
  nameWithType: IConsoleStreams.OpenStandardOutput(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
    name: OpenStandardOutput
    nameWithType: IConsoleStreams.OpenStandardOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
    name: OpenStandardOutput
    nameWithType: IConsoleStreams.OpenStandardOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Read*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Read
  name: Read
  nameWithType: ConsoleUtilities.Read
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Read
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  name: Read()
  nameWithType: IConsoleReader.Read()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read
    name: Read
    nameWithType: IConsoleReader.Read
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read
    name: Read
    nameWithType: IConsoleReader.Read
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey
  name: ReadKey
  nameWithType: ConsoleUtilities.ReadKey
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ReadKey
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  name: ReadKey()
  nameWithType: IConsoleReader.ReadKey()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
    name: ReadKey
    nameWithType: IConsoleReader.ReadKey
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
    name: ReadKey
    nameWithType: IConsoleReader.ReadKey
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ConsoleKeyInfo
  commentId: T:System.ConsoleKeyInfo
  parent: System
  isExternal: true
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey(System.Boolean)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey(System.Boolean)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  isExternal: true
  name: ReadKey(Boolean)
  nameWithType: IConsoleReader.ReadKey(Boolean)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey(System.Boolean)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey(System.Boolean)
    name: ReadKey
    nameWithType: IConsoleReader.ReadKey
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey(System.Boolean)
    name: ReadKey
    nameWithType: IConsoleReader.ReadKey
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine
  name: ReadLine
  nameWithType: ConsoleUtilities.ReadLine
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ReadLine
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleReader
  name: ReadLine()
  nameWithType: IConsoleReader.ReadLine()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine
    name: ReadLine
    nameWithType: IConsoleReader.ReadLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine
    name: ReadLine
    nameWithType: IConsoleReader.ReadLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleReader.ReadLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor
  name: ResetColor
  nameWithType: ConsoleUtilities.ResetColor
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.ResetColor
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  name: ResetColor()
  nameWithType: IConsoleAppearance.ResetColor()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor
    name: ResetColor
    nameWithType: IConsoleAppearance.ResetColor
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor
    name: ResetColor
    nameWithType: IConsoleAppearance.ResetColor
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.ResetColor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize
  name: SetBufferSize
  nameWithType: ConsoleUtilities.SetBufferSize
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetBufferSize
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer
  isExternal: true
  name: SetBufferSize(Int32, Int32)
  nameWithType: IConsoleBuffer.SetBufferSize(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize(System.Int32, System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize(System.Int32,System.Int32)
    name: SetBufferSize
    nameWithType: IConsoleBuffer.SetBufferSize
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize(System.Int32,System.Int32)
    name: SetBufferSize
    nameWithType: IConsoleBuffer.SetBufferSize
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleBuffer.SetBufferSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition
  name: SetCursorPosition
  nameWithType: ConsoleUtilities.SetCursorPosition
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetCursorPosition
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor
  isExternal: true
  name: SetCursorPosition(Int32, Int32)
  nameWithType: IConsoleCursor.SetCursorPosition(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition(System.Int32, System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition(System.Int32,System.Int32)
    name: SetCursorPosition
    nameWithType: IConsoleCursor.SetCursorPosition
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition(System.Int32,System.Int32)
    name: SetCursorPosition
    nameWithType: IConsoleCursor.SetCursorPosition
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleCursor.SetCursorPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetError*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.SetError
  name: SetError
  nameWithType: ConsoleUtilities.SetError
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetError
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: SetError(TextWriter)
  nameWithType: IConsoleStreams.SetError(TextWriter)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
    name: SetError
    nameWithType: IConsoleStreams.SetError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
    name: SetError
    nameWithType: IConsoleStreams.SetError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetInput*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.SetInput
  name: SetInput
  nameWithType: ConsoleUtilities.SetInput
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetInput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: SetInput(TextReader)
  nameWithType: IConsoleStreams.SetInput(TextReader)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
    name: SetInput
    nameWithType: IConsoleStreams.SetInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
    name: SetInput
    nameWithType: IConsoleStreams.SetInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput
  name: SetOutput
  nameWithType: ConsoleUtilities.SetOutput
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetOutput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: SetOutput(TextWriter)
  nameWithType: IConsoleStreams.SetOutput(TextWriter)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
    name: SetOutput
    nameWithType: IConsoleStreams.SetOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
    name: SetOutput
    nameWithType: IConsoleStreams.SetOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition
  name: SetWindowPosition
  nameWithType: ConsoleUtilities.SetWindowPosition
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowPosition
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  isExternal: true
  name: SetWindowPosition(Int32, Int32)
  nameWithType: IConsoleAppearance.SetWindowPosition(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition(System.Int32, System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition(System.Int32,System.Int32)
    name: SetWindowPosition
    nameWithType: IConsoleAppearance.SetWindowPosition
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition(System.Int32,System.Int32)
    name: SetWindowPosition
    nameWithType: IConsoleAppearance.SetWindowPosition
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize
  name: SetWindowSize
  nameWithType: ConsoleUtilities.SetWindowSize
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.SetWindowSize
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize(System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize(System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance
  isExternal: true
  name: SetWindowSize(Int32, Int32)
  nameWithType: IConsoleAppearance.SetWindowSize(Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize(System.Int32, System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize(System.Int32,System.Int32)
    name: SetWindowSize
    nameWithType: IConsoleAppearance.SetWindowSize
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize(System.Int32,System.Int32)
    name: SetWindowSize
    nameWithType: IConsoleAppearance.SetWindowSize
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleAppearance.SetWindowSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.Write*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.Write
  name: Write
  nameWithType: ConsoleUtilities.Write
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.Write
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Boolean)
  nameWithType: IConsoleWrite.Write(Boolean)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Boolean)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Char)
  nameWithType: IConsoleWrite.Write(Char)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Char[])
  nameWithType: IConsoleWrite.Write(Char[])
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
  nameWithType.vb: IConsoleWrite.Write(Char())
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char())
  name.vb: Write(Char())
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[])
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Decimal)
  nameWithType: IConsoleWrite.Write(Decimal)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Decimal)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Double)
  nameWithType: IConsoleWrite.Write(Double)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Double)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Int32)
  nameWithType: IConsoleWrite.Write(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int32)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Int64)
  nameWithType: IConsoleWrite.Write(Int64)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Int64)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Object)
  nameWithType: IConsoleWrite.Write(Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Single)
  nameWithType: IConsoleWrite.Write(Single)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Single)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(String)
  nameWithType: IConsoleWrite.Write(String)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(UInt32)
  nameWithType: IConsoleWrite.Write(UInt32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt32)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(UInt64)
  nameWithType: IConsoleWrite.Write(UInt64)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.UInt64)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(String, Object)
  nameWithType: IConsoleWrite.Write(String, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(String, Object[])
  nameWithType: IConsoleWrite.Write(String, Object[])
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object[])
  nameWithType.vb: IConsoleWrite.Write(String, Object())
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object())
  name.vb: Write(String, Object())
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object[])
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(Char[], Int32, Int32)
  nameWithType: IConsoleWrite.Write(Char[], Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: IConsoleWrite.Write(Char(), Int32, Int32)
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char(), System.Int32, System.Int32)
  name.vb: Write(Char(), Int32, Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.Char[],System.Int32,System.Int32)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(String, Object, Object)
  nameWithType: IConsoleWrite.Write(String, Object, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite
  isExternal: true
  name: Write(String, Object, Object, Object)
  nameWithType: IConsoleWrite.Write(String, Object, Object, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String, System.Object, System.Object, System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write(System.String,System.Object,System.Object,System.Object)
    name: Write
    nameWithType: IConsoleWrite.Write
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWrite.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine*
  commentId: Overload:Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine
  name: WriteLine
  nameWithType: ConsoleUtilities.WriteLine
  fullName: Landorphan.Abstractions.Console.ConsoleUtilities.WriteLine
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  name: WriteLine()
  nameWithType: IConsoleWriteLine.WriteLine()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Boolean)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Boolean)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Boolean)
  nameWithType: IConsoleWriteLine.WriteLine(Boolean)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Boolean)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Boolean)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Boolean)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Char)
  nameWithType: IConsoleWriteLine.WriteLine(Char)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[])
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[])
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Char[])
  nameWithType: IConsoleWriteLine.WriteLine(Char[])
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[])
  nameWithType.vb: IConsoleWriteLine.WriteLine(Char())
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char())
  name.vb: WriteLine(Char())
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[])
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[])
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Decimal)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Decimal)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Decimal)
  nameWithType: IConsoleWriteLine.WriteLine(Decimal)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Decimal)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Decimal)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Decimal)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Double)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Double)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Double)
  nameWithType: IConsoleWriteLine.WriteLine(Double)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Double)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Double)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Double)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Int32)
  nameWithType: IConsoleWriteLine.WriteLine(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int32)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int32)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int64)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int64)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Int64)
  nameWithType: IConsoleWriteLine.WriteLine(Int64)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int64)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int64)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Int64)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Object)
  nameWithType: IConsoleWriteLine.WriteLine(Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Single)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Single)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Single)
  nameWithType: IConsoleWriteLine.WriteLine(Single)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Single)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Single)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Single)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(String)
  nameWithType: IConsoleWriteLine.WriteLine(String)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(UInt32)
  nameWithType: IConsoleWriteLine.WriteLine(UInt32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt32)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt32)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt64)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt64)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(UInt64)
  nameWithType: IConsoleWriteLine.WriteLine(UInt64)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt64)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt64)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.UInt64)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(String, Object)
  nameWithType: IConsoleWriteLine.WriteLine(String, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String, System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object[])
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object[])
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(String, Object[])
  nameWithType: IConsoleWriteLine.WriteLine(String, Object[])
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String, System.Object[])
  nameWithType.vb: IConsoleWriteLine.WriteLine(String, Object())
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object[])
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object[])
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[],System.Int32,System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(Char[], Int32, Int32)
  nameWithType: IConsoleWriteLine.WriteLine(Char[], Int32, Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: IConsoleWriteLine.WriteLine(Char(), Int32, Int32)
  fullName.vb: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char(), System.Int32, System.Int32)
  name.vb: WriteLine(Char(), Int32, Int32)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[],System.Int32,System.Int32)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.Char[],System.Int32,System.Int32)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(String, Object, Object)
  nameWithType: IConsoleWriteLine.WriteLine(String, Object, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String, System.Object, System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object,System.Object)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine
  isExternal: true
  name: WriteLine(String, Object, Object, Object)
  nameWithType: IConsoleWriteLine.WriteLine(String, Object, Object, Object)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String, System.Object, System.Object, System.Object)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object,System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine(System.String,System.Object,System.Object,System.Object)
    name: WriteLine
    nameWithType: IConsoleWriteLine.WriteLine
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleWriteLine.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
