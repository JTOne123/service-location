### YamlMime:ManagedReference
items:
- uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  commentId: T:Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  id: IEnvironmentVariable
  parent: Landorphan.Abstractions.Interfaces
  children:
  - Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name
  - Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value
  langs:
  - csharp
  - vb
  name: IEnvironmentVariable
  nameWithType: IEnvironmentVariable
  fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  type: Interface
  source:
    remote:
      path: source/Landorphan.Abstractions/Interfaces/IEnvironmentVariable.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IEnvironmentVariable
    path: ../../source/Landorphan.Abstractions/Interfaces/IEnvironmentVariable.cs
    startLine: 7
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Interfaces
  summary: "\nRepresents an environment variable.\n"
  example: []
  syntax:
    content: 'public interface IEnvironmentVariable : IEquatable<IEnvironmentVariable>'
    content.vb: >-
      Public Interface IEnvironmentVariable
          Inherits IEquatable(Of IEnvironmentVariable)
  inheritedMembers:
  - System.IEquatable{Landorphan.Abstractions.Interfaces.IEnvironmentVariable}.Equals(Landorphan.Abstractions.Interfaces.IEnvironmentVariable)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name
  commentId: P:Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name
  id: Name
  parent: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IEnvironmentVariable.Name
  fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Interfaces/IEnvironmentVariable.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Name
    path: ../../source/Landorphan.Abstractions/Interfaces/IEnvironmentVariable.cs
    startLine: 15
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Interfaces
  summary: "\nGets the name of the environment variable.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the environment variable.\n"
    content.vb: ReadOnly Property Name As String
  overload: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value
  commentId: P:Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value
  id: Value
  parent: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: IEnvironmentVariable.Value
  fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Interfaces/IEnvironmentVariable.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Value
    path: ../../source/Landorphan.Abstractions/Interfaces/IEnvironmentVariable.cs
    startLine: 23
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Interfaces
  summary: "\nGets the value of the environment variable.\n"
  example: []
  syntax:
    content: string Value { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe value of the environment variable.\n"
    content.vb: ReadOnly Property Value As String
  overload: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Landorphan.Abstractions.Interfaces
  commentId: N:Landorphan.Abstractions.Interfaces
  name: Landorphan.Abstractions.Interfaces
  nameWithType: Landorphan.Abstractions.Interfaces
  fullName: Landorphan.Abstractions.Interfaces
- uid: System.IEquatable{Landorphan.Abstractions.Interfaces.IEnvironmentVariable}.Equals(Landorphan.Abstractions.Interfaces.IEnvironmentVariable)
  commentId: M:System.IEquatable{Landorphan.Abstractions.Interfaces.IEnvironmentVariable}.Equals(Landorphan.Abstractions.Interfaces.IEnvironmentVariable)
  parent: System.IEquatable{Landorphan.Abstractions.Interfaces.IEnvironmentVariable}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IEnvironmentVariable)
  nameWithType: IEquatable<IEnvironmentVariable>.Equals(IEnvironmentVariable)
  fullName: System.IEquatable<Landorphan.Abstractions.Interfaces.IEnvironmentVariable>.Equals(Landorphan.Abstractions.Interfaces.IEnvironmentVariable)
  nameWithType.vb: IEquatable(Of IEnvironmentVariable).Equals(IEnvironmentVariable)
  fullName.vb: System.IEquatable(Of Landorphan.Abstractions.Interfaces.IEnvironmentVariable).Equals(Landorphan.Abstractions.Interfaces.IEnvironmentVariable)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IEnvironmentVariable>.Equals
    fullName: System.IEquatable<Landorphan.Abstractions.Interfaces.IEnvironmentVariable>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
    name: IEnvironmentVariable
    nameWithType: IEnvironmentVariable
    fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IEnvironmentVariable).Equals
    fullName: System.IEquatable(Of Landorphan.Abstractions.Interfaces.IEnvironmentVariable).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
    name: IEnvironmentVariable
    nameWithType: IEnvironmentVariable
    fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Landorphan.Abstractions.Interfaces.IEnvironmentVariable}
  commentId: T:System.IEquatable{Landorphan.Abstractions.Interfaces.IEnvironmentVariable}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IEnvironmentVariable>
  nameWithType: IEquatable<IEnvironmentVariable>
  fullName: System.IEquatable<Landorphan.Abstractions.Interfaces.IEnvironmentVariable>
  nameWithType.vb: IEquatable(Of IEnvironmentVariable)
  fullName.vb: System.IEquatable(Of Landorphan.Abstractions.Interfaces.IEnvironmentVariable)
  name.vb: IEquatable(Of IEnvironmentVariable)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
    name: IEnvironmentVariable
    nameWithType: IEnvironmentVariable
    fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
    name: IEnvironmentVariable
    nameWithType: IEnvironmentVariable
    fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name*
  commentId: Overload:Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name
  name: Name
  nameWithType: IEnvironmentVariable.Name
  fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value*
  commentId: Overload:Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value
  name: Value
  nameWithType: IEnvironmentVariable.Value
  fullName: Landorphan.Abstractions.Interfaces.IEnvironmentVariable.Value
