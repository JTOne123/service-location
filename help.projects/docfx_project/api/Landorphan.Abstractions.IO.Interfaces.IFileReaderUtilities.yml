### YamlMime:ManagedReference
items:
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  commentId: T:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  id: IFileReaderUtilities
  parent: Landorphan.Abstractions.IO.Interfaces
  children:
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines(System.String,System.Text.Encoding)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText(System.String,System.Text.Encoding)
  - Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines(System.String,System.Text.Encoding)
  langs:
  - csharp
  - vb
  name: IFileReaderUtilities
  nameWithType: IFileReaderUtilities
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  type: Interface
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: IFileReaderUtilities
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 13
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nRepresents methods for reading from files.\n"
  example: []
  syntax:
    content: public interface IFileReaderUtilities
    content.vb: Public Interface IFileReaderUtilities
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: Open(String, FileMode)
  nameWithType: IFileReaderUtilities.Open(String, FileMode)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Open
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 62
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens a <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> on the specified path with read/write access with no sharing.\n"
  example: []
  syntax:
    content: FileStream Open(string path, FileMode mode)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to open.\n"
    - id: mode
      type: System.IO.FileMode
      description: "\nA <xref href=\"System.IO.FileMode\" data-throw-if-not-resolved=\"false\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.\n"
    return:
      type: System.IO.FileStream
      description: "\nA <xref href=\"System.IO.FileMode\" data-throw-if-not-resolved=\"false\"></xref> opened in the specified mode and path, with read/write access and not shared.\n"
    content.vb: Function Open(path As String, mode As FileMode) As FileStream
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by InvalidPathChars.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, (for example, it is on an unmapped drive). \n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file. \n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.\n-or-\nThis operation is not supported on the current platform.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.\n-or-\nThe caller does not have the required permission.\n-or-\nmode is <xref href=\"System.IO.FileMode.Create\" data-throw-if-not-resolved=\"false\"></xref> and the specified file is a hidden file.\n"
  - type: Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
    commentId: T:Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">mode</code> specified an invalid value.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in path was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: Open(String, FileMode, FileAccess)
  nameWithType: IFileReaderUtilities.Open(String, FileMode, FileAccess)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String, System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Open
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 116
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens a <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> on the specified path, with the specified mode and access with no sharing.\n"
  example: []
  syntax:
    content: FileStream Open(string path, FileMode mode, FileAccess access)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to open.\n"
    - id: mode
      type: System.IO.FileMode
      description: "\nA <xref href=\"System.IO.FileMode\" data-throw-if-not-resolved=\"false\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.\n"
    - id: access
      type: System.IO.FileAccess
      description: "\nA <xref href=\"System.IO.FileAccess\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the operations that can be performed on the file\n"
    return:
      type: System.IO.FileStream
      description: "\nAn unshared <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> that provides access to the specified file, with the specified mode and access.\n"
    content.vb: Function Open(path As String, mode As FileMode, access As FileAccess) As FileStream
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by InvalidPathChars.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, (for example, it is on an unmapped drive). \n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file. \n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.\n-or-\nThis operation is not supported on the current platform.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.\n-or-\nThe caller does not have the required permission.\n-or-\nmode is <xref href=\"System.IO.FileMode.Create\" data-throw-if-not-resolved=\"false\"></xref> and the specified file is a hidden file.\n"
  - type: Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
    commentId: T:Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">mode</code> specified an invalid value.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">access</code> specified an invalid value.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in path was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: Open(String, FileMode, FileAccess, FileShare)
  nameWithType: IFileReaderUtilities.Open(String, FileMode, FileAccess, FileShare)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: Open
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 175
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens a <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.\n"
  example: []
  syntax:
    content: FileStream Open(string path, FileMode mode, FileAccess access, FileShare share)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to open.\n"
    - id: mode
      type: System.IO.FileMode
      description: "\nA <xref href=\"System.IO.FileMode\" data-throw-if-not-resolved=\"false\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.\n"
    - id: access
      type: System.IO.FileAccess
      description: "\nA <xref href=\"System.IO.FileAccess\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the operations that can be performed on the file\n"
    - id: share
      type: System.IO.FileShare
      description: "\nA <xref href=\"System.IO.FileShare\" data-throw-if-not-resolved=\"false\"></xref> value specifying the type of access other threads have to the file.\n"
    return:
      type: System.IO.FileStream
      description: "\nA <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.\n"
    content.vb: Function Open(path As String, mode As FileMode, access As FileAccess, share As FileShare) As FileStream
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by InvalidPathChars.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, (for example, it is on an unmapped drive). \n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file. \n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.\n-or-\nThis operation is not supported on the current platform.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.\n-or-\nThe caller does not have the required permission.\n-or-\nmode is <xref href=\"System.IO.FileMode.Create\" data-throw-if-not-resolved=\"false\"></xref> and the specified file is a hidden file.\n"
  - type: Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
    commentId: T:Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">mode</code> specified an invalid value.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">access</code> specified an invalid value.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">share</code> specified an invalid value.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in path was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: OpenRead(String)
  nameWithType: IFileReaderUtilities.OpenRead(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: OpenRead
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 218
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens an existing file for reading.\n"
  example: []
  syntax:
    content: FileStream OpenRead(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to be opened for reading.\n"
    return:
      type: System.IO.FileStream
      description: "\nA read-only <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> on the specified path.\n"
    content.vb: Function OpenRead(path As String) As FileStream
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by InvalidPathChars.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, (for example, it is on an unmapped drive). \n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file. \n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.\n-or-\nThis operation is not supported on the current platform.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.\n-or-\nThe caller does not have the required permission.\n-or-\nmode is <xref href=\"System.IO.FileMode.Create\" data-throw-if-not-resolved=\"false\"></xref> and the specified file is a hidden file.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in path was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText(System.String)
  id: OpenText(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: OpenText(String)
  nameWithType: IFileReaderUtilities.OpenText(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: OpenText
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 261
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens an existing UTF-8 encoded text file for reading.\n"
  example: []
  syntax:
    content: StreamReader OpenText(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to be opened for reading.\n"
    return:
      type: System.IO.StreamReader
      description: "\nA <xref href=\"System.IO.StreamReader\" data-throw-if-not-resolved=\"false\"></xref> on the specified path.\n"
    content.vb: Function OpenText(path As String) As StreamReader
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by InvalidPathChars.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, (for example, it is on an unmapped drive). \n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file. \n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.\n-or-\nThis operation is not supported on the current platform.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.\n-or-\nThe caller does not have the required permission.\n-or-\nmode is <xref href=\"System.IO.FileMode.Create\" data-throw-if-not-resolved=\"false\"></xref> and the specified file is a hidden file.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in path was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: ReadAllBytes(String)
  nameWithType: IFileReaderUtilities.ReadAllBytes(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: ReadAllBytes
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 302
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens a binary file, reads the contents of the file into a byte array, and then closes the file.\n"
  example: []
  syntax:
    content: IImmutableList<byte> ReadAllBytes(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to open for reading.\n"
    return:
      type: System.Collections.Immutable.IImmutableList{System.Byte}
      description: "\nA list of byte containing the contents of the file.\n"
    content.vb: Function ReadAllBytes(path As String) As IImmutableList(Of Byte)
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified path is invalid (for example, it is on an unmapped drive).\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThis operation is not supported on the current platform.-or- <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>\nspecified a directory.-or- The caller does not have the required permission.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines(System.String,System.Text.Encoding)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines(System.String,System.Text.Encoding)
  id: ReadAllLines(System.String,System.Text.Encoding)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: ReadAllLines(String, Encoding)
  nameWithType: IFileReaderUtilities.ReadAllLines(String, Encoding)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines(System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: ReadAllLines
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 348
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens a file, reads all lines of the file with the specified encoding, and then closes the file.\n"
  example: []
  syntax:
    content: IImmutableList<string> ReadAllLines(string path, Encoding encoding)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to open for reading.\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\nThe encoding applied to the contents of the file.\n"
    return:
      type: System.Collections.Immutable.IImmutableList{System.String}
      description: "\nA list containing all lines of the file.\n"
    content.vb: Function ReadAllLines(path As String, encoding As Encoding) As IImmutableList(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified path is invalid (for example, it is on an unmapped drive).\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.-or- This operation is not\nsupported on the current platform.-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.-or- The caller does not have the\nrequired permission.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText(System.String,System.Text.Encoding)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: ReadAllText(String, Encoding)
  nameWithType: IFileReaderUtilities.ReadAllText(String, Encoding)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText(System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: ReadAllText
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 394
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens a file, reads all lines of the file with the specified encoding, and then closes the file.\n"
  example: []
  syntax:
    content: string ReadAllText(string path, Encoding encoding)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to open for reading.\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\nThe encoding applied to the contents of the file.\n"
    return:
      type: System.String
      description: "\nA string containing all lines of the file.\n"
    content.vb: Function ReadAllText(path As String, encoding As Encoding) As String
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified path is invalid (for example, it is on an unmapped drive).\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.-or- This operation is not\nsupported on the current platform.-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.-or- The caller does not have the\nrequired permission.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines(System.String,System.Text.Encoding)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines(System.String,System.Text.Encoding)
  id: ReadLines(System.String,System.Text.Encoding)
  parent: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities
  langs:
  - csharp
  - vb
  name: ReadLines(String, Encoding)
  nameWithType: IFileReaderUtilities.ReadLines(String, Encoding)
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines(System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: ReadLines
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IFileReaderUtilities.cs
    startLine: 442
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nOpens a text file with the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">encoding</code>, reads all lines of the file into a string array, and then closes the file.\n"
  example: []
  syntax:
    content: IEnumerable<string> ReadLines(string path, Encoding encoding)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file to open for reading.\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\nThe encoding applied to the contents of the file.\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\nA non-null collection of containing all lines of the file specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    content.vb: Function ReadLines(path As String, encoding As Encoding) As IEnumerable(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">encoding</code> is null.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified path is invalid (for example, it is on an unmapped drive).\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred while opening the file.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a file that is read-only.-or- This operation is not\nsupported on the current platform.-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> specified a directory.-or- The caller does not have the\nrequired permission.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe file specified in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> was not found.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is in an invalid format.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
references:
- uid: Landorphan.Abstractions.IO.Interfaces
  commentId: N:Landorphan.Abstractions.IO.Interfaces
  name: Landorphan.Abstractions.IO.Interfaces
  nameWithType: Landorphan.Abstractions.IO.Interfaces
  fullName: Landorphan.Abstractions.IO.Interfaces
- uid: System.IO.FileStream
  commentId: T:System.IO.FileStream
  parent: System.IO
  isExternal: true
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.FileMode
  commentId: T:System.IO.FileMode
  parent: System.IO
  isExternal: true
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  commentId: F:System.IO.FileMode.Create
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.IO.PathTooLongException
  commentId: T:System.IO.PathTooLongException
  isExternal: true
- uid: System.IO.DirectoryNotFoundException
  commentId: T:System.IO.DirectoryNotFoundException
  isExternal: true
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: System.UnauthorizedAccessException
  commentId: T:System.UnauthorizedAccessException
  isExternal: true
- uid: Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
  commentId: T:Landorphan.Common.Exceptions.ExtendedInvalidEnumArgumentException
  isExternal: true
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open
  name: Open
  nameWithType: IFileReaderUtilities.Open
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.Open
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.FileAccess
  commentId: T:System.IO.FileAccess
  parent: System.IO
  isExternal: true
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileShare
  commentId: T:System.IO.FileShare
  parent: System.IO
  isExternal: true
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead
  name: OpenRead
  nameWithType: IFileReaderUtilities.OpenRead
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenRead
- uid: System.IO.StreamReader
  commentId: T:System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText
  name: OpenText
  nameWithType: IFileReaderUtilities.OpenText
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.OpenText
- uid: Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters
  isExternal: true
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes
  name: ReadAllBytes
  nameWithType: IFileReaderUtilities.ReadAllBytes
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllBytes
- uid: System.Collections.Immutable.IImmutableList{System.Byte}
  commentId: T:System.Collections.Immutable.IImmutableList{System.Byte}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.IImmutableList`1
  name: IImmutableList<Byte>
  nameWithType: IImmutableList<Byte>
  fullName: System.Collections.Immutable.IImmutableList<System.Byte>
  nameWithType.vb: IImmutableList(Of Byte)
  fullName.vb: System.Collections.Immutable.IImmutableList(Of System.Byte)
  name.vb: IImmutableList(Of Byte)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    nameWithType: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    nameWithType: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable.IImmutableList`1
  commentId: T:System.Collections.Immutable.IImmutableList`1
  isExternal: true
  name: IImmutableList<T>
  nameWithType: IImmutableList<T>
  fullName: System.Collections.Immutable.IImmutableList<T>
  nameWithType.vb: IImmutableList(Of T)
  fullName.vb: System.Collections.Immutable.IImmutableList(Of T)
  name.vb: IImmutableList(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    nameWithType: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    nameWithType: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines
  name: ReadAllLines
  nameWithType: IFileReaderUtilities.ReadAllLines
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllLines
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Collections.Immutable.IImmutableList{System.String}
  commentId: T:System.Collections.Immutable.IImmutableList{System.String}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.IImmutableList`1
  name: IImmutableList<String>
  nameWithType: IImmutableList<String>
  fullName: System.Collections.Immutable.IImmutableList<System.String>
  nameWithType.vb: IImmutableList(Of String)
  fullName.vb: System.Collections.Immutable.IImmutableList(Of System.String)
  name.vb: IImmutableList(Of String)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    nameWithType: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    nameWithType: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText
  name: ReadAllText
  nameWithType: IFileReaderUtilities.ReadAllText
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadAllText
- uid: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines
  name: ReadLines
  nameWithType: IFileReaderUtilities.ReadLines
  fullName: Landorphan.Abstractions.IO.Interfaces.IFileReaderUtilities.ReadLines
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
