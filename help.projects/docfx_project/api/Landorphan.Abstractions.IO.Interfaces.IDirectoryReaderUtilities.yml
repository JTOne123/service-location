### YamlMime:ManagedReference
items:
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  commentId: T:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  id: IDirectoryReaderUtilities
  parent: Landorphan.Abstractions.IO.Interfaces
  children:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String,System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String,System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String,System.String,System.IO.SearchOption)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String,System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String,System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String,System.String,System.IO.SearchOption)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String,System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String,System.String,System.IO.SearchOption)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String,System.String)
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  langs:
  - csharp
  - vb
  name: IDirectoryReaderUtilities
  nameWithType: IDirectoryReaderUtilities
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  type: Interface
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: IDirectoryReaderUtilities
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 10
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nRepresents methods for reading from directories.\n"
  example: []
  syntax:
    content: public interface IDirectoryReaderUtilities
    content.vb: Public Interface IDirectoryReaderUtilities
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String)
  id: EnumerateDirectories(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateDirectories(String)
  nameWithType: IDirectoryReaderUtilities.EnumerateDirectories(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateDirectories
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 44
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of directory names in a specified path.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateDirectories(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of the full names (including paths) for the directories in the directory specified by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    content.vb: Function EnumerateDirectories(path As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String,System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String,System.String)
  id: EnumerateDirectories(System.String,System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateDirectories(String, String)
  nameWithType: IDirectoryReaderUtilities.EnumerateDirectories(String, String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateDirectories
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 85
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of directory names that match a search pattern in a specified path.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateDirectories(string path, string searchPattern)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of directories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of the full names (including paths) for the directories in the directory specified by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> and that match the specified search pattern.\n"
    content.vb: Function EnumerateDirectories(path As String, searchPattern As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n- or -\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> does not contain a valid pattern.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n -or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)
  id: EnumerateDirectories(System.String,System.String,System.IO.SearchOption)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateDirectories(String, String, SearchOption)
  nameWithType: IDirectoryReaderUtilities.EnumerateDirectories(String, String, SearchOption)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateDirectories
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 134
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of directory names that match a search pattern in a specified path, and optionally searches\nsubdirectories.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateDirectories(string path, string searchPattern, SearchOption searchOption)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of directories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    - id: searchOption
      type: System.IO.SearchOption
      description: "\nOne of the enumeration values  that specifies whether the search operation should include only the current\ndirectory or should include all subdirectories.The default value is\n<xref href=\"System.IO.SearchOption.TopDirectoryOnly\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of the full names (including paths) for the directories in the directory specified by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> and that match the specified search pattern and option.\n"
    content.vb: Function EnumerateDirectories(path As String, searchPattern As String, searchOption As SearchOption) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid characters as defined by\n<xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n- or -\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> does not contain a valid pattern.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.-or-<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> is null.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchOption</code> is not a valid <xref href=\"System.IO.SearchOption\" data-throw-if-not-resolved=\"false\"></xref>\nvalue.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String)
  id: EnumerateFiles(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateFiles(String)
  nameWithType: IDirectoryReaderUtilities.EnumerateFiles(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateFiles
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 169
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of file names in a specified path.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateFiles(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of the full names (including paths) for the files in the directory specified by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    content.vb: Function EnumerateFiles(path As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by\n<xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String,System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String,System.String)
  id: EnumerateFiles(System.String,System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateFiles(String, String)
  nameWithType: IDirectoryReaderUtilities.EnumerateFiles(String, String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateFiles
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 209
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of file names that match a search pattern in a specified path.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateFiles(string path, string searchPattern)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of directories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of the full names (including paths) for the files in the directory specified by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> and that match the specified search pattern.\n"
    content.vb: Function EnumerateFiles(path As String, searchPattern As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by\n<xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n- or -\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> does not contain a valid pattern.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.-or-<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String,System.String,System.IO.SearchOption)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String,System.String,System.IO.SearchOption)
  id: EnumerateFiles(System.String,System.String,System.IO.SearchOption)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateFiles(String, String, SearchOption)
  nameWithType: IDirectoryReaderUtilities.EnumerateFiles(String, String, SearchOption)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateFiles
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 258
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of file names that match a search pattern in a specified path, and optionally searches\nsubdirectories.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateFiles(string path, string searchPattern, SearchOption searchOption)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of directories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    - id: searchOption
      type: System.IO.SearchOption
      description: "\nOne of the enumeration values that specifies whether the search operation should include only the current\ndirectory or should include all subdirectories.The default value is\n<xref href=\"System.IO.SearchOption.TopDirectoryOnly\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of the full names (including paths) for the files in the directory specified by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> and that match the specified search pattern and option.\n"
    content.vb: Function EnumerateFiles(path As String, searchPattern As String, searchOption As SearchOption) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by\n<xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n- or -<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> does not contain a valid pattern.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.-or-<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> is null.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchOption</code> is not a valid <xref href=\"System.IO.SearchOption\" data-throw-if-not-resolved=\"false\"></xref>\nvalue.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String)
  id: EnumerateFileSystemEntries(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateFileSystemEntries(String)
  nameWithType: IDirectoryReaderUtilities.EnumerateFileSystemEntries(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateFileSystemEntries
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 292
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of file-system entries in a specified path.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateFileSystemEntries(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of file-system entries in the directory specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    content.vb: Function EnumerateFileSystemEntries(path As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by\n<xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String,System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String,System.String)
  id: EnumerateFileSystemEntries(System.String,System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateFileSystemEntries(String, String)
  nameWithType: IDirectoryReaderUtilities.EnumerateFileSystemEntries(String, String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateFileSystemEntries
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 332
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of file-system entries that match a search pattern in a specified path.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateFileSystemEntries(string path, string searchPattern)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of directories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of file-system entries in the directory specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> and that match the specified\nsearch pattern.\n"
    content.vb: Function EnumerateFileSystemEntries(path As String, searchPattern As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by\n<xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n- or -\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> does not contain a valid pattern.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.-or-<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  id: EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: EnumerateFileSystemEntries(String, String, SearchOption)
  nameWithType: IDirectoryReaderUtilities.EnumerateFileSystemEntries(String, String, SearchOption)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: EnumerateFileSystemEntries
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 381
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns an enumerable collection of file names and directory names that match a search pattern in a specified path, and optionally\nsearches subdirectories.\n"
  example: []
  syntax:
    content: IImmutableSet<string> EnumerateFileSystemEntries(string path, string searchPattern, SearchOption searchOption)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory to search.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of directories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    - id: searchOption
      type: System.IO.SearchOption
      description: "\nOne of the enumeration values  that specifies whether the search operation should include only the current\ndirectory or should include all subdirectories.The default value is\n<xref href=\"System.IO.SearchOption.TopDirectoryOnly\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nAn enumerable collection of file-system entries in the directory specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> and that match the specified\nsearch pattern and option.\n"
    content.vb: Function EnumerateFileSystemEntries(path As String, searchPattern As String, searchOption As SearchOption) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by\n<xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n- or -<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> does not contain a valid pattern.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.-or-<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchPattern</code> is null.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">searchOption</code> is not a valid <xref href=\"System.IO.SearchOption\" data-throw-if-not-resolved=\"false\"></xref>\nvalue.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetDirectories(String)
  nameWithType: IDirectoryReaderUtilities.GetDirectories(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetDirectories
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 414
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of subdirectories (including their paths) in the specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetDirectories(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetDirectories(path As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String,System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String,System.String)
  id: GetDirectories(System.String,System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetDirectories(String, String)
  nameWithType: IDirectoryReaderUtilities.GetDirectories(String, String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetDirectories
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 451
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of subdirectories (including their paths) in the specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetDirectories(string path, string searchPattern)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of subdirectories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.  This parameter can contain a combination of valid literal and wildcard characters, but it\ndoes not support regular expressions.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetDirectories(path As String, searchPattern As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String,System.String,System.IO.SearchOption)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String,System.String,System.IO.SearchOption)
  id: GetDirectories(System.String,System.String,System.IO.SearchOption)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetDirectories(String, String, SearchOption)
  nameWithType: IDirectoryReaderUtilities.GetDirectories(String, String, SearchOption)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetDirectories
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 491
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of subdirectories (including their paths) in the specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetDirectories(string path, string searchPattern, SearchOption searchOption)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of subdirectories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.  This parameter can contain a combination of valid literal and wildcard characters, but it\ndoes not support regular expressions.\n"
    - id: searchOption
      type: System.IO.SearchOption
      description: "\nOne of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetDirectories(path As String, searchPattern As String, searchOption As SearchOption) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetFiles(String)
  nameWithType: IDirectoryReaderUtilities.GetFiles(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetFiles
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 524
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of files (including their paths) in the specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetFiles(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetFiles(path As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String,System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String,System.String)
  id: GetFiles(System.String,System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetFiles(String, String)
  nameWithType: IDirectoryReaderUtilities.GetFiles(String, String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetFiles
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 561
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of files (including their paths) in the specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetFiles(string path, string searchPattern)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of subdirectories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.  This parameter can contain a combination of valid literal and wildcard characters, but it\ndoes not support regular expressions.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetFiles(path As String, searchPattern As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String,System.String,System.IO.SearchOption)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String,System.String,System.IO.SearchOption)
  id: GetFiles(System.String,System.String,System.IO.SearchOption)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetFiles(String, String, SearchOption)
  nameWithType: IDirectoryReaderUtilities.GetFiles(String, String, SearchOption)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetFiles
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 601
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of files (including their paths) in the specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetFiles(string path, string searchPattern, SearchOption searchOption)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of subdirectories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.  This parameter can contain a combination of valid literal and wildcard characters, but it\ndoes not support regular expressions.\n"
    - id: searchOption
      type: System.IO.SearchOption
      description: "\nOne of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetFiles(path As String, searchPattern As String, searchOption As SearchOption) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String)
  id: GetFileSystemEntries(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetFileSystemEntries(String)
  nameWithType: IDirectoryReaderUtilities.GetFileSystemEntries(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetFileSystemEntries
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 634
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of all files and subdirectories in a specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetFileSystemEntries(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetFileSystemEntries(path As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String,System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String,System.String)
  id: GetFileSystemEntries(System.String,System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetFileSystemEntries(String, String)
  nameWithType: IDirectoryReaderUtilities.GetFileSystemEntries(String, String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetFileSystemEntries
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 671
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of all files and subdirectories in a specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetFileSystemEntries(string path, string searchPattern)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of subdirectories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.  This parameter can contain a combination of valid literal and wildcard characters, but it\ndoes not support regular expressions.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetFileSystemEntries(path As String, searchPattern As String) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  id: GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities
  langs:
  - csharp
  - vb
  name: GetFileSystemEntries(String, String, SearchOption)
  nameWithType: IDirectoryReaderUtilities.GetFileSystemEntries(String, String, SearchOption)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetFileSystemEntries
    path: ../../source/Landorphan.Abstractions/IO/Interfaces/IDirectoryReaderUtilities.cs
    startLine: 711
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO.Interfaces
  summary: "\nReturns the names of all files and subdirectories in a specified directory.\n"
  example: []
  syntax:
    content: IImmutableSet<string> GetFileSystemEntries(string path, string searchPattern, SearchOption searchOption)
    parameters:
    - id: path
      type: System.String
      description: "\nThe relative or absolute path to the directory to search. This string is not case-sensitive.\n"
    - id: searchPattern
      type: System.String
      description: "\nThe search string to match against the names of subdirectories in <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.  This parameter can contain a combination of valid literal and wildcard characters, but it\ndoes not support regular expressions.\n"
    - id: searchOption
      type: System.IO.SearchOption
      description: "\nOne of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory.\n"
    return:
      type: System.Collections.Immutable.IImmutableSet{System.String}
      description: "\nA non-null collection of unique subdirectories in the specified path, or an empty set if no directories are found.\n"
    content.vb: Function GetFileSystemEntries(path As String, searchPattern As String, searchOption As SearchOption) As IImmutableSet(Of String)
  overload: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path </code>is a zero-length string, contains only white space, or contains invalid\ncharacters as defined by <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is invalid, such as referring to an unmapped drive.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file name.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or combined exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
references:
- uid: Landorphan.Abstractions.IO.Interfaces
  commentId: N:Landorphan.Abstractions.IO.Interfaces
  name: Landorphan.Abstractions.IO.Interfaces
  nameWithType: Landorphan.Abstractions.IO.Interfaces
  fullName: Landorphan.Abstractions.IO.Interfaces
- uid: System.IO.Path.GetInvalidPathChars
  commentId: M:System.IO.Path.GetInvalidPathChars
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.IO.DirectoryNotFoundException
  commentId: T:System.IO.DirectoryNotFoundException
  isExternal: true
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: System.IO.PathTooLongException
  commentId: T:System.IO.PathTooLongException
  isExternal: true
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: System.UnauthorizedAccessException
  commentId: T:System.UnauthorizedAccessException
  isExternal: true
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories
  name: EnumerateDirectories
  nameWithType: IDirectoryReaderUtilities.EnumerateDirectories
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateDirectories
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Immutable.IImmutableSet{System.String}
  commentId: T:System.Collections.Immutable.IImmutableSet{System.String}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.IImmutableSet`1
  name: IImmutableSet<String>
  nameWithType: IImmutableSet<String>
  fullName: System.Collections.Immutable.IImmutableSet<System.String>
  nameWithType.vb: IImmutableSet(Of String)
  fullName.vb: System.Collections.Immutable.IImmutableSet(Of System.String)
  name.vb: IImmutableSet(Of String)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Immutable.IImmutableSet`1
  commentId: T:System.Collections.Immutable.IImmutableSet`1
  isExternal: true
  name: IImmutableSet<T>
  nameWithType: IImmutableSet<T>
  fullName: System.Collections.Immutable.IImmutableSet<T>
  nameWithType.vb: IImmutableSet(Of T)
  fullName.vb: System.Collections.Immutable.IImmutableSet(Of T)
  name.vb: IImmutableSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
- uid: System.IO.SearchOption
  commentId: T:System.IO.SearchOption
  parent: System.IO
  isExternal: true
  name: SearchOption
  nameWithType: SearchOption
  fullName: System.IO.SearchOption
- uid: System.IO.SearchOption.TopDirectoryOnly
  commentId: F:System.IO.SearchOption.TopDirectoryOnly
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles
  name: EnumerateFiles
  nameWithType: IDirectoryReaderUtilities.EnumerateFiles
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFiles
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries
  name: EnumerateFileSystemEntries
  nameWithType: IDirectoryReaderUtilities.EnumerateFileSystemEntries
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.EnumerateFileSystemEntries
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories
  name: GetDirectories
  nameWithType: IDirectoryReaderUtilities.GetDirectories
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetDirectories
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles
  name: GetFiles
  nameWithType: IDirectoryReaderUtilities.GetFiles
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFiles
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries*
  commentId: Overload:Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries
  name: GetFileSystemEntries
  nameWithType: IDirectoryReaderUtilities.GetFileSystemEntries
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryReaderUtilities.GetFileSystemEntries
