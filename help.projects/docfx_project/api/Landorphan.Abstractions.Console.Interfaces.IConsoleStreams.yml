### YamlMime:ManagedReference
items:
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  id: IConsoleStreams
  parent: Landorphan.Abstractions.Console.Interfaces
  children:
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  - Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  langs:
  - csharp
  - vb
  name: IConsoleStreams
  nameWithType: IConsoleStreams
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  type: Interface
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IConsoleStreams
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 11
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nInterface for console streams.\n"
  example: []
  syntax:
    content: public interface IConsoleStreams
    content.vb: Public Interface IConsoleStreams
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  id: Error
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: IConsoleStreams.Error
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Error
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 23
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets the standard error output stream.\n"
  remarks: "\nThis standard error stream is set to the console by default.  It can be set to another stream with the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method. After\nthe standard error stream is redirected, it can be reacquired by calling the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: TextWriter Error { get; }
    parameters: []
    return:
      type: System.IO.TextWriter
      description: "\nA <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that represents the standard error output stream.\n"
    content.vb: ReadOnly Property Error As TextWriter
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  id: Input
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: IConsoleStreams.Input
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Input
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 39
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets the standard input stream.\n"
  remarks: "\nThis property is set to the standard input stream by default.  This property can be set to another stream with the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod.  After the standard input stream is redirected, it can be reacquired by calling the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput\" data-throw-if-not-resolved=\"false\"></xref> method.\nRead operations on the standard input stream execute synchronously.  That is, they block until the specified read operation has completed.\nThis is true even if an asynchronous method, such as <xref href=\"System.IO.TextReader.ReadLineAsync\" data-throw-if-not-resolved=\"false\"></xref>, is called on the <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>\nObject returned by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: TextReader Input { get; }
    parameters: []
    return:
      type: System.IO.TextReader
      description: "\nA <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that represents the standard input stream.\n"
    content.vb: ReadOnly Property Input As TextReader
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  id: InputEncoding
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: InputEncoding
  nameWithType: IConsoleStreams.InputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: InputEncoding
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 65
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets or sets the encoding the console uses to read input.\n"
  remarks: "\nThe console uses the input encoding to translate keyboard input into a corresponding character.  The input encoding incorporates a code\npage that maps 256 keyboard character codes to individual characters.  Different code pages include different special characters,\ntypically customized for a language or a group of languages.\nStarting with the .NET Framework 4, a property get operation may return a cached value instead of the console&apos;s current input encoding.\nThis can occur if the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property is modified by some means other than an assignment to the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property, such as calling the Windows <strong> SetConsoleCP </strong> function or using the <strong> chcp </strong> command from a\nPowerShell script.\n"
  example: []
  syntax:
    content: Encoding InputEncoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\nThe encoding used to read console input.\n"
    content.vb: Property InputEncoding As Encoding
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe property value in a set operation is <code> null </code>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nYour application does not have permission to perform this operation.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  modifiers.csharp:
  - get
  - set
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  id: IsErrorRedirected
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: IsErrorRedirected
  nameWithType: IConsoleStreams.IsErrorRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IsErrorRedirected
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 73
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets a value that indicates whether the error output stream has been redirected from the standard error stream.\n"
  example: []
  syntax:
    content: bool IsErrorRedirected { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if error output is redirected; otherwise, <code> false </code>.\n"
    content.vb: ReadOnly Property IsErrorRedirected As Boolean
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  id: IsInputRedirected
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: IsInputRedirected
  nameWithType: IConsoleStreams.IsInputRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IsInputRedirected
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 81
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets a value that indicates whether input has been redirected from the standard input stream.\n"
  example: []
  syntax:
    content: bool IsInputRedirected { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if input is redirected; otherwise, <code> false </code>.\n"
    content.vb: ReadOnly Property IsInputRedirected As Boolean
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  id: IsOutputRedirected
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: IsOutputRedirected
  nameWithType: IConsoleStreams.IsOutputRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IsOutputRedirected
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 89
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets a value that indicates whether output has been redirected from the standard output stream.\n"
  example: []
  syntax:
    content: bool IsOutputRedirected { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if output is redirected; otherwise, <code> false </code>.\n"
    content.vb: ReadOnly Property IsOutputRedirected As Boolean
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  id: Output
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: IConsoleStreams.Output
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Output
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 103
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets the standard output stream.\n"
  remarks: "\nThis property is set to the standard output stream by default.  This property can be set to another stream with the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod.\nNote that calls to <strong> Output.WriteLine </strong> methods are equivalent to calls to the corresponding\n<xref href=\"System.IO.TextWriter.WriteLine\" data-throw-if-not-resolved=\"false\"></xref> methods.\n"
  example: []
  syntax:
    content: TextWriter Output { get; }
    parameters: []
    return:
      type: System.IO.TextWriter
      description: "\nA <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that represents the standard output stream.\n"
    content.vb: ReadOnly Property Output As TextWriter
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  id: OutputEncoding
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: OutputEncoding
  nameWithType: IConsoleStreams.OutputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OutputEncoding
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 137
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets or sets the encoding the console uses to write output.\n"
  remarks: "\nThe console uses the output encoding to translate characters written by an application into corresponding console display characters.  The\ndefault code page that the console uses is determined by the system locale.\nStarting with the .NET Framework 4, a property get operation may return a cached value instead of the console&apos;s current output encoding.\nThis can occur if the value of the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property is modified by some means other than an assignment to the\n<xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding\" data-throw-if-not-resolved=\"false\"></xref> property, such as calling the Windows <strong> SetConsoleOutputCP </strong> function.\n<strong> Notes to Callers </strong>\nOf the Unicode encodings, <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsole\" data-throw-if-not-resolved=\"false\"></xref> supports UTF-8 encoding with the <xref href=\"System.Text.UTF8Encoding\" data-throw-if-not-resolved=\"false\"></xref> class and,\nstarting with the .NET Framework 4.5, it supports UTF-16 encoding with the <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> class.  UTF-32 encoding with the\n<xref href=\"System.Text.UTF32Encoding\" data-throw-if-not-resolved=\"false\"></xref> class is not supported.  Attempting to set the output encoding to UTF-32 throws an <xref href=\"System.IO.IOException\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that successfully displaying Unicode characters to the console requires the following:\n• The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.\n• A font used by the console must define the particular glyph or glyphs to be displayed. The console can take advantage of font linking to\ndisplay glyphs from linked fonts if the base font does not contain a definition for that glyph.\nFor more information about support for Unicode encoding by the console, see the &quot;Unicode Support for the Console&quot; section in the\n<xref href=\"System.Console\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: Encoding OutputEncoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\nThe encoding used to write console output.\n"
    content.vb: Property OutputEncoding As Encoding
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe property value in a set operation is <code> null </code>.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nYour application does not have permission to perform this operation.\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  modifiers.csharp:
  - get
  - set
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  id: TreatControlCAsInput
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: TreatControlCAsInput
  nameWithType: IConsoleStreams.TreatControlCAsInput
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: TreatControlCAsInput
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 146
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nGets or sets a value indicating whether the combination of the <xref href=\"System.ConsoleModifiers.Control\" data-throw-if-not-resolved=\"false\"></xref> modifier key and C console key\n(Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.\n"
  example: []
  syntax:
    content: bool TreatControlCAsInput { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code> true </code> if Ctrl+C is treated as ordinary input; otherwise, <code> false </code>.\n"
    content.vb: Property TreatControlCAsInput As Boolean
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput*
  modifiers.csharp:
  - get
  - set
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  id: OpenStandardError
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: OpenStandardError()
  nameWithType: IConsoleStreams.OpenStandardError()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardError
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 157
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nAcquires the standard error stream.\n"
  remarks: "\nThis method can be used to reacquire the standard error stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: Stream OpenStandardError()
    return:
      type: System.IO.Stream
      description: "\nThe standard error stream.\n"
    content.vb: Function OpenStandardError As Stream
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  id: OpenStandardError(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: OpenStandardError(Int32)
  nameWithType: IConsoleStreams.OpenStandardError(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardError
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 171
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nAcquires the standard error stream.\n"
  remarks: "\nThis method can be used to reacquire the standard error stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: Stream OpenStandardError(int bufferSize)
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "\nThe internal stream buffer size.\n"
    return:
      type: System.IO.Stream
      description: "\nThe standard error stream.\n"
    content.vb: Function OpenStandardError(bufferSize As Integer) As Stream
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  id: OpenStandardInput
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: OpenStandardInput()
  nameWithType: IConsoleStreams.OpenStandardInput()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardInput
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 182
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nAcquires the standard input stream.\n"
  remarks: "\nThis method can be used to reacquire the standard error stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: Stream OpenStandardInput()
    return:
      type: System.IO.Stream
      description: "\nThe standard input stream.\n"
    content.vb: Function OpenStandardInput As Stream
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  id: OpenStandardInput(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: OpenStandardInput(Int32)
  nameWithType: IConsoleStreams.OpenStandardInput(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardInput
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 196
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nAcquires the standard input stream.\n"
  remarks: "\nThis method can be used to reacquire the standard input stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: Stream OpenStandardInput(int bufferSize)
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "\nThe internal stream buffer size.\n"
    return:
      type: System.IO.Stream
      description: "\nThe standard input stream.\n"
    content.vb: Function OpenStandardInput(bufferSize As Integer) As Stream
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  id: OpenStandardOutput
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: OpenStandardOutput()
  nameWithType: IConsoleStreams.OpenStandardOutput()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardOutput
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 207
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nAcquires the standard output stream.\n"
  remarks: "\nThis method can be used to reacquire the standard output stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: Stream OpenStandardOutput()
    return:
      type: System.IO.Stream
      description: "\nThe standard output stream.\n"
    content.vb: Function OpenStandardOutput As Stream
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  id: OpenStandardOutput(System.Int32)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: OpenStandardOutput(Int32)
  nameWithType: IConsoleStreams.OpenStandardOutput(Int32)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput(System.Int32)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: OpenStandardOutput
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 221
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nAcquires the standard output stream.\n"
  remarks: "\nThis method can be used to reacquire the standard output stream after it has been changed by the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: Stream OpenStandardOutput(int bufferSize)
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "\nThe internal stream buffer size.\n"
    return:
      type: System.IO.Stream
      description: "\nThe standard output stream.\n"
    content.vb: Function OpenStandardOutput(bufferSize As Integer) As Stream
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  id: SetError(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: SetError(TextWriter)
  nameWithType: IConsoleStreams.SetError(TextWriter)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetError
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 229
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nSets the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error\" data-throw-if-not-resolved=\"false\"></xref> property to the specified <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> Object.\n"
  example: []
  syntax:
    content: void SetError(TextWriter newError)
    parameters:
    - id: newError
      type: System.IO.TextWriter
      description: "\nA stream that is the new standard error output.\n"
    content.vb: Sub SetError(newError As TextWriter)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  id: SetInput(System.IO.TextReader)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: SetInput(TextReader)
  nameWithType: IConsoleStreams.SetInput(TextReader)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetInput
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 237
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nSets the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input\" data-throw-if-not-resolved=\"false\"></xref> property to the specified <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> Object.\n"
  example: []
  syntax:
    content: void SetInput(TextReader newInput)
    parameters:
    - id: newInput
      type: System.IO.TextReader
      description: "\nA stream that is the new standard input.\n"
    content.vb: Sub SetInput(newInput As TextReader)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput*
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  id: SetOutput(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  langs:
  - csharp
  - vb
  name: SetOutput(TextWriter)
  nameWithType: IConsoleStreams.SetOutput(TextWriter)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: SetOutput
    path: ../../source/Landorphan.Abstractions/Console/Interfaces/IConsoleStreams.cs
    startLine: 245
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.Console.Interfaces
  summary: "\nSets the <xref href=\"Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output\" data-throw-if-not-resolved=\"false\"></xref>  property to the specified <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> Object.\n"
  example: []
  syntax:
    content: void SetOutput(TextWriter newOutput)
    parameters:
    - id: newOutput
      type: System.IO.TextWriter
      description: "\nThe new out.\n"
    content.vb: Sub SetOutput(newOutput As TextWriter)
  overload: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput*
references:
- uid: Landorphan.Abstractions.Console.Interfaces
  commentId: N:Landorphan.Abstractions.Console.Interfaces
  name: Landorphan.Abstractions.Console.Interfaces
  nameWithType: Landorphan.Abstractions.Console.Interfaces
  fullName: Landorphan.Abstractions.Console.Interfaces
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: SetError(TextWriter)
  nameWithType: IConsoleStreams.SetError(TextWriter)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
    name: SetError
    nameWithType: IConsoleStreams.SetError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError(System.IO.TextWriter)
    name: SetError
    nameWithType: IConsoleStreams.SetError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: OpenStandardError()
  nameWithType: IConsoleStreams.OpenStandardError()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
    name: OpenStandardError
    nameWithType: IConsoleStreams.OpenStandardError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
    name: OpenStandardError
    nameWithType: IConsoleStreams.OpenStandardError
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  name: Error
  nameWithType: IConsoleStreams.Error
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsoleStreams
  nameWithType: IConsoleStreams
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: SetInput(TextReader)
  nameWithType: IConsoleStreams.SetInput(TextReader)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
    name: SetInput
    nameWithType: IConsoleStreams.SetInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput(System.IO.TextReader)
    name: SetInput
    nameWithType: IConsoleStreams.SetInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: OpenStandardInput()
  nameWithType: IConsoleStreams.OpenStandardInput()
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput()
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
    name: OpenStandardInput
    nameWithType: IConsoleStreams.OpenStandardInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
    name: OpenStandardInput
    nameWithType: IConsoleStreams.OpenStandardInput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadLineAsync
  commentId: M:System.IO.TextReader.ReadLineAsync
  isExternal: true
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: Input
  nameWithType: IConsoleStreams.Input
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
  name: Input
  nameWithType: IConsoleStreams.Input
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Input
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: InputEncoding
  nameWithType: IConsoleStreams.InputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
  name: InputEncoding
  nameWithType: IConsoleStreams.InputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.InputEncoding
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
  name: IsErrorRedirected
  nameWithType: IConsoleStreams.IsErrorRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsErrorRedirected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
  name: IsInputRedirected
  nameWithType: IConsoleStreams.IsInputRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsInputRedirected
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
  name: IsOutputRedirected
  nameWithType: IConsoleStreams.IsOutputRedirected
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.IsOutputRedirected
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  commentId: M:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  isExternal: true
  name: SetOutput(TextWriter)
  nameWithType: IConsoleStreams.SetOutput(TextWriter)
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
  spec.csharp:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
    name: SetOutput
    nameWithType: IConsoleStreams.SetOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput(System.IO.TextWriter)
    name: SetOutput
    nameWithType: IConsoleStreams.SetOutput
    fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextWriter.WriteLine
  commentId: M:System.IO.TextWriter.WriteLine
  isExternal: true
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  name: Output
  nameWithType: IConsoleStreams.Output
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: OutputEncoding
  nameWithType: IConsoleStreams.OutputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
- uid: Landorphan.Abstractions.Console.Interfaces.IConsole
  commentId: T:Landorphan.Abstractions.Console.Interfaces.IConsole
  parent: Landorphan.Abstractions.Console.Interfaces
  name: IConsole
  nameWithType: IConsole
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsole
- uid: System.Text.UTF8Encoding
  commentId: T:System.Text.UTF8Encoding
  isExternal: true
- uid: System.Text.UnicodeEncoding
  commentId: T:System.Text.UnicodeEncoding
  isExternal: true
- uid: System.Text.UTF32Encoding
  commentId: T:System.Text.UTF32Encoding
  isExternal: true
- uid: System.Console
  commentId: T:System.Console
  isExternal: true
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
  name: OutputEncoding
  nameWithType: IConsoleStreams.OutputEncoding
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OutputEncoding
- uid: System.ConsoleModifiers.Control
  commentId: F:System.ConsoleModifiers.Control
  isExternal: true
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
  name: TreatControlCAsInput
  nameWithType: IConsoleStreams.TreatControlCAsInput
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.TreatControlCAsInput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
  name: OpenStandardError
  nameWithType: IConsoleStreams.OpenStandardError
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardError
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
  name: OpenStandardInput
  nameWithType: IConsoleStreams.OpenStandardInput
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardInput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
  name: OpenStandardOutput
  nameWithType: IConsoleStreams.OpenStandardOutput
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.OpenStandardOutput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: Error
  nameWithType: IConsoleStreams.Error
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Error
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError
  name: SetError
  nameWithType: IConsoleStreams.SetError
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetError
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput
  name: SetInput
  nameWithType: IConsoleStreams.SetInput
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetInput
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  commentId: P:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
  parent: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams
  name: Output
  nameWithType: IConsoleStreams.Output
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.Output
- uid: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput*
  commentId: Overload:Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput
  name: SetOutput
  nameWithType: IConsoleStreams.SetOutput
  fullName: Landorphan.Abstractions.Console.Interfaces.IConsoleStreams.SetOutput
