### YamlMime:ManagedReference
items:
- uid: Landorphan.TestUtilities.TestTypeExtensions
  commentId: T:Landorphan.TestUtilities.TestTypeExtensions
  id: TestTypeExtensions
  parent: Landorphan.TestUtilities
  children:
  - Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly(System.Type)
  - Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited(System.Type)
  - Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT(System.Type)
  - Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType(System.Type)
  langs:
  - csharp
  - vb
  name: TestTypeExtensions
  nameWithType: TestTypeExtensions
  fullName: Landorphan.TestUtilities.TestTypeExtensions
  type: Class
  source:
    remote:
      path: source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: TestTypeExtensions
    path: ../../source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
    startLine: 11
  assemblies:
  - Landorphan.TestUtilities.MSTest
  namespace: Landorphan.TestUtilities
  summary: "\nExtension methods for <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: public static class TestTypeExtensions
    content.vb: Public Module TestTypeExtensions
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly(System.Type)
  commentId: M:Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly(System.Type)
  id: GetPublicAndPrivateConstantsDeclaredOnly(System.Type)
  isExtensionMethod: true
  parent: Landorphan.TestUtilities.TestTypeExtensions
  langs:
  - csharp
  - vb
  name: GetPublicAndPrivateConstantsDeclaredOnly(Type)
  nameWithType: TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly(Type)
  fullName: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: GetPublicAndPrivateConstantsDeclaredOnly
    path: ../../source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
    startLine: 22
  assemblies:
  - Landorphan.TestUtilities.MSTest
  namespace: Landorphan.TestUtilities
  summary: "\nGets all constants declared in the given type.\n"
  example: []
  syntax:
    content: public static ImmutableHashSet<FieldInfo> GetPublicAndPrivateConstantsDeclaredOnly(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: "\nThe type to inspected.\n"
    return:
      type: System.Collections.Immutable.ImmutableHashSet{System.Reflection.FieldInfo}
      description: "\nA non-null set of <xref href=\"System.Reflection.FieldInfo\" data-throw-if-not-resolved=\"false\"></xref> representing the constants.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPublicAndPrivateConstantsDeclaredOnly(type As Type) As ImmutableHashSet(Of FieldInfo)
  overload: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited(System.Type)
  commentId: M:Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited(System.Type)
  id: GetPublicAndPrivateConstantsIncludingInherited(System.Type)
  isExtensionMethod: true
  parent: Landorphan.TestUtilities.TestTypeExtensions
  langs:
  - csharp
  - vb
  name: GetPublicAndPrivateConstantsIncludingInherited(Type)
  nameWithType: TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited(Type)
  fullName: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: GetPublicAndPrivateConstantsIncludingInherited
    path: ../../source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
    startLine: 51
  assemblies:
  - Landorphan.TestUtilities.MSTest
  namespace: Landorphan.TestUtilities
  summary: "\nGets all constants declared in the given type and its ancestors.\n"
  example: []
  syntax:
    content: public static ImmutableHashSet<FieldInfo> GetPublicAndPrivateConstantsIncludingInherited(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: "\nThe type to inspected.\n"
    return:
      type: System.Collections.Immutable.ImmutableHashSet{System.Reflection.FieldInfo}
      description: "\nA non-null set of <xref href=\"System.Reflection.FieldInfo\" data-throw-if-not-resolved=\"false\"></xref> representing the constants.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPublicAndPrivateConstantsIncludingInherited(type As Type) As ImmutableHashSet(Of FieldInfo)
  overload: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT(System.Type)
  commentId: M:Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT(System.Type)
  id: IsNullableOfT(System.Type)
  isExtensionMethod: true
  parent: Landorphan.TestUtilities.TestTypeExtensions
  langs:
  - csharp
  - vb
  name: IsNullableOfT(Type)
  nameWithType: TestTypeExtensions.IsNullableOfT(Type)
  fullName: Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsNullableOfT
    path: ../../source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
    startLine: 80
  assemblies:
  - Landorphan.TestUtilities.MSTest
  namespace: Landorphan.TestUtilities
  summary: "\nA Type extension method that queries if &apos;type&apos; is nullable of t.\n"
  example: []
  syntax:
    content: public static bool IsNullableOfT(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: "\nThe type to act on.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code>if nullable{T}; otherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsNullableOfT(type As Type) As Boolean
  overload: Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType(System.Type)
  commentId: M:Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType(System.Type)
  id: IsOrdinalType(System.Type)
  isExtensionMethod: true
  parent: Landorphan.TestUtilities.TestTypeExtensions
  langs:
  - csharp
  - vb
  name: IsOrdinalType(Type)
  nameWithType: TestTypeExtensions.IsOrdinalType(Type)
  fullName: Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsOrdinalType
    path: ../../source/Landorphan.TestUtilities.MSTest/Extensions/TestTypeExtensions.cs
    startLine: 95
  assemblies:
  - Landorphan.TestUtilities.MSTest
  namespace: Landorphan.TestUtilities
  summary: "\nA Type extension that determines if the given type is a member of the set of ordinal types.\n"
  example: []
  syntax:
    content: public static bool IsOrdinalType(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: "\nThe type to inspected.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the type is ordinal; otherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsOrdinalType(type As Type) As Boolean
  overload: Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Landorphan.TestUtilities
  commentId: N:Landorphan.TestUtilities
  name: Landorphan.TestUtilities
  nameWithType: Landorphan.TestUtilities
  fullName: Landorphan.TestUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.FieldInfo
  commentId: T:System.Reflection.FieldInfo
  isExternal: true
- uid: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly*
  commentId: Overload:Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly
  name: GetPublicAndPrivateConstantsDeclaredOnly
  nameWithType: TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly
  fullName: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsDeclaredOnly
- uid: System.Collections.Immutable.ImmutableHashSet{System.Reflection.FieldInfo}
  commentId: T:System.Collections.Immutable.ImmutableHashSet{System.Reflection.FieldInfo}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableHashSet`1
  name: ImmutableHashSet<FieldInfo>
  nameWithType: ImmutableHashSet<FieldInfo>
  fullName: System.Collections.Immutable.ImmutableHashSet<System.Reflection.FieldInfo>
  nameWithType.vb: ImmutableHashSet(Of FieldInfo)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of System.Reflection.FieldInfo)
  name.vb: ImmutableHashSet(Of FieldInfo)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    nameWithType: ImmutableHashSet
    fullName: System.Collections.Immutable.ImmutableHashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    nameWithType: ImmutableHashSet
    fullName: System.Collections.Immutable.ImmutableHashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableHashSet`1
  commentId: T:System.Collections.Immutable.ImmutableHashSet`1
  isExternal: true
  name: ImmutableHashSet<T>
  nameWithType: ImmutableHashSet<T>
  fullName: System.Collections.Immutable.ImmutableHashSet<T>
  nameWithType.vb: ImmutableHashSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of T)
  name.vb: ImmutableHashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    nameWithType: ImmutableHashSet
    fullName: System.Collections.Immutable.ImmutableHashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    nameWithType: ImmutableHashSet
    fullName: System.Collections.Immutable.ImmutableHashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
- uid: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited*
  commentId: Overload:Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited
  name: GetPublicAndPrivateConstantsIncludingInherited
  nameWithType: TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited
  fullName: Landorphan.TestUtilities.TestTypeExtensions.GetPublicAndPrivateConstantsIncludingInherited
- uid: Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT*
  commentId: Overload:Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT
  name: IsNullableOfT
  nameWithType: TestTypeExtensions.IsNullableOfT
  fullName: Landorphan.TestUtilities.TestTypeExtensions.IsNullableOfT
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType*
  commentId: Overload:Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType
  name: IsOrdinalType
  nameWithType: TestTypeExtensions.IsOrdinalType
  fullName: Landorphan.TestUtilities.TestTypeExtensions.IsOrdinalType
