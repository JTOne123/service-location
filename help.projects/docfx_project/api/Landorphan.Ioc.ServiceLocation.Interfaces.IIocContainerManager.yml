### YamlMime:ManagedReference
items:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  id: IIocContainerManager
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  children:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType(System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType``1
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildAdded
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildRemoved
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerConfigurationChanged
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeAdded
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeRemoved
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer(System.String)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType(System.Type)
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType``1
  langs:
  - csharp
  - vb
  name: IIocContainerManager
  nameWithType: IIocContainerManager
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  type: Interface
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IIocContainerManager
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 18
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRepresents the management capabilities of a dependency injection container.\n"
  remarks: "\n<p>\n<xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer\" data-throw-if-not-resolved=\"false\"></xref> works in concert with a <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager\" data-throw-if-not-resolved=\"false\"></xref>, a <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar\" data-throw-if-not-resolved=\"false\"></xref>,  and a <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nThere is not implementation for removing a child container.  If you must remove a child container, call its <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: 'public interface IIocContainerManager : IIocContainerMetaSharedCapacities, IIocContainerMetaIdentity'
    content.vb: >-
      Public Interface IIocContainerManager
          Inherits IIocContainerMetaSharedCapacities
  inheritedMembers:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
  extensionMethods:
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1
  - Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(System.Type)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildAdded
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildAdded
  id: ContainerChildAdded
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: ContainerChildAdded
  nameWithType: IIocContainerManager.ContainerChildAdded
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildAdded
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ContainerChildAdded
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 23
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nOccurs when a child container is added to this container.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerParentChildEventArgs> ContainerChildAdded
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs}
    content.vb: Event ContainerChildAdded As EventHandler(Of ContainerParentChildEventArgs)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildRemoved
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildRemoved
  id: ContainerChildRemoved
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: ContainerChildRemoved
  nameWithType: IIocContainerManager.ContainerChildRemoved
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerChildRemoved
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ContainerChildRemoved
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 28
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nOccurs when a child container is removed from this container.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerParentChildEventArgs> ContainerChildRemoved
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs}
    content.vb: Event ContainerChildRemoved As EventHandler(Of ContainerParentChildEventArgs)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerConfigurationChanged
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerConfigurationChanged
  id: ContainerConfigurationChanged
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: ContainerConfigurationChanged
  nameWithType: IIocContainerManager.ContainerConfigurationChanged
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerConfigurationChanged
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ContainerConfigurationChanged
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 33
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nOccurs when the configuration of this container is changed.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerConfigurationEventArgs> ContainerConfigurationChanged
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs}
    content.vb: Event ContainerConfigurationChanged As EventHandler(Of ContainerConfigurationEventArgs)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeAdded
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeAdded
  id: ContainerPrecludedTypeAdded
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: ContainerPrecludedTypeAdded
  nameWithType: IIocContainerManager.ContainerPrecludedTypeAdded
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeAdded
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ContainerPrecludedTypeAdded
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 38
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nOccurs when a type is precluded with this container.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerTypeEventArgs> ContainerPrecludedTypeAdded
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs}
    content.vb: Event ContainerPrecludedTypeAdded As EventHandler(Of ContainerTypeEventArgs)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeRemoved
  commentId: E:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeRemoved
  id: ContainerPrecludedTypeRemoved
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: ContainerPrecludedTypeRemoved
  nameWithType: IIocContainerManager.ContainerPrecludedTypeRemoved
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.ContainerPrecludedTypeRemoved
  type: Event
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: ContainerPrecludedTypeRemoved
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 43
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nOccurs when a precluded type is removed from this container.\n"
  example: []
  syntax:
    content: event EventHandler<ContainerTypeEventArgs> ContainerPrecludedTypeRemoved
    return:
      type: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs}
    content.vb: Event ContainerPrecludedTypeRemoved As EventHandler(Of ContainerTypeEventArgs)
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration
  id: Configuration
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: IIocContainerManager.Configuration
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: Configuration
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 51
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nGets the configuration settings for this container.\n"
  example: []
  syntax:
    content: IIocContainerConfiguration Configuration { get; }
    parameters: []
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerConfiguration
      description: "\nThe configuration settings for this container.\n"
    content.vb: ReadOnly Property Configuration As IIocContainerConfiguration
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked
  id: IsConfigurationLocked
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: IsConfigurationLocked
  nameWithType: IIocContainerManager.IsConfigurationLocked
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: IsConfigurationLocked
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 59
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nGets a value indicating whether or not the configuration of this instance is locked.\n"
  example: []
  syntax:
    content: bool IsConfigurationLocked { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\nThe value indicating whether or not the configuration of this instance is locked.\n"
    content.vb: ReadOnly Property IsConfigurationLocked As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes
  id: PrecludedTypes
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: PrecludedTypes
  nameWithType: IIocContainerManager.PrecludedTypes
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes
  type: Property
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: PrecludedTypes
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 70
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nGets the collection of types precluded from registration by this container.\n"
  remarks: "\nDoes not include types precluded by parent containers.\n"
  example: []
  syntax:
    content: IReadOnlyCollection<Type> PrecludedTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Type}
      description: "\nA collection of types precluded from registration.\n"
    content.vb: ReadOnly Property PrecludedTypes As IReadOnlyCollection(Of Type)
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType``1
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType``1
  id: AddPrecludedType``1
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: AddPrecludedType<TPrecluded>()
  nameWithType: IIocContainerManager.AddPrecludedType<TPrecluded>()
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType<TPrecluded>()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: AddPrecludedType
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 90
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAdds a precluded type.\n"
  remarks: "\nRemarks precluded types are barred from service location registration.\n"
  example: []
  syntax:
    content: bool AddPrecludedType<TPrecluded>()
    typeParameters:
    - id: TPrecluded
      description: "\nThe type to be precluded from registration.\n"
    return:
      type: System.Boolean
      description: "\n<code> true </code> if successfully added; otherwise <code> false </code>.\n"
    content.vb: Function AddPrecludedType(Of TPrecluded) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.FromTypeMustBeInterfaceOrAbstractTypeArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.FromTypeMustBeInterfaceOrAbstractTypeArgumentException
    description: "\nThrown when <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TPrecluded</code> is neither an interface, nor an abstract class.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
    description: "\nThrown when <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TPrecluded</code> is currently registered.  To resolve, remove the registration before precluding the type.\n"
  nameWithType.vb: IIocContainerManager.AddPrecludedType(Of TPrecluded)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType(Of TPrecluded)()
  name.vb: AddPrecludedType(Of TPrecluded)()
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType(System.Type)
  id: AddPrecludedType(System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: AddPrecludedType(Type)
  nameWithType: IIocContainerManager.AddPrecludedType(Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: AddPrecludedType
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 110
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAdds a precluded type.\n"
  remarks: "\nRemarks precluded types are barred from service location registration.\n"
  example: []
  syntax:
    content: bool AddPrecludedType(Type precludedType)
    parameters:
    - id: precludedType
      type: System.Type
      description: "\nThe type to be precluded from registration.\n"
    return:
      type: System.Boolean
      description: "\n<code> true </code> if successfully added; otherwise <code> false </code> (already precluded).\n"
    content.vb: Function AddPrecludedType(precludedType As Type) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.FromTypeMustBeInterfaceOrAbstractTypeArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.FromTypeMustBeInterfaceOrAbstractTypeArgumentException
    description: "\nThrown when <code data-dev-comment-type=\"paramref\" class=\"paramref\">precludedType</code> is neither an interface, nor an abstract class.\n"
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
    description: "\nThrown when <code data-dev-comment-type=\"paramref\" class=\"paramref\">precludedType</code> is already registered.  Remove the registration before precluding the type.\n"
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer(System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer(System.String)
  id: CreateChildContainer(System.String)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: CreateChildContainer(String)
  nameWithType: IIocContainerManager.CreateChildContainer(String)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: CreateChildContainer
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 124
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nAdds a new child container with the given name.\n"
  remarks: "\nThis instance becomes the owner of the newly created child instance.\n"
  example: []
  syntax:
    content: IIocContainer CreateChildContainer(string name)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the child container.  Name values are trimmed of leading and trailing whitespace, null values are converted to <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
      description: "\nA <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer\" data-throw-if-not-resolved=\"false\"></xref> referencing the child container (can be null).\n"
    content.vb: Function CreateChildContainer(name As String) As IIocContainer
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer*
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration
  id: LockConfiguration
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: LockConfiguration()
  nameWithType: IIocContainerManager.LockConfiguration()
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: LockConfiguration
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 141
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nLocks the configuration of this instance.\n"
  remarks: "\n<p>\nLocking an unlocked configuration makes any further attempts to change the configuration of this\n<xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer\" data-throw-if-not-resolved=\"false\"></xref> throw;  Locking a locked configuration has no effect.\n</p>\n<p>\nOnce locked, the container configuration cannot be unlocked.\n</p>\n"
  example: []
  syntax:
    content: bool LockConfiguration()
    return:
      type: System.Boolean
      description: "\nThe previous lock state.\n"
    content.vb: Function LockConfiguration As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration*
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType``1
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType``1
  id: RemovePrecludedType``1
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: RemovePrecludedType<TPrecluded>()
  nameWithType: IIocContainerManager.RemovePrecludedType<TPrecluded>()
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType<TPrecluded>()
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RemovePrecludedType
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 155
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRemoves a precluded type.\n"
  remarks: "\nThe primary intent of this method is to enable the removal of a precluded type after a test or battery of tests.\n"
  example: []
  syntax:
    content: bool RemovePrecludedType<TPrecluded>()
    typeParameters:
    - id: TPrecluded
      description: "\nThe type to be removed from preclusion.\n"
    return:
      type: System.Boolean
      description: "\n<code> true </code> if successfully removed; otherwise <code> false </code>.\n"
    content.vb: Function RemovePrecludedType(Of TPrecluded) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType*
  nameWithType.vb: IIocContainerManager.RemovePrecludedType(Of TPrecluded)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType(Of TPrecluded)()
  name.vb: RemovePrecludedType(Of TPrecluded)()
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType(System.Type)
  id: RemovePrecludedType(System.Type)
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  langs:
  - csharp
  - vb
  name: RemovePrecludedType(Type)
  nameWithType: IIocContainerManager.RemovePrecludedType(Type)
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType(System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
      branch: mprochaska.restore.abstraction.tests
      repo: https://github.com/landorphan/service-location.git
    id: RemovePrecludedType
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Interfaces/Container/IIocContainerManager.cs
    startLine: 169
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation.Interfaces
  summary: "\nRemoves a precluded type.\n"
  example: []
  syntax:
    content: bool RemovePrecludedType(Type precludedType)
    parameters:
    - id: precludedType
      type: System.Type
      description: "\nThe type to be removed from preclusion.\n"
    return:
      type: System.Boolean
      description: "\n<code> true </code> if successfully removed; otherwise <code> false </code> (not precluded).\n"
    content.vb: Function RemovePrecludedType(precludedType As Type) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType*
  exceptions:
  - type: Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
    commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
    description: "\nThrown when <code data-dev-comment-type=\"paramref\" class=\"paramref\">precludedType</code> is already registered.  Remove the registration before precluding the type.\n"
references:
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainer
  nameWithType: IIocContainer
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainer
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerManager
  nameWithType: IIocContainerManager
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerRegistrar
  nameWithType: IIocContainerRegistrar
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrar
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerResolver
  nameWithType: IIocContainerResolver
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerResolver
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces
  commentId: N:Landorphan.Ioc.ServiceLocation.Interfaces
  name: Landorphan.Ioc.ServiceLocation.Interfaces
  nameWithType: Landorphan.Ioc.ServiceLocation.Interfaces
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Container
  nameWithType: IIocContainerMetaSharedCapacities.Container
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Container
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Manager
  nameWithType: IIocContainerMetaSharedCapacities.Manager
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Manager
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Registrar
  nameWithType: IIocContainerMetaSharedCapacities.Registrar
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Registrar
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  name: Resolver
  nameWithType: IIocContainerMetaSharedCapacities.Resolver
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities.Resolver
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  name: Name
  nameWithType: IIocContainerMetaIdentity.Name
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Name
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
  commentId: P:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
  parent: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  name: Uid
  nameWithType: IIocContainerMetaIdentity.Uid
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity.Uid
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1
  commentId: M:Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
  parent: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
  name: IsPrecluded<TPrecluded>()
  nameWithType: IsPrecludedExtensions.IsPrecluded<TPrecluded>()
  fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded<TPrecluded>()
  nameWithType.vb: IsPrecludedExtensions.IsPrecluded(Of TPrecluded)()
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Of TPrecluded)()
  name.vb: IsPrecluded(Of TPrecluded)()
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1
    name: IsPrecluded<TPrecluded>
    nameWithType: IsPrecludedExtensions.IsPrecluded<TPrecluded>
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded<TPrecluded>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1
    name: IsPrecluded(Of TPrecluded)
    nameWithType: IsPrecludedExtensions.IsPrecluded(Of TPrecluded)
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Of TPrecluded)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager,System.Type)
  parent: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions
  definition: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager,System.Type)
  name: IsPrecluded(Type)
  nameWithType: IsPrecludedExtensions.IsPrecluded(Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(System.Type)
    name: IsPrecluded
    nameWithType: IsPrecludedExtensions.IsPrecluded
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(System.Type)
    name: IsPrecluded
    nameWithType: IsPrecludedExtensions.IsPrecluded
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerMetaSharedCapacities
  nameWithType: IIocContainerMetaSharedCapacities
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaSharedCapacities
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerMetaIdentity
  nameWithType: IIocContainerMetaIdentity
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerMetaIdentity
- uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
  name: IsPrecluded<TPrecluded>(IIocContainerManager)
  nameWithType: IsPrecludedExtensions.IsPrecluded<TPrecluded>(IIocContainerManager)
  fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded<TPrecluded>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
  nameWithType.vb: IsPrecludedExtensions.IsPrecluded(Of TPrecluded)(IIocContainerManager)
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Of TPrecluded)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
  name.vb: IsPrecluded(Of TPrecluded)(IIocContainerManager)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
    name: IsPrecluded<TPrecluded>
    nameWithType: IsPrecludedExtensions.IsPrecluded<TPrecluded>
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded<TPrecluded>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
    name: IIocContainerManager
    nameWithType: IIocContainerManager
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager)
    name: IsPrecluded(Of TPrecluded)
    nameWithType: IsPrecludedExtensions.IsPrecluded(Of TPrecluded)
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Of TPrecluded)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
    name: IIocContainerManager
    nameWithType: IIocContainerManager
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions
  commentId: T:Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions
  parent: Landorphan.Ioc.ServiceLocation
  name: IsPrecludedExtensions
  nameWithType: IsPrecludedExtensions
  fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions
- uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager,System.Type)
  isExternal: true
  name: IsPrecluded(IIocContainerManager, Type)
  nameWithType: IsPrecludedExtensions.IsPrecluded(IIocContainerManager, Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager, System.Type)
  spec.csharp:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager,System.Type)
    name: IsPrecluded
    nameWithType: IsPrecludedExtensions.IsPrecluded
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
    name: IIocContainerManager
    nameWithType: IIocContainerManager
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager,System.Type)
    name: IsPrecluded
    nameWithType: IsPrecludedExtensions.IsPrecluded
    fullName: Landorphan.Ioc.ServiceLocation.IsPrecludedExtensions.IsPrecluded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
    name: IIocContainerManager
    nameWithType: IIocContainerManager
    fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Ioc.ServiceLocation
  commentId: N:Landorphan.Ioc.ServiceLocation
  name: Landorphan.Ioc.ServiceLocation
  nameWithType: Landorphan.Ioc.ServiceLocation
  fullName: Landorphan.Ioc.ServiceLocation
- uid: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs}
  commentId: T:System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ContainerParentChildEventArgs>
  nameWithType: EventHandler<ContainerParentChildEventArgs>
  fullName: System.EventHandler<Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs>
  nameWithType.vb: EventHandler(Of ContainerParentChildEventArgs)
  fullName.vb: System.EventHandler(Of Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs)
  name.vb: EventHandler(Of ContainerParentChildEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs
    name: ContainerParentChildEventArgs
    nameWithType: ContainerParentChildEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs
    name: ContainerParentChildEventArgs
    nameWithType: ContainerParentChildEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerParentChildEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs}
  commentId: T:System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ContainerConfigurationEventArgs>
  nameWithType: EventHandler<ContainerConfigurationEventArgs>
  fullName: System.EventHandler<Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs>
  nameWithType.vb: EventHandler(Of ContainerConfigurationEventArgs)
  fullName.vb: System.EventHandler(Of Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs)
  name.vb: EventHandler(Of ContainerConfigurationEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs
    name: ContainerConfigurationEventArgs
    nameWithType: ContainerConfigurationEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs
    name: ContainerConfigurationEventArgs
    nameWithType: ContainerConfigurationEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerConfigurationEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs}
  commentId: T:System.EventHandler{Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ContainerTypeEventArgs>
  nameWithType: EventHandler<ContainerTypeEventArgs>
  fullName: System.EventHandler<Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs>
  nameWithType.vb: EventHandler(Of ContainerTypeEventArgs)
  fullName.vb: System.EventHandler(Of Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs)
  name.vb: EventHandler(Of ContainerTypeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs
    name: ContainerTypeEventArgs
    nameWithType: ContainerTypeEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs
    name: ContainerTypeEventArgs
    nameWithType: ContainerTypeEventArgs
    fullName: Landorphan.Ioc.ServiceLocation.EventArguments.ContainerTypeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration
  name: Configuration
  nameWithType: IIocContainerManager.Configuration
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.Configuration
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerConfiguration
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerConfiguration
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerConfiguration
  nameWithType: IIocContainerConfiguration
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerConfiguration
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked
  name: IsConfigurationLocked
  nameWithType: IIocContainerManager.IsConfigurationLocked
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.IsConfigurationLocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes
  name: PrecludedTypes
  nameWithType: IIocContainerManager.PrecludedTypes
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.PrecludedTypes
- uid: System.Collections.Generic.IReadOnlyCollection{System.Type}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Type>
  nameWithType: IReadOnlyCollection<Type>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Type>
  nameWithType.vb: IReadOnlyCollection(Of Type)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Type)
  name.vb: IReadOnlyCollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.FromTypeMustBeInterfaceOrAbstractTypeArgumentException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.FromTypeMustBeInterfaceOrAbstractTypeArgumentException
  name: FromTypeMustBeInterfaceOrAbstractTypeArgumentException
  nameWithType: FromTypeMustBeInterfaceOrAbstractTypeArgumentException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.FromTypeMustBeInterfaceOrAbstractTypeArgumentException
- uid: Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
  commentId: T:Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
  name: CannotPrecludeRegisteredTypeArgumentException
  nameWithType: CannotPrecludeRegisteredTypeArgumentException
  fullName: Landorphan.Ioc.ServiceLocation.Exceptions.CannotPrecludeRegisteredTypeArgumentException
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType
  name: AddPrecludedType
  nameWithType: IIocContainerManager.AddPrecludedType
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.AddPrecludedType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer
  name: CreateChildContainer
  nameWithType: IIocContainerManager.CreateChildContainer
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.CreateChildContainer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration
  name: LockConfiguration
  nameWithType: IIocContainerManager.LockConfiguration
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.LockConfiguration
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType
  name: RemovePrecludedType
  nameWithType: IIocContainerManager.RemovePrecludedType
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerManager.RemovePrecludedType
