### YamlMime:ManagedReference
items:
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  commentId: T:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  id: IsRegisteredExtensions
  parent: Landorphan.Ioc.ServiceLocation
  children:
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  - Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  langs:
  - csharp
  - vb
  name: IsRegisteredExtensions
  nameWithType: IsRegisteredExtensions
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  type: Class
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegisteredExtensions
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 10
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nExtension methods for IoC.\n"
  example: []
  syntax:
    content: public static class IsRegisteredExtensions
    content.vb: Public Module IsRegisteredExtensions
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  id: IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegistered<TFrom>(IIocContainerRegistrationRepository)
  nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>(IIocContainerRegistrationRepository)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegistered
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 28
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a default registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: >-
      public static bool IsRegistered<TFrom>(this IIocContainerRegistrationRepository container)

          where TFrom : class
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe abstract or interface type to check.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a default registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type;\notherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegistered(Of TFrom As Class)(container As IIocContainerRegistrationRepository) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered*
  nameWithType.vb: IsRegisteredExtensions.IsRegistered(Of TFrom)(IIocContainerRegistrationRepository)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name.vb: IsRegistered(Of TFrom)(IIocContainerRegistrationRepository)
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  id: IsRegistered``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegistered<TFrom>(IIocContainerRegistrationRepository, String)
  nameWithType: IsRegisteredExtensions.IsRegistered<TFrom>(IIocContainerRegistrationRepository, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegistered
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 54
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a named registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: public static bool IsRegistered<TFrom>(this IIocContainerRegistrationRepository container, string name)
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    - id: name
      type: System.String
      description: "\nThe name to check, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or whitespace to check for the default registration of the given type.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe abstract or interface type to check.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a named registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type that matches <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>;\notherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegistered(Of TFrom)(container As IIocContainerRegistrationRepository, name As String) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered*
  nameWithType.vb: IsRegisteredExtensions.IsRegistered(Of TFrom)(IIocContainerRegistrationRepository, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  name.vb: IsRegistered(Of TFrom)(IIocContainerRegistrationRepository, String)
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  id: IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegistered(IIocContainerRegistrationRepository, Type)
  nameWithType: IsRegisteredExtensions.IsRegistered(IIocContainerRegistrationRepository, Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegistered
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 87
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a default registration for the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: public static bool IsRegistered(this IIocContainerRegistrationRepository container, Type fromType)
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    - id: fromType
      type: System.Type
      description: "\nThe abstract or interface type to check.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a default registration for the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type;\notherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegistered(container As IIocContainerRegistrationRepository, fromType As Type) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  id: IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegistered(IIocContainerRegistrationRepository, Type, String)
  nameWithType: IsRegisteredExtensions.IsRegistered(IIocContainerRegistrationRepository, Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegistered
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 114
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given container identified by the <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository\" data-throw-if-not-resolved=\"false\"></xref>, contains a named <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> registration for the\ngiven <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n"
  remarks: "\nThe chain of parent(s) and children is not evaluated.\n"
  example: []
  syntax:
    content: public static bool IsRegistered(this IIocContainerRegistrationRepository container, Type fromType, string name)
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    - id: fromType
      type: System.Type
      description: "\nThe abstract or interface type to check.\n"
    - id: name
      type: System.String
      description: "\nThe name to check, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or whitespace to check for the default registration of the given type.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a named registration for the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type that matches <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>;\notherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegistered(container As IIocContainerRegistrationRepository, fromType As Type, name As String) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  id: IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegisteredChain
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 143
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, or its chain of parents, contains a default registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type.\n"
  example: []
  syntax:
    content: >-
      public static bool IsRegisteredChain<TFrom>(this IIocContainerRegistrationRepository container)

          where TFrom : class
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe abstract or interface type to check.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, or its chain of parents, contains a default registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type;\notherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegisteredChain(Of TFrom As Class)(container As IIocContainerRegistrationRepository) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain*
  nameWithType.vb: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository)
  name.vb: IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository)
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  id: IsRegisteredChain``1(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.String)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository, String)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain<TFrom>(IIocContainerRegistrationRepository, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain<TFrom>(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegisteredChain
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 165
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, or its chain of parents, contains a default registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type.\n"
  example: []
  syntax:
    content: >-
      public static bool IsRegisteredChain<TFrom>(this IIocContainerRegistrationRepository container, string name)

          where TFrom : class
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    - id: name
      type: System.String
      description: "\nThe name to check, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or whitespace to check for the default registration of the given type.\n"
    typeParameters:
    - id: TFrom
      description: "\nThe abstract or interface type to check.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, contains a named registration for the given <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TFrom</code> type that matches <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>;\notherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegisteredChain(Of TFrom As Class)(container As IIocContainerRegistrationRepository, name As String) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain*
  nameWithType.vb: IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Of TFrom)(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.String)
  name.vb: IsRegisteredChain(Of TFrom)(IIocContainerRegistrationRepository, String)
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  id: IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegisteredChain(IIocContainerRegistrationRepository, Type)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain(IIocContainerRegistrationRepository, Type)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegisteredChain
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 209
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, or its chain of parents, contains a default registration for the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n"
  remarks: "\n<code>true</code> if the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, or its chain of parents, contains a default registration for the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type;\notherwise <code>false</code>.\n"
  example: []
  syntax:
    content: public static bool IsRegisteredChain(this IIocContainerRegistrationRepository container, Type fromType)
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    - id: fromType
      type: System.Type
      description: "\nThe abstract or interface type to check.\n"
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegisteredChain(container As IIocContainerRegistrationRepository, fromType As Type) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  commentId: M:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  id: IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository,System.Type,System.String)
  isExtensionMethod: true
  parent: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions
  langs:
  - csharp
  - vb
  name: IsRegisteredChain(IIocContainerRegistrationRepository, Type, String)
  nameWithType: IsRegisteredExtensions.IsRegisteredChain(IIocContainerRegistrationRepository, Type, String)
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain(Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository, System.Type, System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
      branch: mprochaska.documentation.1
      repo: https://github.com/landorphan/service-location.git
    id: IsRegisteredChain
    path: ../../source/Landorphan.Ioc.ServiceLocation/ServiceLocation/Extensions/IsRegisteredExtensions.cs
    startLine: 232
  assemblies:
  - Landorphan.Ioc.ServiceLocation
  namespace: Landorphan.Ioc.ServiceLocation
  summary: "\nDetermines whether or not the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> container, or its chain of parents, contains a named registration for the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type.\n"
  example: []
  syntax:
    content: public static bool IsRegisteredChain(this IIocContainerRegistrationRepository container, Type fromType, string name)
    parameters:
    - id: container
      type: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
      description: "\nThe container (registrar or resolver) to inspect.\n"
    - id: fromType
      type: System.Type
      description: "\nThe abstract or interface type to check.\n"
    - id: name
      type: System.String
      description: "\nThe name to check, use <code> null </code> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or whitespace to check for the default registration of the given type.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the given the identified container <xref href=\"Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository\" data-throw-if-not-resolved=\"false\"></xref>, contains a named registration with the given name <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> for the\ngiven <code data-dev-comment-type=\"paramref\" class=\"paramref\">fromType</code> type; otherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRegisteredChain(container As IIocContainerRegistrationRepository, fromType As Type, name As String) As Boolean
  overload: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Landorphan.Ioc.ServiceLocation
  commentId: N:Landorphan.Ioc.ServiceLocation
  name: Landorphan.Ioc.ServiceLocation
  nameWithType: Landorphan.Ioc.ServiceLocation
  fullName: Landorphan.Ioc.ServiceLocation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
  name: IsRegistered
  nameWithType: IsRegisteredExtensions.IsRegistered
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegistered
- uid: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  commentId: T:Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
  parent: Landorphan.Ioc.ServiceLocation.Interfaces
  name: IIocContainerRegistrationRepository
  nameWithType: IIocContainerRegistrationRepository
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces.IIocContainerRegistrationRepository
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Landorphan.Ioc.ServiceLocation.Interfaces
  commentId: N:Landorphan.Ioc.ServiceLocation.Interfaces
  name: Landorphan.Ioc.ServiceLocation.Interfaces
  nameWithType: Landorphan.Ioc.ServiceLocation.Interfaces
  fullName: Landorphan.Ioc.ServiceLocation.Interfaces
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain*
  commentId: Overload:Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
  name: IsRegisteredChain
  nameWithType: IsRegisteredExtensions.IsRegisteredChain
  fullName: Landorphan.Ioc.ServiceLocation.IsRegisteredExtensions.IsRegisteredChain
