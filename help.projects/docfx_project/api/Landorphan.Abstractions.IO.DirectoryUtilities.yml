### YamlMime:ManagedReference
items:
- uid: Landorphan.Abstractions.IO.DirectoryUtilities
  commentId: T:Landorphan.Abstractions.IO.DirectoryUtilities
  id: DirectoryUtilities
  parent: Landorphan.Abstractions.IO
  children:
  - Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory
  - Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName
  - Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath
  - Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  - Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  - Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
  - Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory(System.String)
  - Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
  - Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
  langs:
  - csharp
  - vb
  name: DirectoryUtilities
  nameWithType: DirectoryUtilities
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities
  type: Class
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: DirectoryUtilities
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 10
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nDefault implementation of <xref href=\"Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class DirectoryUtilities : IDirectoryUtilities'
    content.vb: >-
      Public NotInheritable Class DirectoryUtilities
          Implements IDirectoryUtilities
  inheritance:
  - System.Object
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  commentId: P:Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  id: MaximumFileTimeAsDateTimeOffset
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: MaximumFileTimeAsDateTimeOffset
  nameWithType: DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: MaximumFileTimeAsDateTimeOffset
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 13
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nGets the maximum file time as a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DateTimeOffset MaximumFileTimeAsDateTimeOffset { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\nThe maximum file time as a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public ReadOnly Property MaximumFileTimeAsDateTimeOffset As DateTimeOffset
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset*
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  commentId: P:Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  id: MinimumFileTimeAsDateTimeOffset
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: MinimumFileTimeAsDateTimeOffset
  nameWithType: DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  type: Property
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: MinimumFileTimeAsDateTimeOffset
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 23
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nGets the minimum file time as a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DateTimeOffset MinimumFileTimeAsDateTimeOffset { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\nThe minimum file time as a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public ReadOnly Property MinimumFileTimeAsDateTimeOffset As DateTimeOffset
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset*
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: CreateDirectory(String)
  nameWithType: DirectoryUtilities.CreateDirectory(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: CreateDirectory
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 33
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nCreates all directories and subdirectories in the specified path.\n"
  example: []
  syntax:
    content: public string CreateDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe directory path to create.\n"
    return:
      type: System.String
      description: "\nAn object that represents the directory for the specified path.\n"
    content.vb: Public Function CreateDirectory(path As String) As String
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nThe directory specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a file.\n-or-\nThe network name is not known.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is prefixed with, or contains only a colon character (:).\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified path is invalid (for example, it is on an unmapped drive).\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> contains a colon character (:) that is not part of a drive label (e.g., &quot;C:\\&quot;).\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty(System.String)
  id: DeleteEmpty(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: DeleteEmpty(String)
  nameWithType: DirectoryUtilities.DeleteEmpty(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: DeleteEmpty
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 40
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nDeletes an empty directory from a specified path.\n"
  example: []
  syntax:
    content: public void DeleteEmpty(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe name of the empty directory to remove. This directory must be writable or empty.\n"
    content.vb: Public Sub DeleteEmpty(path As String)
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nA file with the same name and location specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> exists.\n-or-\nThe directory is the application&apos;s current working directory.\n-or-\nThe directory specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is not empty.\n-or-\nThe directory is read-only or contains a read-only file.\n-or-\nThe directory is being used by another process.\n-or-\nThere is an open handle on the directory, and\nthe operating system is Windows XP or earlier. This open handle can result from directories. For\nmore information, see How to: Enumerate Directories and Files.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> does not exist or could not be found.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> refers to a file instead of a directory.\n-or-\nThe specified path is invalid (for example, it is on an unmapped drive).\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively(System.String)
  id: DeleteRecursively(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: DeleteRecursively(String)
  nameWithType: DirectoryUtilities.DeleteRecursively(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: DeleteRecursively
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 47
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nDeletes the specified directory and any subdirectories and files in the directory.\n"
  example: []
  syntax:
    content: public void DeleteRecursively(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe name of the directory to remove.\n"
    content.vb: Public Sub DeleteRecursively(path As String)
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nA file with the same name and location specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> exists.\n-or-\nThe directory specified by <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is read-only.\n-or-\nThe directory is the application&apos;s current working directory. \n-or-\nThe directory contains a read-only file.\n-or-\nThe directory is being used by another process.There is an open handle on the directory or on one of its files, and the operating\nsystem is Windows XP or earlier. This open handle can result from enumerating directories and\nfiles. For more information, see How to: Enumerate Directories and Files.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> does not exist or could not be found.\n-or-\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> refers to a file instead of a directory.\n-or-\nThe specified path is invalid (for example, it is on an unmapped drive).\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: DirectoryExists(String)
  nameWithType: DirectoryUtilities.DirectoryExists(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: DirectoryExists
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 54
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nDetermines whether the given path refers to an existing directory on disk.\n"
  example: []
  syntax:
    content: public bool DirectoryExists(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe path to test.\n"
    return:
      type: System.Boolean
      description: "\ntrue if <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> refers to an existing directory; otherwise, false.\n"
    content.vb: Public Function DirectoryExists(path As String) As Boolean
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists*
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: GetCreationTime(String)
  nameWithType: DirectoryUtilities.GetCreationTime(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetCreationTime
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 61
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nGets the creation date and time of a directory.\n"
  example: []
  syntax:
    content: public DateTimeOffset GetCreationTime(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe path of the directory.\n"
    return:
      type: System.DateTimeOffset
      description: "\nA structure that is set to the creation date and time for the specified directory.\n"
    content.vb: Public Function GetCreationTime(path As String) As DateTimeOffset
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory
  id: GetCurrentDirectory
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: GetCurrentDirectory()
  nameWithType: DirectoryUtilities.GetCurrentDirectory()
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetCurrentDirectory
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 68
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nGets the current working directory of the application.\n"
  example: []
  syntax:
    content: public string GetCurrentDirectory()
    return:
      type: System.String
      description: "\nA string that contains the path of the current working directory, and does not end with a backslash (\\).\n"
    content.vb: Public Function GetCurrentDirectory As String
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThe operating system is Windows CE, which does not have current directory functionality. This\nmethod is available in the .NET Compact Framework, but is not currently supported.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: GetLastAccessTime(String)
  nameWithType: DirectoryUtilities.GetLastAccessTime(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetLastAccessTime
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 75
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nReturns the date and time the specified file or directory was last accessed.\n"
  example: []
  syntax:
    content: public DateTimeOffset GetLastAccessTime(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file or directory for which to obtain access date and time information.\n"
    return:
      type: System.DateTimeOffset
      description: "\nA structure that is set to the date and time the specified file or directory was last accessed.\ntime.\n"
    content.vb: Public Function GetLastAccessTime(path As String) As DateTimeOffset
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> parameter is in an invalid format.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: GetLastWriteTime(String)
  nameWithType: DirectoryUtilities.GetLastWriteTime(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetLastWriteTime
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 82
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nReturns the date and time the specified file or directory was last written to.\n"
  example: []
  syntax:
    content: public DateTimeOffset GetLastWriteTime(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file or directory for which to obtain modification date and time information.\n"
    return:
      type: System.DateTimeOffset
      description: "\nA structure that is set to the date and time the specified file or directory was last written to.\ntime.\n"
    content.vb: Public Function GetLastWriteTime(path As String) As DateTimeOffset
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName
  id: GetRandomDirectoryName
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: GetRandomDirectoryName()
  nameWithType: DirectoryUtilities.GetRandomDirectoryName()
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetRandomDirectoryName
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 89
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nGenerates a a cryptographically strong, random string that can be used as a directory name.\n"
  remarks: "\nDoes not create a directory.\n"
  example: []
  syntax:
    content: public string GetRandomDirectoryName()
    return:
      type: System.String
      description: "\nA random directory name.\n"
    content.vb: Public Function GetRandomDirectoryName As String
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName*
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath
  id: GetTemporaryDirectoryPath
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: GetTemporaryDirectoryPath()
  nameWithType: DirectoryUtilities.GetTemporaryDirectoryPath()
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath()
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: GetTemporaryDirectoryPath
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 96
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nReturns the path of the current user&apos;s temporary folder.\n"
  example: []
  syntax:
    content: public string GetTemporaryDirectoryPath()
    return:
      type: System.String
      description: "\nThe path to the temporary folder, ending with a backslash.\n"
    content.vb: Public Function GetTemporaryDirectoryPath As String
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permissions.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
  id: SetCreationTime(System.String,System.DateTimeOffset)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: SetCreationTime(String, DateTimeOffset)
  nameWithType: DirectoryUtilities.SetCreationTime(String, DateTimeOffset)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime(System.String, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: SetCreationTime
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 103
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nSets the creation date and time for the specified file or directory.\n"
  example: []
  syntax:
    content: public void SetCreationTime(string path, DateTimeOffset creationTime)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file or directory for which to set the creation date and time information.\n"
    - id: creationTime
      type: System.DateTimeOffset
      description: "\nAn object that contains the value to set for the creation date and time of <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    content.vb: Public Sub SetCreationTime(path As String, creationTime As DateTimeOffset)
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe specified path was not found.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">creationTime</code> specifies a value outside the range of dates or times\npermitted for this operation.\n"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\nThe current operating system is not Windows NT or later.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory(System.String)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory(System.String)
  id: SetCurrentDirectory(System.String)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: SetCurrentDirectory(String)
  nameWithType: DirectoryUtilities.SetCurrentDirectory(String)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory(System.String)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: SetCurrentDirectory
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 110
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nSets the application&apos;s current working directory to the specified directory.\n"
  example: []
  syntax:
    content: public void SetCurrentDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe path to which the current working directory is set.\n"
    content.vb: Public Sub SetCurrentDirectory(path As String)
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\nAn I/O error occurred.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nThe caller does not have the required permission to access unmanaged code.\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe specified path was not found.\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\nThe specified directory was not found.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
  id: SetLastAccessTime(System.String,System.DateTimeOffset)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: SetLastAccessTime(String, DateTimeOffset)
  nameWithType: DirectoryUtilities.SetLastAccessTime(String, DateTimeOffset)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime(System.String, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: SetLastAccessTime
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 117
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nSets the date and time the specified file or directory was last accessed.\n"
  example: []
  syntax:
    content: public void SetLastAccessTime(string path, DateTimeOffset lastAccessTime)
    parameters:
    - id: path
      type: System.String
      description: "\nThe file or directory for which to set the access date and time information.\n"
    - id: lastAccessTime
      type: System.DateTimeOffset
      description: "\nAn object that contains the value to set for the access date and time of <code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code>.\n"
    content.vb: Public Sub SetLastAccessTime(path As String, lastAccessTime As DateTimeOffset)
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe specified path was not found.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\nThe current operating system is not Windows NT or later.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">lastAccessTime</code> specifies a value outside the range of dates or times\npermitted for this operation.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
  commentId: M:Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
  id: SetLastWriteTime(System.String,System.DateTimeOffset)
  parent: Landorphan.Abstractions.IO.DirectoryUtilities
  langs:
  - csharp
  - vb
  name: SetLastWriteTime(String, DateTimeOffset)
  nameWithType: DirectoryUtilities.SetLastWriteTime(String, DateTimeOffset)
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime(System.String, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
      branch: develop
      repo: https://github.com/landorphan/service-location.git
    id: SetLastWriteTime
    path: ../../source/Landorphan.Abstractions/IO/DirectoryUtilities.cs
    startLine: 124
  assemblies:
  - Landorphan.Abstractions
  namespace: Landorphan.Abstractions.IO
  summary: "\nSets the date and time a directory was last written to.\n"
  example: []
  syntax:
    content: public void SetLastWriteTime(string path, DateTimeOffset lastWriteTime)
    parameters:
    - id: path
      type: System.String
      description: "\nThe path of the directory.\n"
    - id: lastWriteTime
      type: System.DateTimeOffset
      description: "\nThe date and time the directory was last written to.\n"
    content.vb: Public Sub SetLastWriteTime(path As String, lastWriteTime As DateTimeOffset)
  overload: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\nThe specified path was not found.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is a zero-length string, contains only white space, or contains one or\nmore invalid characters as defined by\n<xref href=\"Landorphan.Abstractions.IO.Interfaces.IPathUtilities.GetInvalidPathCharacters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">path</code> is null.\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\nThe specified path, file name, or both exceed the system-defined maximum length.\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\nThe caller does not have the required permission.\n"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\nThe current operating system is not Windows NT or later.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">lastWriteTime</code> specifies a value outside the range of dates or times\npermitted for this operation.\n"
  implements:
  - Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  commentId: T:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  parent: Landorphan.Abstractions.IO.Interfaces
  name: IDirectoryUtilities
  nameWithType: IDirectoryUtilities
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
- uid: Landorphan.Abstractions.IO
  commentId: N:Landorphan.Abstractions.IO
  name: Landorphan.Abstractions.IO
  nameWithType: Landorphan.Abstractions.IO
  fullName: Landorphan.Abstractions.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Landorphan.Abstractions.IO.Interfaces
  commentId: N:Landorphan.Abstractions.IO.Interfaces
  name: Landorphan.Abstractions.IO.Interfaces
  nameWithType: Landorphan.Abstractions.IO.Interfaces
  fullName: Landorphan.Abstractions.IO.Interfaces
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  name: MaximumFileTimeAsDateTimeOffset
  nameWithType: DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.MaximumFileTimeAsDateTimeOffset
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  commentId: P:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  name: MaximumFileTimeAsDateTimeOffset
  nameWithType: IDirectoryUtilities.MaximumFileTimeAsDateTimeOffset
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MaximumFileTimeAsDateTimeOffset
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  name: MinimumFileTimeAsDateTimeOffset
  nameWithType: DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.MinimumFileTimeAsDateTimeOffset
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  commentId: P:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  name: MinimumFileTimeAsDateTimeOffset
  nameWithType: IDirectoryUtilities.MinimumFileTimeAsDateTimeOffset
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.MinimumFileTimeAsDateTimeOffset
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory
  name: CreateDirectory
  nameWithType: DirectoryUtilities.CreateDirectory
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.CreateDirectory
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: CreateDirectory(String)
  nameWithType: IDirectoryUtilities.CreateDirectory(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory(System.String)
    name: CreateDirectory
    nameWithType: IDirectoryUtilities.CreateDirectory
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory(System.String)
    name: CreateDirectory
    nameWithType: IDirectoryUtilities.CreateDirectory
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.CreateDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: System.UnauthorizedAccessException
  commentId: T:System.UnauthorizedAccessException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.IO.PathTooLongException
  commentId: T:System.IO.PathTooLongException
  isExternal: true
- uid: System.IO.DirectoryNotFoundException
  commentId: T:System.IO.DirectoryNotFoundException
  isExternal: true
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty
  name: DeleteEmpty
  nameWithType: DirectoryUtilities.DeleteEmpty
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteEmpty
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: DeleteEmpty(String)
  nameWithType: IDirectoryUtilities.DeleteEmpty(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty(System.String)
    name: DeleteEmpty
    nameWithType: IDirectoryUtilities.DeleteEmpty
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty(System.String)
    name: DeleteEmpty
    nameWithType: IDirectoryUtilities.DeleteEmpty
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteEmpty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively
  name: DeleteRecursively
  nameWithType: DirectoryUtilities.DeleteRecursively
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.DeleteRecursively
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: DeleteRecursively(String)
  nameWithType: IDirectoryUtilities.DeleteRecursively(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively(System.String)
    name: DeleteRecursively
    nameWithType: IDirectoryUtilities.DeleteRecursively
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively(System.String)
    name: DeleteRecursively
    nameWithType: IDirectoryUtilities.DeleteRecursively
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DeleteRecursively
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists
  name: DirectoryExists
  nameWithType: DirectoryUtilities.DirectoryExists
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.DirectoryExists
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: DirectoryExists(String)
  nameWithType: IDirectoryUtilities.DirectoryExists(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists(System.String)
    name: DirectoryExists
    nameWithType: IDirectoryUtilities.DirectoryExists
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists(System.String)
    name: DirectoryExists
    nameWithType: IDirectoryUtilities.DirectoryExists
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.DirectoryExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime
  name: GetCreationTime
  nameWithType: DirectoryUtilities.GetCreationTime
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetCreationTime
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: GetCreationTime(String)
  nameWithType: IDirectoryUtilities.GetCreationTime(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime(System.String)
    name: GetCreationTime
    nameWithType: IDirectoryUtilities.GetCreationTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime(System.String)
    name: GetCreationTime
    nameWithType: IDirectoryUtilities.GetCreationTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCreationTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory
  name: GetCurrentDirectory
  nameWithType: DirectoryUtilities.GetCurrentDirectory
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetCurrentDirectory
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  name: GetCurrentDirectory()
  nameWithType: IDirectoryUtilities.GetCurrentDirectory()
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory()
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory
    name: GetCurrentDirectory
    nameWithType: IDirectoryUtilities.GetCurrentDirectory
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory
    name: GetCurrentDirectory
    nameWithType: IDirectoryUtilities.GetCurrentDirectory
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetCurrentDirectory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime
  name: GetLastAccessTime
  nameWithType: DirectoryUtilities.GetLastAccessTime
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastAccessTime
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: GetLastAccessTime(String)
  nameWithType: IDirectoryUtilities.GetLastAccessTime(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime(System.String)
    name: GetLastAccessTime
    nameWithType: IDirectoryUtilities.GetLastAccessTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime(System.String)
    name: GetLastAccessTime
    nameWithType: IDirectoryUtilities.GetLastAccessTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastAccessTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime
  name: GetLastWriteTime
  nameWithType: DirectoryUtilities.GetLastWriteTime
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetLastWriteTime
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: GetLastWriteTime(String)
  nameWithType: IDirectoryUtilities.GetLastWriteTime(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime(System.String)
    name: GetLastWriteTime
    nameWithType: IDirectoryUtilities.GetLastWriteTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime(System.String)
    name: GetLastWriteTime
    nameWithType: IDirectoryUtilities.GetLastWriteTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetLastWriteTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName
  name: GetRandomDirectoryName
  nameWithType: DirectoryUtilities.GetRandomDirectoryName
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetRandomDirectoryName
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  name: GetRandomDirectoryName()
  nameWithType: IDirectoryUtilities.GetRandomDirectoryName()
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName()
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName
    name: GetRandomDirectoryName
    nameWithType: IDirectoryUtilities.GetRandomDirectoryName
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName
    name: GetRandomDirectoryName
    nameWithType: IDirectoryUtilities.GetRandomDirectoryName
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetRandomDirectoryName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath
  name: GetTemporaryDirectoryPath
  nameWithType: DirectoryUtilities.GetTemporaryDirectoryPath
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.GetTemporaryDirectoryPath
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  name: GetTemporaryDirectoryPath()
  nameWithType: IDirectoryUtilities.GetTemporaryDirectoryPath()
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath()
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath
    name: GetTemporaryDirectoryPath
    nameWithType: IDirectoryUtilities.GetTemporaryDirectoryPath
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath
    name: GetTemporaryDirectoryPath
    nameWithType: IDirectoryUtilities.GetTemporaryDirectoryPath
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.GetTemporaryDirectoryPath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime
  name: SetCreationTime
  nameWithType: DirectoryUtilities.SetCreationTime
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetCreationTime
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: SetCreationTime(String, DateTimeOffset)
  nameWithType: IDirectoryUtilities.SetCreationTime(String, DateTimeOffset)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime(System.String, System.DateTimeOffset)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
    name: SetCreationTime
    nameWithType: IDirectoryUtilities.SetCreationTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime(System.String,System.DateTimeOffset)
    name: SetCreationTime
    nameWithType: IDirectoryUtilities.SetCreationTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCreationTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.PlatformNotSupportedException
  commentId: T:System.PlatformNotSupportedException
  isExternal: true
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory
  name: SetCurrentDirectory
  nameWithType: DirectoryUtilities.SetCurrentDirectory
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetCurrentDirectory
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory(System.String)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory(System.String)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: SetCurrentDirectory(String)
  nameWithType: IDirectoryUtilities.SetCurrentDirectory(String)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory(System.String)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory(System.String)
    name: SetCurrentDirectory
    nameWithType: IDirectoryUtilities.SetCurrentDirectory
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory(System.String)
    name: SetCurrentDirectory
    nameWithType: IDirectoryUtilities.SetCurrentDirectory
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetCurrentDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime
  name: SetLastAccessTime
  nameWithType: DirectoryUtilities.SetLastAccessTime
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastAccessTime
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: SetLastAccessTime(String, DateTimeOffset)
  nameWithType: IDirectoryUtilities.SetLastAccessTime(String, DateTimeOffset)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime(System.String, System.DateTimeOffset)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
    name: SetLastAccessTime
    nameWithType: IDirectoryUtilities.SetLastAccessTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime(System.String,System.DateTimeOffset)
    name: SetLastAccessTime
    nameWithType: IDirectoryUtilities.SetLastAccessTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastAccessTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime*
  commentId: Overload:Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime
  name: SetLastWriteTime
  nameWithType: DirectoryUtilities.SetLastWriteTime
  fullName: Landorphan.Abstractions.IO.DirectoryUtilities.SetLastWriteTime
- uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
  commentId: M:Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
  parent: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities
  isExternal: true
  name: SetLastWriteTime(String, DateTimeOffset)
  nameWithType: IDirectoryUtilities.SetLastWriteTime(String, DateTimeOffset)
  fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime(System.String, System.DateTimeOffset)
  spec.csharp:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
    name: SetLastWriteTime
    nameWithType: IDirectoryUtilities.SetLastWriteTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime(System.String,System.DateTimeOffset)
    name: SetLastWriteTime
    nameWithType: IDirectoryUtilities.SetLastWriteTime
    fullName: Landorphan.Abstractions.IO.Interfaces.IDirectoryUtilities.SetLastWriteTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
