# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Landorphan.Ioc.ServiceLocation.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- script: |
   echo Write your commands here
   
   mkdir "$(Build.BinariesDirectory)/raw-build"
   dir "$(Build.BinariesDirectory)/raw-build"
   set
   
   echo ""
   echo ""
   echo "dotnet --list-runtimes"
   dotnet --list-runtimes
   echo ""
   echo ""
   echo "dotnet --list-sdks"
   dotnet --list-sdks
   echo ""
   echo ""
   
   echo Use the environment variables input below to pass secret variables to this script
  displayName: 'Display Environment Info & Setup'

- script: |
   echo Write your commands here
   
   mkdir %AGENT_BUILDDIRECTORY%\d
   
   echo Use the environment variables input below to pass secret variables to this script
  displayName: 'Create Dependency Directory'

- task: DotNetCoreCLI@2
  displayName: 'Download AzureSignTool'
  inputs:
    command: custom
    custom: tool
    arguments: 'install AzureSignTool --version 2.0.17 --tool-path $(Agent.BuildDirectory)\d'

- bash: |
   # Write your commands here
   
   convert_path() {
     echo $(echo "/$1" | sed 's/\\/\//g' | sed 's/://' | sed -e 's/\(.*\)/\L\1/')
   }
   
   TOOL_PATH="$(echo $(convert_path '$(Agent.BuildDirectory)\d\NuGetKeyVaultSignTool.zip'))"
   
   echo $TOOL_PATH
   
   curl -o "$TOOL_PATH" "https://lndfbuild.blob.core.windows.net/utils/NuGetKeyVaultSignTool.zip"
   
   # Use the environment variables input below to pass secret variables to this script
  displayName: 'Download NuGetKeyVaultSignTool.zip'

- powershell: |
   # Write your powershell commands here.
   
   Expand-Archive -Path "$(Agent.BuildDirectory)\d\NuGetKeyVaultSignTool.zip" -DestinationPath "$(Agent.BuildDirectory)\d\"
   
   # Use the environment variables input below to pass secret variables to this script.
  displayName: 'Unzip NuGetKeyVaultSignTool.zip into Agent.BuildDirectory\\d'

- task: eliostruyf.build-task.custom-build-task.file-creator@2
  displayName: 'Create sign.cs File'
  inputs:
    fileoverwrite: true
    filepath: '$(Build.SourcesDirectory)\sign.cs'
    filecontent: |
     using System.Reflection;
     
     [assembly:AssemblyKeyFileAttribute(@"$(Agent.TempDirectory)\Landorphan-Light.snk")]
     
- task: DownloadSecureFile@1
  displayName: 'Download Key.Snk'
  inputs:
    secureFile: 'Landorphan-Light.snk'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
